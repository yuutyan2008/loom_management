-e 

=========================================================
-e ファイル: app/assets/config/manifest.js
-e =========================================================

[1mdiff --git a/app/assets/config/manifest.js b/app/assets/config/manifest.js[m
[1mindex b06fc42..6ac5bab 100644[m
[1m--- a/app/assets/config/manifest.js[m
[1m+++ b/app/assets/config/manifest.js[m
[36m@@ -1,5 +1,4 @@[m
 //= link_tree ../images[m
 //= link_directory ../stylesheets .css[m
[31m-//= link_tree ../../javascript .js[m
 //= link_tree ../../../vendor/javascript .js[m
 //= link_tree ../builds[m
-e 

=========================================================
-e ファイル: app/assets/stylesheets/application.css
-e =========================================================

[1mdiff --git a/app/assets/stylesheets/application.css b/app/assets/stylesheets/application.css[m
[1mindex 4b0734c..99a10c6 100644[m
[1m--- a/app/assets/stylesheets/application.css[m
[1m+++ b/app/assets/stylesheets/application.css[m
[36m@@ -39,3 +39,24 @@[m [mselect:focus {[m
   box-shadow: 0 0 0 2px #6366f1;[m
   border-color: #6366f1;[m
 }[m
[32m+[m
[32m+[m[32m.custom-tooltip {[m
[32m+[m[32m  position: absolute;[m
[32m+[m[32m  top: -35px !important; /* ツールチップをアイコンの上に配置 */[m
[32m+[m[32m  left: 0 !important;[m
[32m+[m[32m  background-color: gray !important;[m
[32m+[m[32m  color: yellow !important;[m
[32m+[m[32m  padding: 5px !important;[m
[32m+[m[32m  border-radius: 5px !important;[m
[32m+[m[32m  white-space: nowrap !important;[m
[32m+[m[32m  font-size: 14px !important;[m
[32m+[m[32m  z-index: 1000;[m
[32m+[m[32m  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* 視認性を向上 */[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.custom-icon-wrapper {[m
[32m+[m[32m  font-size: 24px !important;[m
[32m+[m[32m  cursor: pointer !important;[m
[32m+[m[32m  position: relative !important; /* ツールチップの基準位置にする */[m
[32m+[m[32m  display: inline-block !important;[m
[32m+[m[32m}[m
-e 

=========================================================
-e ファイル: app/controllers/admin/machines_controller.rb
-e =========================================================

[1mdiff --git a/app/controllers/admin/machines_controller.rb b/app/controllers/admin/machines_controller.rb[m
[1mindex f28301b..2e8faeb 100644[m
[1m--- a/app/controllers/admin/machines_controller.rb[m
[1m+++ b/app/controllers/admin/machines_controller.rb[m
[36m@@ -94,6 +94,50 @@[m [mclass Admin::MachinesController < ApplicationController[m
     redirect_to admin_machines_path[m
   end[m
 [m
[32m+[m[32m  def gant_index[m
[32m+[m[32m    # 発注情報の取得[m
[32m+[m[32m    @orders = Order.includes(:work_processes, :company, work_processes: [:work_process_definition, :work_process_status, process_estimate: :machine_type])[m
[32m+[m
[32m+[m[32m    # 過去の発注に関連付けられていない機械を取得[m
[32m+[m[32m    @machines = Machine.not_in_past_orders[m
[32m+[m
[32m+[m[32m    # 受注中のみ表示[m
[32m+[m[32m    @orders = @orders.select do |order|[m
[32m+[m[32m      order.work_processes.any? do |process|[m
[32m+[m[32m        if process.machine_assignments.empty?[m
[32m+[m[32m          true # 織機割り当てのない発注も表示[m
[32m+[m[32m        else[m
[32m+[m[32m          # machine_assignments が存在する場合は、assignment の machine_id が @machines の中に含まれているかを確認[m
[32m+[m[32m          process.machine_assignments.any? do |assignment|[m
[32m+[m[32m            @machines.map { |machine| machine.id }.include?(assignment.machine_id)[m
[32m+[m[32m          end[m
[32m+[m[32m        end[m
[32m+[m[32m      end[m
[32m+[m[32m    end[m
[32m+[m
[32m+[m[32m    # JSON フォーマット用のマッピング処理[m
[32m+[m[32m    colors = ["class-a", "class-b"][m
[32m+[m[32m    @orders = @orders.map.with_index do |order, order_index|[m
[32m+[m[32m      custom_class = colors[order_index % 2][m
[32m+[m
[32m+[m[32m      order.work_processes.map do |process|[m
[32m+[m[32m        {[m
[32m+[m[32m          product_number: order.product_number.number,[m
[32m+[m[32m          company: order.company.name,[m
[32m+[m[32m          machine: machine_names(order), # 単一の織機を取得[m
[32m+[m[32m          id: process.id.to_s,[m
[32m+[m[32m          name: process.work_process_definition.name,[m
[32m+[m[32m          work_process_status: process.work_process_status.name,[m
[32m+[m[32m          end: process&.earliest_estimated_completion_date&.strftime("%Y-%m-%d"),[m
[32m+[m[32m          start: process&.start_date&.strftime("%Y-%m-%d"),[m
[32m+[m[32m          progress: 100,[m
[32m+[m[32m          custom_index: order.id,[m
[32m+[m[32m          custom_class: custom_class[m
[32m+[m[32m        }[m
[32m+[m[32m      end[m
[32m+[m[32m    end.compact.flatten.to_json[m
[32m+[m[32m  end[m
[32m+[m
 [m
   private[m
 [m
[36m@@ -128,14 +172,10 @@[m [mclass Admin::MachinesController < ApplicationController[m
     target_work_process_def = WorkProcessDefinition.find_by(id: 4)[m
     return unless target_work_process_def[m
 [m
[31m-    # 現在の日付を取得[m
[31m-    today = Date.today[m
[31m-[m
     relevant_work_processes = WorkProcess.where(work_process_definition_id: target_work_process_def.id)[m
     problematic_machine_assignments = MachineAssignment.joins(:work_process)[m
                                                        .where(work_processes: { work_process_definition_id: 4 })[m
                                                        .where.not(machine_status_id: 3) # "稼働中" でない[m
[31m-                                                       .where("work_processes.latest_estimated_completion_date < ?", today) # 最遅完了予定日 < 本日 の判定[m
 [m
     problematic_machine_assignments = problematic_machine_assignments.where(machine: machines)[m
     if problematic_machine_assignments.exists?[m
[36m@@ -157,14 +197,10 @@[m [mclass Admin::MachinesController < ApplicationController[m
     target_work_process_def = WorkProcessDefinition.find_by(id: 4)[m
     return unless target_work_process_def[m
 [m
[31m-    # 現在の日付を取得[m
[31m-    today = Date.today[m
[31m-[m
     relevant_work_processes = WorkProcess.where(work_process_definition_id: target_work_process_def.id, order: machine.company.orders)[m
     problematic_machine_assignments = machine.machine_assignments.joins(:work_process)[m
                                                                  .where(work_processes: { work_process_definition_id: 4 })[m
                                                                  .where.not(machine_status_id: 3) # "稼働中" でない[m
[31m-                                                                 .where("work_processes.latest_estimated_completion_date < ?", today) # 最遅完了予定日 < 本日 の判定[m
 [m
     if problematic_machine_assignments.exists?[m
       flash.now[:alerts] ||= [][m
-e 

=========================================================
-e ファイル: app/controllers/admin/orders_controller.rb
-e =========================================================

[1mdiff --git a/app/controllers/admin/orders_controller.rb b/app/controllers/admin/orders_controller.rb[m
[1mindex 78b011b..2314b7c 100644[m
[1m--- a/app/controllers/admin/orders_controller.rb[m
[1m+++ b/app/controllers/admin/orders_controller.rb[m
[36m@@ -84,12 +84,21 @@[m [mclass Admin::OrdersController < ApplicationController[m
     estimate_workprocess = WorkProcess.decide_machine_type(workprocess, machine_type_id)[m
     # 完了見込日時を入れる[m
     update_workprocess = WorkProcess.update_deadline(estimate_workprocess, start_date)[m
[31m-    # ５個のハッシュとorderの関連付け[m
[32m+[m[32m    # 5個のハッシュとorderの関連付け[m
     update_workprocess.each do |work_process_data|[m
       @order.work_processes.build(work_process_data)[m
     end[m
[31m-    @order.save[m
[32m+[m
[32m+[m[32m    #@order.save[m
[32m+[m[32m    #redirect_to admin_orders_path, notice: "注文が作成されました"[m
[32m+[m[32m    if @order.save[m
       redirect_to admin_orders_path, notice: "注文が作成されました"[m
[32m+[m[32m    else[m
[32m+[m[32m      flash.now[:alert] = "注文の作成に失敗しました。入力内容をご確認ください。"[m
[32m+[m[32m      @work_process = WorkProcess.new[m
[32m+[m[32m      @companies = Company.where.not(id: 1)[m
[32m+[m[32m      render :new, status: :unprocessable_entity[m
[32m+[m[32m    end[m
   end[m
 [m
   def show[m
[36m@@ -130,6 +139,7 @@[m [mclass Admin::OrdersController < ApplicationController[m
       current_work_processes = @order.work_processes[m
       machine_assignments_params = order_params[:machine_assignments_attributes][m
       machine_status_id = machine_assignments_params[0][:machine_status_id][m
[32m+[m
       # WorkProcess更新処理[m
       WorkProcess.update_work_processes(workprocesses_params, current_work_processes, machine_type_id)[m
 [m
[36m@@ -174,7 +184,6 @@[m [mclass Admin::OrdersController < ApplicationController[m
       @companies = Company.all[m
     end[m
 [m
[31m-    #[m
     def ma_index[m
       @current_company = Company.find(params[:company_id])[m
 [m
[36m@@ -183,19 +192,26 @@[m [mclass Admin::OrdersController < ApplicationController[m
       .incomplete[m
       .order(:id)[m
 [m
[32m+[m[32m      # 自社の所有する織機の名前のみ配列に取り出す[m
 [m
       @machine_names = @current_company.machines.pluck(:name)[m
 [m
[31m-      @assigned_orders = {}[m
[32m+[m[32m      @assigned_orders = Hash.new { |hash, key| hash[key] = [] }[m
       @unassigned_orders = [][m
[32m+[m
[32m+[m[32m      # 現在の会社に紐づく発注（関連データは取得済み）の処理ループ[m
       @orders.each do |order|[m
[32m+[m
         # 織機割り当て済の場合[m
         if order.latest_machine_assignment.present?[m
[32m+[m
[32m+[m[32m          # 機械名を取得[m
           machine = order.latest_machine_assignment.machine[m
           machine_name = machine.name[m
[32m+[m
           # machine_id = order.latest_machine_assignment.machine.id[m
[31m-          @assigned_orders[machine_name] = @assigned_orders[machine_name] || [][m
[31m-          @assigned_orders[machine_name] << order[m
[32m+[m[32m          @assigned_orders << order[m
[32m+[m
         else[m
           # 未割当の商品の場合[m
           @unassigned_orders << order[m
[36m@@ -205,11 +221,14 @@[m [mclass Admin::OrdersController < ApplicationController[m
       @no_orders_message = "現在受注している商品はありません" unless @orders.any?[m
 [m
       # 各注文に対して現在作業中の作業工程を取得[m
[31m-      @current_work_processes = {}[m
[32m+[m[32m      @current_work_processes = Hash.new { |hash, key| hash[key] = [] }[m
[32m+[m
       @orders.each do |order|[m
 [m
         work_process = WorkProcess.find_by(order_id: order.id)[m
[32m+[m
         @current_work_processes[order.id] = work_process[m
[32m+[m
         # order.id をキーとして、対応する WorkProcess を格納[m
         # @current_work_processes[order.id] = current_work_process[m
         # current_process = @current_work_processes[:id][m
[36m@@ -220,7 +239,6 @@[m [mclass Admin::OrdersController < ApplicationController[m
             @current_work_processes[order.id] = is_match ? order.work_processes.current_work_process : nil[m
           else[m
             @current_work_processes[order.id] = order.work_processes.current_work_process[m
[31m-[m
           end[m
         else[m
           @current_work_processes[order.id] = nil[m
[36m@@ -229,52 +247,6 @@[m [mclass Admin::OrdersController < ApplicationController[m
       end[m
     end[m
 [m
[31m-    # ガントチャート[m
[31m-    def gant_index[m
[31m-      # 発注情報の取得[m
[31m-      @orders = Order.includes(:work_processes, :company, work_processes: [:work_process_definition, :work_process_status, process_estimate: :machine_type])[m
[31m-[m
[31m-      # 過去の発注に関連付けられていない機械を取得[m
[31m-      @machines = Machine.not_in_past_orders[m
[31m-[m
[31m-      # 受注中のみ表示[m
[31m-      @orders = @orders.select do |order|[m
[31m-        order.work_processes.any? do |process|[m
[31m-          if process.machine_assignments.empty?[m
[31m-            true # 織機割り当てのない発注も表示[m
[31m-          else[m
[31m-            # machine_assignments が存在する場合は、assignment の machine_id が @machines の中に含まれているかを確認[m
[31m-            process.machine_assignments.any? do |assignment|[m
[31m-              @machines.map { |machine| machine.id }.include?(assignment.machine_id)[m
[31m-            end[m
[31m-          end[m
[31m-        end[m
[31m-      end[m
[31m-[m
[31m-      # JSON フォーマット用のマッピング処理[m
[31m-      colors = ["class-a", "class-b"][m
[31m-      @orders = @orders.map.with_index do |order, order_index|[m
[31m-        custom_class = colors[order_index % 2][m
[31m-[m
[31m-        order.work_processes.map do |process|[m
[31m-          {[m
[31m-            product_number: order.product_number.number,[m
[31m-            company: order.company.name,[m
[31m-            machine: machine_names(order), # 単一の織機を取得[m
[31m-            id: process.id.to_s,[m
[31m-            name: process.work_process_definition.name,[m
[31m-            work_process_status: process.work_process_status.name,[m
[31m-            end: process&.earliest_estimated_completion_date&.strftime("%Y-%m-%d"),[m
[31m-            start: process&.start_date&.strftime("%Y-%m-%d"),[m
[31m-            progress: 100,[m
[31m-            custom_index: order.id,[m
[31m-            custom_class: custom_class[m
[31m-          }[m
[31m-        end[m
[31m-      end.compact.flatten.to_json[m
[31m-    end[m
[31m-[m
[31m-[m
   private[m
 [m
   def create_order_params[m
[36m@@ -329,10 +301,6 @@[m [mclass Admin::OrdersController < ApplicationController[m
     end[m
   end[m
 [m
[31m-  # def set_work_process[m
[31m-  #   @work_process = Task.find(params[:id])[m
[31m-  # end[m
[31m-[m
   def set_product_number[m
     @product_number = current_user.product_number[m
   end[m
[36m@@ -376,34 +344,6 @@[m [mclass Admin::OrdersController < ApplicationController[m
     end[m
   end[m
 [m
[31m-  # def handle_machine_assignment_updates[m
[31m-  #   relevant_work_process_definition_ids = [1, 2, 3, 4][m
[31m-  #   # 対象のWorkProcess群を取得[m
[31m-  #   relevant_work_processes = @order.work_processes.where(work_process_definition_id: relevant_work_process_definition_ids)[m
[31m-  #   target_work_processes = relevant_work_processes.where(work_process_status_id: 3)[m
[31m-  #   # 条件: 全てがstatus_id=3の場合のみ処理[m
[31m-  #   if relevant_work_processes.count == target_work_processes.count && relevant_work_processes.count > 0[m
[31m-  #     machine_id = order_params[:machine_assignments_attributes][0][:machine_id].to_i[m
[31m-  #     if machine_id.present?[m
[31m-  #       # 全WorkProcessを取得(5などその他も含む場合)[m
[31m-  #       all_work_process_ids = @order.work_processes.pluck(:id)[m
[31m-  #       # 既存の該当machine_idに紐づく全WorkProcessのMachineAssignmentを未割り当て状態に戻す[m
[31m-  #       MachineAssignment.where([m
[31m-  #         machine_id: machine_id,[m
[31m-  #         work_process_id: all_work_process_ids[m
[31m-  #       ).update_all(machine_id: nil, machine_status_id: nil)[m
[31m-  #       # work_process_idがnil、machine_idが同一のMachineAssignmentがあるか確認[m
[31m-  #       # 既存があればそれを使い、新たなcreateは行わない[m
[31m-  #       assignment = MachineAssignment.find_or_initialize_by(machine_id: machine_id, work_process_id: nil)[m
[31m-  #       if assignment.new_record?[m
[31m-  #         # 新規の場合のみ作成[m
[31m-  #         assignment.machine_status_id = 1[m
[31m-  #         assignment.save![m
[31m-  #       end[m
[31m-  #     end[m
[31m-  #   end[m
[31m-  # end[m
[31m-[m
   # actual_completion_date が入力された WorkProcess のステータスを「作業完了」（3）に設定するメソッド[m
   def set_work_process_status_completed[m
     @order.work_processes.each do |work_process|[m
[36m@@ -463,12 +403,7 @@[m [mclass Admin::OrdersController < ApplicationController[m
   ## 織機選択時のバリデーションを行うメソッド[m
   def validate_machine_selection[m
     machine_assignments_params = order_params[:machine_assignments_attributes][m
[31m-[m
[31m-    # 織機が未指定の場合はバリデーションエラー[m
[31m-    if machine_assignments_params.blank? || machine_assignments_params[0][:machine_id].blank?[m
[31m-      flash.now[:alert] = "織機を選択してください。"[m
[31m-      return false[m
[31m-    end[m
[32m+[m[32m    return true unless machine_assignments_params.present? # 織機が未指定の場合は特にチェックせずスキップ[m
 [m
     selected_machine_id = machine_assignments_params[0][:machine_id].to_i[m
     selected_machine = Machine.find_by(id: selected_machine_id)[m
-e 

=========================================================
-e ファイル: app/controllers/home_controller.rb
-e =========================================================

[1mdiff --git a/app/controllers/home_controller.rb b/app/controllers/home_controller.rb[m
[1mindex 541cce8..454cc0a 100644[m
[1m--- a/app/controllers/home_controller.rb[m
[1m+++ b/app/controllers/home_controller.rb[m
[36m@@ -35,7 +35,6 @@[m [mclass HomeController < ApplicationController[m
         # 指定のWorkProcessを更新[m
         WorkProcess.where(order_id: order_id, work_process_definition_id: [1,2,3])[m
                    .update_all(work_process_status_id: 3) # 完了[m
[31m-                   binding.irb[m
         WorkProcess.where(order_id: order_id, work_process_definition_id: 4)[m
                    .update_all(work_process_status_id: 2) # 作業中に更新[m
         # MachineAssignmentを稼働中に更新[m
[36m@@ -43,19 +42,17 @@[m [mclass HomeController < ApplicationController[m
                          .update_all(machine_status_id: 3) # 稼働中[m
       elsif params[:commit] == "作業終了"[m
         # 作業終了処理[m
[31m-        binding.irb[m
         WorkProcess.where(order_id: order_id, work_process_definition_id: [1,2,3,4])[m
                    .update_all(work_process_status_id: 3) # 完了[m
         WorkProcess.where(order_id: order_id, work_process_definition_id: 5)[m
                    .update_all(work_process_status_id: 2) # 作業中に更新[m
[31m-[m
[31m-        # 下記を修正予定[m
         # MachineAssignmentの織機をnilに更新[m
         MachineAssignment.where(machine_id: machine_id, work_process_id: @order.work_processes)[m
                          .update_all(machine_id: nil, machine_status_id: nil)[m
         # 新規MachineAssignment追加[m
         MachineAssignment.create!(machine_id: machine_id, machine_status_id: 1, work_process_id: nil)[m
       end[m
[32m+[m
     end[m
 [m
     @company = current_user&.company[m
[36m@@ -74,6 +71,7 @@[m [mclass HomeController < ApplicationController[m
       }[m
     end[m
 [m
[32m+[m
     redirect_to root_path, notice: "ステータスが正常に更新されました。"[m
   rescue ActiveRecord::RecordInvalid, ActiveRecord::RecordNotFound => e[m
     redirect_to root_path, alert: "ステータスの更新に失敗しました: #{e.message}"[m
[36m@@ -82,7 +80,6 @@[m [mclass HomeController < ApplicationController[m
   private[m
 [m
   def update_work_process_data(machine, work_process)[m
[31m-[m
     if work_process.nil?[m
       return {[m
         work_process_name: "作業工程なし",[m
[36m@@ -103,7 +100,9 @@[m [mclass HomeController < ApplicationController[m
     wp2_complete = (wp2&.work_process_status_id == 3)? true : false[m
     wp3_complete = (wp3&.work_process_status_id == 3)? true : false[m
     wp4_status = wp4&.work_process_status_id[m
[32m+[m
     button_label, button_disabled = determine_button_status(wp1_complete, wp2_complete, wp3_complete, wp4_status)[m
[32m+[m
     {[m
       work_process_name: work_process.work_process_definition&.name || "作業工程なし",[m
       button_label: button_label,[m
-e 

=========================================================
-e ファイル: app/controllers/machines_controller.rb
-e =========================================================

[1mdiff --git a/app/controllers/machines_controller.rb b/app/controllers/machines_controller.rb[m
[1mindex a9140d1..4074017 100644[m
[1m--- a/app/controllers/machines_controller.rb[m
[1m+++ b/app/controllers/machines_controller.rb[m
[36m@@ -7,11 +7,18 @@[m [mclass MachinesController < ApplicationController[m
   before_action :authorize_machine, only: [ :show, :edit, :update, :destroy ][m
 [m
   def index[m
[31m-    @machines = @company.machines.includes(machine_assignments: [ :work_process, :machine_status ]).order(:id)[m
[32m+[m[32m    # set_company で current_userのcompanyが @companyに入る[m
[32m+[m
[32m+[m[32m    @machines = @company.machines.includes([m
[32m+[m[32m      machine_assignments:[m
[32m+[m[32m        [ :work_process, :machine_status ][m
[32m+[m[32m        ).order(:id) # order(:id) は そのモデルの主キー id を使ってソート する。[m
[32m+[m
     @no_machines_message = "現在保有している織機はありません" if @machines.empty?[m
[32m+[m
     @work_processes = WorkProcess.ordered[m
[31m-    check_machine_status_index(@machines)[m
 [m
[32m+[m[32m    check_machine_status_index(@machines)[m
       # 検索の実行（スコープを適用）[m
       @machines = @machines[m
       .search_by_company(params[:company_id])[m
[36m@@ -37,14 +44,26 @@[m [mclass MachinesController < ApplicationController[m
   end[m
 [m
   def create[m
[32m+[m[32m    ActiveRecord::Base.transaction do[m
       @machine = @company.machines.build(machine_params)[m
[32m+[m
       if @machine.save[m
[32m+[m[32m        # 織機が保存されたら、関連する MachineAssignment を作成[m
[32m+[m[32m        MachineAssignment.create!([m
[32m+[m[32m          machine_id: @machine.id,[m
[32m+[m[32m          machine_status_id: 1,  # デフォルトで「未稼働」の状態とする[m
[32m+[m[32m          work_process_id: nil  # 初期状態では作業工程なし[m
[32m+[m[32m        )[m
[32m+[m
         redirect_to machine_path(@machine), notice: "織機が作成されました。"[m
       else[m
[31m-      render :new, status: :unprocessable_entity[m
[32m+[m[32m        raise ActiveRecord::Rollback  # 織機が保存できなかったらロールバック[m
       end[m
     end[m
 [m
[32m+[m[32m    render :new, status: :unprocessable_entity if @machine.new_record?[m
[32m+[m[32m  end[m
[32m+[m
   def edit[m
   end[m
 [m
-e 

=========================================================
-e ファイル: app/controllers/orders_controller.rb
-e =========================================================

[1mdiff --git a/app/controllers/orders_controller.rb b/app/controllers/orders_controller.rb[m
[1mindex 2435997..47eed6a 100644[m
[1m--- a/app/controllers/orders_controller.rb[m
[1m+++ b/app/controllers/orders_controller.rb[m
[36m@@ -6,14 +6,15 @@[m [mclass OrdersController < ApplicationController[m
   before_action :authorize_order, only: [:show, :destroy][m
   # 追記：parameterの型変換(accept_nested_attributes_for使用のため)[m
   before_action :convert_work_processes_params, only: [:update][m
[31m-  # 【追加】更新時にmachine_assignments_attributesを事前整理するためのbefore_actionを追加[m
[32m+[m[32m  # 【追加】更新時に machine_assignments_attributes を事前整理するためのbefore_actionを追加[m
   before_action :sanitize_machine_assignments_params, only: [:update][m
   before_action :set_machine_statuses_for_form, only: [:edit, :update][m
 [m
   def index[m
[31m-    @company = current_user&.company[m
[31m-    @orders = @company&.orders&.incomplete || Order.none[m
[31m-    @no_orders_message = "現在受注している商品はありません" unless @orders.any?[m
[32m+[m[32m    @company = current_user&.company #ログインユーザのcompany[m
[32m+[m[32m    @orders = @company&.orders&.incomplete || Order.none #ログインユーザのcompanyの注文で未完了のもの : orderに紐づくworkprocessの状態が3以外[m
[32m+[m
[32m+[m[32m    @no_orders_message = "現在受注している商品はありません" unless @orders.any? #未完了がなければ、受注がないのか？ 受注して完了済みだけの場合・・出るのか？[m
 [m
     check_overdue_work_processes_index(@orders)[m
   end[m
[36m@@ -27,11 +28,20 @@[m [mclass OrdersController < ApplicationController[m
   end[m
 [m
   def show[m
[32m+[m[32m    # 注文IDが特定される前提[m
[32m+[m[32m    # その注文に紐づく作業工程x5 が取得され、それに紐づく作業名、織機割当-織機情報も取得[m
     @work_processes = @order.work_processes[m
                             .includes(:work_process_definition, machine_assignments: :machine)[m
                             .ordered[m
[32m+[m
[32m+[m[32m    # 作業工程のうち、完了済み以降の最新の1つを取得[m
     @current_work_process = find_current_work_process(@work_processes)[m
[32m+[m
     load_machine_assignments_and_machines[m
[32m+[m[32m    # ↑中身は以下↓[m
[32m+[m[32m    # @current_machine_assignments = @current_work_process&.machine_assignments&.includes(:machine) || [][m
[32m+[m[32m    # @machines = @current_machine_assignments.map(&:machine).uniq[m
[32m+[m[32m    # 現在工程に対する織機を取ってくる なぜuniqする必要があるのか不明[m
 [m
     check_overdue_work_processes_show(@order.work_processes)[m
   end[m
[36m@@ -133,9 +143,9 @@[m [mclass OrdersController < ApplicationController[m
       :color_number_id,[m
       :roll_count,[m
       :quantity,[m
[31m-      # accepts_nested_attributes_forに対応[m
[32m+[m[32m      # accepts_nested_attributes_for に対応[m
       machine_assignments_attributes: [:id, :machine_id, :machine_status_id],[m
[31m-      # accepts_nested_attributes_forに対応[m
[32m+[m[32m      # accepts_nested_attributes_for に対応[m
       work_processes_attributes: [[m
         :id,[m
         :process_estimate_id,[m
[36m@@ -152,8 +162,11 @@[m [mclass OrdersController < ApplicationController[m
 [m
   # ↓↓ showアクションに必要なメソッド ↓↓[m
   def load_machine_assignments_and_machines[m
[32m+[m
     @current_machine_assignments = @current_work_process&.machine_assignments&.includes(:machine) || [][m
[32m+[m
     @machines = @current_machine_assignments.map(&:machine).uniq[m
[32m+[m
   end[m
 [m
   # ↓↓ editアクションに必要なメソッド ↓↓[m
[36m@@ -222,17 +235,10 @@[m [mclass OrdersController < ApplicationController[m
           input_start_date = workprocess_params[:start_date].to_date[m
           # 入力された開始日が新しい場合は置き換え[m
           start_date = input_start_date > next_start_date ? input_start_date : next_start_date[m
[31m-          # if input_start_date < next_start_date[m
[31m-          #   flash[:alert] = "開始日 (#{input_start_date}) は前の工程の完了日 (#{next_start_date}) よりも新しい日付にしてください。"[m
[31m-          #   render :edit and return[m
[31m-          # end[m
         end[m
 [m
         actual_completion_date =  workprocess_params[:actual_completion_date][m
 [m
[31m-        # 織機の種類を変更した場合[m
[31m-        # 選択されたmachine_type_id params[:machine_type_id][m
[31m-[m
         if target_work_prcess.process_estimate.machine_type != process_estimates.first.machine_type[m
           estimate = process_estimates.find_by(work_process_definition_id: target_work_prcess.work_process_definition_id)[m
           # ナレッジ置き換え[m
[36m@@ -241,6 +247,7 @@[m [mclass OrdersController < ApplicationController[m
         target_work_prcess.work_process_status_id = workprocess_params[:work_process_status_id][m
         target_work_prcess.factory_estimated_completion_date = workprocess_params[:factory_estimated_completion_date][m
         target_work_prcess.save[m
[32m+[m
         # 更新したナレッジで全行程の日時の更新処理の呼び出し[m
         new_target_work_prcess, next_start_date = WorkProcess.check_current_work_process(target_work_prcess, start_date, actual_completion_date)[m
         # 開始日の方が新しい場合は置き換え[m
-e 

=========================================================
-e ファイル: app/javascript/application.js
-e =========================================================

[1mdiff --git a/app/javascript/application.js b/app/javascript/application.js[m
[1mindex 4f1b95f..1340f00 100644[m
[1m--- a/app/javascript/application.js[m
[1m+++ b/app/javascript/application.js[m
[36m@@ -1,5 +1,7 @@[m
 // Configure your import map in config/importmap.rb. Read more: https://github.com/rails/importmap-rails[m
 import "@hotwired/turbo-rails"[m
 import "controllers"[m
[32m+[m[32mimport "jquery";[m
[32m+[m[32mimport "bootstrap";[m
 [m
 Turbo.session.drive = false[m
-e 

=========================================================
-e ファイル: app/javascript/components/DragDropApp.js
-e =========================================================

[1mdiff --git a/app/javascript/components/DragDropApp.js b/app/javascript/components/DragDropApp.js[m
[1mnew file mode 100644[m
[1mindex 0000000..7b24f76[m
[1m--- /dev/null[m
[1m+++ b/app/javascript/components/DragDropApp.js[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32mimport React, { useState } from "react";[m
[32m+[m[32mimport OrderTable from "./OrderTable";[m
[32m+[m[32mimport DroppableZone from "./DroppableZone";[m
[32m+[m
[32m+[m[32mconst initialOrders = [[m
[32m+[m[32m  { id: 1, company: "A社", product: "ABC-123", color: "Red", startDate: "2024-10-01" },[m
[32m+[m[32m  { id: 2, company: "B社", product: "XYZ-456", color: "Blue", startDate: "2024-10-05" }[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst DragDropApp = () => {[m
[32m+[m[32m  const [orders, setOrders] = useState(initialOrders);[m
[32m+[m[32m  const [assignedOrders, setAssignedOrders] = useState([]);[m
[32m+[m
[32m+[m[32m  const handleDrop = (order, machineName) => {[m
[32m+[m[32m    setAssignedOrders([...assignedOrders, { ...order, machineName }]);[m
[32m+[m[32m    setOrders(orders.filter(o => o.id !== order.id));[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  return ([m
[32m+[m[32m    <div>[m
[32m+[m[32m      <h1>未割り当ての商品</h1>[m
[32m+[m[32m      <OrderTable orders={orders} />[m
[32m+[m
[32m+[m[32m      <h1>割り当て済みの商品</h1>[m
[32m+[m[32m      <DroppableZone machineName="機械A" onDrop={handleDrop} assignedOrders={assignedOrders} />[m
[32m+[m[32m    </div>[m
[32m+[m[32m  );[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport default DragDropApp;[m
-e 

=========================================================
-e ファイル: app/javascript/components/DroppableZone.js
-e =========================================================

[1mdiff --git a/app/javascript/components/DroppableZone.js b/app/javascript/components/DroppableZone.js[m
[1mnew file mode 100644[m
[1mindex 0000000..d9c502d[m
[1m--- /dev/null[m
[1m+++ b/app/javascript/components/DroppableZone.js[m
[36m@@ -0,0 +1,44 @@[m
[32m+[m[32mimport React from "react";[m
[32m+[m[32mimport { useDrop } from "react-dnd";[m
[32m+[m
[32m+[m[32mconst DroppableZone = ({ machineName, onDrop, assignedOrders }) => {[m
[32m+[m[32m  const [{ isOver }, drop] = useDrop(() => ({[m
[32m+[m[32m    accept: "ORDER",[m
[32m+[m[32m    drop: (item) => onDrop(item, machineName),[m
[32m+[m[32m    collect: monitor => ({[m
[32m+[m[32m      isOver: monitor.isOver()[m
[32m+[m[32m    })[m
[32m+[m[32m  }));[m
[32m+[m
[32m+[m[32m  return ([m
[32m+[m[32m    <div ref={drop} className={`border p-4 ${isOver ? "bg-green-100" : "bg-gray-100"}`}>[m
[32m+[m[32m      <h2>織機名: {machineName}</h2>[m
[32m+[m[32m      <table className="w-full border-collapse border border-gray-300">[m
[32m+[m[32m        <thead>[m
[32m+[m[32m          <tr>[m
[32m+[m[32m            <th>ID</th>[m
[32m+[m[32m            <th>会社名</th>[m
[32m+[m[32m            <th>品番</th>[m
[32m+[m[32m            <th>色番</th>[m
[32m+[m[32m            <th>開始日</th>[m
[32m+[m[32m            <th>割り当て済み機械</th>[m
[32m+[m[32m          </tr>[m
[32m+[m[32m        </thead>[m
[32m+[m[32m        <tbody>[m
[32m+[m[32m          {assignedOrders.map((order, index) => ([m
[32m+[m[32m            <tr key={index} className="hover:bg-gray-50">[m
[32m+[m[32m              <td className="border px-4 py-2">{order.id}</td>[m
[32m+[m[32m              <td className="border px-4 py-2">{order.company}</td>[m
[32m+[m[32m              <td className="border px-4 py-2">{order.product}</td>[m
[32m+[m[32m              <td className="border px-4 py-2">{order.color}</td>[m
[32m+[m[32m              <td className="border px-4 py-2">{order.startDate}</td>[m
[32m+[m[32m              <td className="border px-4 py-2">{order.machineName}</td>[m
[32m+[m[32m            </tr>[m
[32m+[m[32m          ))}[m
[32m+[m[32m        </tbody>[m
[32m+[m[32m      </table>[m
[32m+[m[32m    </div>[m
[32m+[m[32m  );[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport default DroppableZone;[m
-e 

=========================================================
-e ファイル: app/javascript/components/OrderRow.js
-e =========================================================

[1mdiff --git a/app/javascript/components/OrderRow.js b/app/javascript/components/OrderRow.js[m
[1mnew file mode 100644[m
[1mindex 0000000..d35d2bc[m
[1m--- /dev/null[m
[1m+++ b/app/javascript/components/OrderRow.js[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32mimport React from "react";[m
[32m+[m[32mimport { useDrag } from "react-dnd";[m
[32m+[m
[32m+[m[32mconst OrderRow = ({ order }) => {[m
[32m+[m[32m  const [{ isDragging }, drag] = useDrag(() => ({[m
[32m+[m[32m    type: "ORDER",[m
[32m+[m[32m    item: order,[m
[32m+[m[32m    collect: monitor => ({[m
[32m+[m[32m      isDragging: monitor.isDragging()[m
[32m+[m[32m    })[m
[32m+[m[32m  }));[m
[32m+[m
[32m+[m[32m  return ([m
[32m+[m[32m    <tr ref={drag} className={`hover:bg-gray-50 ${isDragging ? "opacity-50" : ""}`}>[m
[32m+[m[32m      <td className="border px-4 py-2">{order.id}</td>[m
[32m+[m[32m      <td className="border px-4 py-2">{order.company}</td>[m
[32m+[m[32m      <td className="border px-4 py-2">{order.product}</td>[m
[32m+[m[32m      <td className="border px-4 py-2">{order.color}</td>[m
[32m+[m[32m      <td className="border px-4 py-2">{order.startDate}</td>[m
[32m+[m[32m    </tr>[m
[32m+[m[32m  );[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport default OrderRow;[m
-e 

=========================================================
-e ファイル: app/javascript/components/OrderTable.js
-e =========================================================

[1mdiff --git a/app/javascript/components/OrderTable.js b/app/javascript/components/OrderTable.js[m
[1mnew file mode 100644[m
[1mindex 0000000..abad5e7[m
[1m--- /dev/null[m
[1m+++ b/app/javascript/components/OrderTable.js[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mimport React from "react";[m
[32m+[m[32mimport OrderRow from "./OrderRow";[m
[32m+[m[32mimport { DndProvider } from "react-dnd";[m
[32m+[m[32mimport { HTML5Backend } from "react-dnd-html5-backend";[m
[32m+[m
[32m+[m[32mconst OrderTable = ({ orders }) => {[m
[32m+[m[32m  return ([m
[32m+[m[32m    <DndProvider backend={HTML5Backend}>[m
[32m+[m[32m      <table className="table-auto w-full border-collapse border border-gray-300">[m
[32m+[m[32m        <thead>[m
[32m+[m[32m          <tr>[m
[32m+[m[32m            <th>ID</th>[m
[32m+[m[32m            <th>会社名</th>[m
[32m+[m[32m            <th>品番</th>[m
[32m+[m[32m            <th>色番</th>[m
[32m+[m[32m            <th>開始日</th>[m
[32m+[m[32m          </tr>[m
[32m+[m[32m        </thead>[m
[32m+[m[32m        <tbody>[m
[32m+[m[32m          {orders.map(order => ([m
[32m+[m[32m            <OrderRow key={order.id} order={order} />[m
[32m+[m[32m          ))}[m
[32m+[m[32m        </tbody>[m
[32m+[m[32m      </table>[m
[32m+[m[32m    </DndProvider>[m
[32m+[m[32m  );[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport default OrderTable;[m
-e 

=========================================================
-e ファイル: app/javascript/machine_assignment.js
-e =========================================================

[1mdiff --git a/app/javascript/machine_assignment.js b/app/javascript/machine_assignment.js[m
[1mindex e63e51a..a3105da 100644[m
[1m--- a/app/javascript/machine_assignment.js[m
[1m+++ b/app/javascript/machine_assignment.js[m
[36m@@ -1,192 +1,177 @@[m
 import React, { useState } from "react";[m
[31m-import { createRoot } from "react-dom/client";[m
 import { DragDropContext, Droppable, Draggable } from "react-beautiful-dnd";[m
 [m
[31m-document.body.innerHTML = '<div id="selected_color"></div>';[m
[31m-[m
[31m-const root = createRoot(document.getElementById("selected_color"));[m
[31m-root.render(<h1>Hello, world</h1>);[m
[31m-[m
[31m-// function selected_color() {[m
[31m-//   return ([m
[31m-[m
[31m-//   );[m
[31m-// }[m
[31m-// const DragAndDropApp = () => {[m
[31m-//   // 初期データ[m
[31m-//   // 更新用関数setOrders定義[m
[31m-//   const [orders, setOrders] = useState([[m
[31m-//     { id: "order-1", content: "Order 1" },[m
[31m-//     { id: "order-2", content: "Order 2" },[m
[31m-//     { id: "order-3", content: "Order 3" },[m
[31m-//   ]);[m
[31m-[m
[31m-//   // 初期データ[m
[31m-//   // 更新用関数setMachines定義[m
[31m-//   const [machines, setMachines] = useState([[m
[31m-//     { id: "1", name: "ドビー", assignedOrders: [] },[m
[31m-//     { id: "2", name: "ジャガード", assignedOrders: [] },[m
[31m-//   ]);[m
[31m-[m
[31m-//   // ドラッグ終了時の処理[m
[31m-//   const handleDragEnd = (result) => {[m
[31m-//     const { source, destination } = result;[m
[31m-[m
[31m-//     // ドロップ先がない場合（リスト外にドロップされた場合）[m
[31m-//     if (!destination) return;[m
[31m-[m
[31m-//     // 同じリスト内での並び替え[m
[31m-//     if (source.droppableId === destination.droppableId) {[m
[31m-//       if (source.droppableId === "orders") {[m
[31m-//         const updatedOrders = Array.from(orders);[m
[31m-//         const [removed] = updatedOrders.splice(source.index, 1);[m
[31m-//         updatedOrders.splice(destination.index, 0, removed);[m
[31m-//         // 更新用関数setOrders呼び出し[m
[31m-//         setOrders(updatedOrders);[m
[31m-//       } else {[m
[31m-//         const machineIndex = machines.findIndex([m
[31m-//           (machine) => machine.id === source.droppableId[m
[31m-//         );[m
[31m-//         const updatedMachines = Array.from(machines);[m
[31m-//         const [removed] = updatedMachines[machineIndex].assignedOrders.splice([m
[31m-//           source.index,[m
[31m-//           1[m
[31m-//         );[m
[31m-//         updatedMachines[machineIndex].assignedOrders.splice([m
[31m-//           destination.index,[m
[31m-//           0,[m
[31m-//           removed[m
[31m-//         );[m
[31m-//         setMachines(updatedMachines);[m
[31m-//       }[m
[31m-//     }[m
[31m-[m
[31m-//     // 異なるリスト間の移動[m
[31m-//     if (source.droppableId === "orders") {[m
[31m-//       const updatedOrders = Array.from(orders);[m
[31m-//       const [removed] = updatedOrders.splice(source.index, 1);[m
[31m-[m
[31m-//       const machineIndex = machines.findIndex([m
[31m-//         (machine) => machine.id === destination.droppableId[m
[31m-//       );[m
[31m-//       const updatedMachines = Array.from(machines);[m
[31m-//       updatedMachines[machineIndex].assignedOrders.splice([m
[31m-//         destination.index,[m
[31m-//         0,[m
[31m-//         removed[m
[31m-//       );[m
[31m-[m
[31m-//       setOrders(updatedOrders);[m
[31m-//       setMachines(updatedMachines);[m
[31m-//     } else {[m
[31m-//       const machineIndex = machines.findIndex([m
[31m-//         (machine) => machine.id === source.droppableId[m
[31m-//       );[m
[31m-//       const updatedMachines = Array.from(machines);[m
[31m-//       const [removed] = updatedMachines[machineIndex].assignedOrders.splice([m
[31m-//         source.index,[m
[31m-//         1[m
[31m-//       );[m
[31m-[m
[31m-//       const updatedOrders = Array.from(orders);[m
[31m-//       updatedOrders.splice(destination.index, 0, removed);[m
[31m-[m
[31m-//       setOrders(updatedOrders);[m
[31m-//       setMachines(updatedMachines);[m
[31m-//     }[m
[31m-//   };[m
[31m-[m
[31m-//   return ([m
[31m-//     <DragDropContext onDragEnd={handleDragEnd}>[m
[31m-//       <div style={{ display: "flex", gap: "20px", padding: "20px" }}>[m
[31m-//         {/* Orders List */}[m
[31m-//         <Droppable droppableId="orders">[m
[31m-//           {(provided) => ([m
[31m-//             <div[m
[31m-//               {...provided.droppableProps}[m
[31m-//               ref={provided.innerRef}[m
[31m-//               style={{[m
[31m-//                 padding: "20px",[m
[31m-//                 background: "#f0f0f0",[m
[31m-//                 width: "200px",[m
[31m-//                 minHeight: "300px",[m
[31m-//               }}[m
[31m-//             >[m
[31m-//               <h3>Orders</h3>[m
[31m-//               {orders.map((order, index) => ([m
[31m-//                 <Draggable key={order.id} draggableId={order.id} index={index}>[m
[31m-//                   {(provided) => ([m
[31m-//                     <div[m
[31m-//                       ref={provided.innerRef}[m
[31m-//                       {...provided.draggableProps}[m
[31m-//                       {...provided.dragHandleProps}[m
[31m-//                       style={{[m
[31m-//                         ...provided.draggableProps.style,[m
[31m-//                         margin: "10px 0",[m
[31m-//                         padding: "10px",[m
[31m-//                         background: "white",[m
[31m-//                         border: "1px solid #ddd",[m
[31m-//                         borderRadius: "5px",[m
[31m-//                       }}[m
[31m-//                     >[m
[31m-//                       {order.content}[m
[31m-//                     </div>[m
[31m-//                   )}[m
[31m-//                 </Draggable>[m
[31m-//               ))}[m
[31m-//               {provided.placeholder}[m
[31m-//             </div>[m
[31m-//           )}[m
[31m-//         </Droppable>[m
[31m-[m
[31m-//         {/* Machines List */}[m
[31m-//         {machines.map((machine) => ([m
[31m-//           <Droppable droppableId={machine.id} key={machine.id}>[m
[31m-//             {(provided) => ([m
[31m-//               <div[m
[31m-//                 {...provided.droppableProps}[m
[31m-//                 ref={provided.innerRef}[m
[31m-//                 style={{[m
[31m-//                   padding: "20px",[m
[31m-//                   background: "#e8f8e8",[m
[31m-//                   width: "200px",[m
[31m-//                   minHeight: "300px",[m
[31m-//                 }}[m
[31m-//               >[m
[31m-//                 <h3>{machine.name}</h3>[m
[31m-//                 {machine.assignedOrders.map((order, index) => ([m
[31m-//                   <Draggable[m
[31m-//                     key={order.id}[m
[31m-//                     draggableId={order.id}[m
[31m-//                     index={index}[m
[31m-//                   >[m
[31m-//                     {(provided) => ([m
[31m-//                       <div[m
[31m-//                         ref={provided.innerRef}[m
[31m-//                         {...provided.draggableProps}[m
[31m-//                         {...provided.dragHandleProps}[m
[31m-//                         style={{[m
[31m-//                           ...provided.draggableProps.style,[m
[31m-//                           margin: "10px 0",[m
[31m-//                           padding: "10px",[m
[31m-//                           background: "white",[m
[31m-//                           border: "1px solid #ddd",[m
[31m-//                           borderRadius: "5px",[m
[31m-//                         }}[m
[31m-//                       >[m
[31m-//                         {order.content}[m
[31m-//                       </div>[m
[31m-//                     )}[m
[31m-//                   </Draggable>[m
[31m-//                 ))}[m
[31m-//                 {provided.placeholder}[m
[31m-//               </div>[m
[31m-//             )}[m
[31m-//           </Droppable>[m
[31m-//         ))}[m
[31m-//       </div>[m
[31m-//     </DragDropContext>[m
[31m-//   );[m
[31m-// };[m
[31m-[m
[31m-// export default DragAndDropApp;[m
[32m+[m[32mconst DragAndDropApp = () => {[m
[32m+[m[32m  // 初期データ[m
[32m+[m[32m  const [orders, setOrders] = useState([[m
[32m+[m[32m    { id: "order-1", content: "Order 1" },[m
[32m+[m[32m    { id: "order-2", content: "Order 2" },[m
[32m+[m[32m    { id: "order-3", content: "Order 3" },[m
[32m+[m[32m  ]);[m
[32m+[m
[32m+[m[32m  const [machines, setMachines] = useState([[m
[32m+[m[32m    { id: "1", name: "ドビー", assignedOrders: [] },[m
[32m+[m[32m    { id: "2", name: "ジャガード", assignedOrders: [] },[m
[32m+[m[32m  ]);[m
[32m+[m
[32m+[m[32m  // ドラッグ終了時の処理[m
[32m+[m[32m  const handleDragEnd = (result) => {[m
[32m+[m[32m    const { source, destination } = result;[m
[32m+[m
[32m+[m[32m    // ドロップ先がない場合（リスト外にドロップされた場合）[m
[32m+[m[32m    if (!destination) return;[m
[32m+[m
[32m+[m[32m    // 同じリスト内での並び替え[m
[32m+[m[32m    if (source.droppableId === destination.droppableId) {[m
[32m+[m[32m      if (source.droppableId === "orders") {[m
[32m+[m[32m        const updatedOrders = Array.from(orders);[m
[32m+[m[32m        const [removed] = updatedOrders.splice(source.index, 1);[m
[32m+[m[32m        updatedOrders.splice(destination.index, 0, removed);[m
[32m+[m[32m        setOrders(updatedOrders);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        const machineIndex = machines.findIndex([m
[32m+[m[32m          (machine) => machine.id === source.droppableId[m
[32m+[m[32m        );[m
[32m+[m[32m        const updatedMachines = Array.from(machines);[m
[32m+[m[32m        const [removed] = updatedMachines[machineIndex].assignedOrders.splice([m
[32m+[m[32m          source.index,[m
[32m+[m[32m          1[m
[32m+[m[32m        );[m
[32m+[m[32m        updatedMachines[machineIndex].assignedOrders.splice([m
[32m+[m[32m          destination.index,[m
[32m+[m[32m          0,[m
[32m+[m[32m          removed[m
[32m+[m[32m        );[m
[32m+[m[32m        setMachines(updatedMachines);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // 異なるリスト間の移動[m
[32m+[m[32m    if (source.droppableId === "orders") {[m
[32m+[m[32m      const updatedOrders = Array.from(orders);[m
[32m+[m[32m      const [removed] = updatedOrders.splice(source.index, 1);[m
[32m+[m
[32m+[m[32m      const machineIndex = machines.findIndex([m
[32m+[m[32m        (machine) => machine.id === destination.droppableId[m
[32m+[m[32m      );[m
[32m+[m[32m      const updatedMachines = Array.from(machines);[m
[32m+[m[32m      updatedMachines[machineIndex].assignedOrders.splice([m
[32m+[m[32m        destination.index,[m
[32m+[m[32m        0,[m
[32m+[m[32m        removed[m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m      setOrders(updatedOrders);[m
[32m+[m[32m      setMachines(updatedMachines);[m
[32m+[m[32m    } else {[m
[32m+[m[32m      const machineIndex = machines.findIndex([m
[32m+[m[32m        (machine) => machine.id === source.droppableId[m
[32m+[m[32m      );[m
[32m+[m[32m      const updatedMachines = Array.from(machines);[m
[32m+[m[32m      const [removed] = updatedMachines[machineIndex].assignedOrders.splice([m
[32m+[m[32m        source.index,[m
[32m+[m[32m        1[m
[32m+[m[32m      );[m
[32m+[m
[32m+[m[32m      const updatedOrders = Array.from(orders);[m
[32m+[m[32m      updatedOrders.splice(destination.index, 0, removed);[m
[32m+[m
[32m+[m[32m      setOrders(updatedOrders);[m
[32m+[m[32m      setMachines(updatedMachines);[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  return ([m
[32m+[m[32m    <DragDropContext onDragEnd={handleDragEnd}>[m
[32m+[m[32m      <div style={{ display: "flex", gap: "20px", padding: "20px" }}>[m
[32m+[m[32m        {/* Orders List */}[m
[32m+[m[32m        <Droppable droppableId="orders">[m
[32m+[m[32m          {(provided) => ([m
[32m+[m[32m            <div[m
[32m+[m[32m              {...provided.droppableProps}[m
[32m+[m[32m              ref={provided.innerRef}[m
[32m+[m[32m              style={{[m
[32m+[m[32m                padding: "20px",[m
[32m+[m[32m                background: "#f0f0f0",[m
[32m+[m[32m                width: "200px",[m
[32m+[m[32m                minHeight: "300px",[m
[32m+[m[32m              }}[m
[32m+[m[32m            >[m
[32m+[m[32m              <h3>Orders</h3>[m
[32m+[m[32m              {orders.map((order, index) => ([m
[32m+[m[32m                <Draggable key={order.id} draggableId={order.id} index={index}>[m
[32m+[m[32m                  {(provided) => ([m
[32m+[m[32m                    <div[m
[32m+[m[32m                      ref={provided.innerRef}[m
[32m+[m[32m                      {...provided.draggableProps}[m
[32m+[m[32m                      {...provided.dragHandleProps}[m
[32m+[m[32m                      style={{[m
[32m+[m[32m                        ...provided.draggableProps.style,[m
[32m+[m[32m                        margin: "10px 0",[m
[32m+[m[32m                        padding: "10px",[m
[32m+[m[32m                        background: "white",[m
[32m+[m[32m                        border: "1px solid #ddd",[m
[32m+[m[32m                        borderRadius: "5px",[m
[32m+[m[32m                      }}[m
[32m+[m[32m                    >[m
[32m+[m[32m                      {order.content}[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                  )}[m
[32m+[m[32m                </Draggable>[m
[32m+[m[32m              ))}[m
[32m+[m[32m              {provided.placeholder}[m
[32m+[m[32m            </div>[m
[32m+[m[32m          )}[m
[32m+[m[32m        </Droppable>[m
[32m+[m
[32m+[m[32m        {/* Machines List */}[m
[32m+[m[32m        {machines.map((machine) => ([m
[32m+[m[32m          <Droppable droppableId={machine.id} key={machine.id}>[m
[32m+[m[32m            {(provided) => ([m
[32m+[m[32m              <div[m
[32m+[m[32m                {...provided.droppableProps}[m
[32m+[m[32m                ref={provided.innerRef}[m
[32m+[m[32m                style={{[m
[32m+[m[32m                  padding: "20px",[m
[32m+[m[32m                  background: "#e8f8e8",[m
[32m+[m[32m                  width: "200px",[m
[32m+[m[32m                  minHeight: "300px",[m
[32m+[m[32m                }}[m
[32m+[m[32m              >[m
[32m+[m[32m                <h3>{machine.name}</h3>[m
[32m+[m[32m                {machine.assignedOrders.map((order, index) => ([m
[32m+[m[32m                  <Draggable[m
[32m+[m[32m                    key={order.id}[m
[32m+[m[32m                    draggableId={order.id}[m
[32m+[m[32m                    index={index}[m
[32m+[m[32m                  >[m
[32m+[m[32m                    {(provided) => ([m
[32m+[m[32m                      <div[m
[32m+[m[32m                        ref={provided.innerRef}[m
[32m+[m[32m                        {...provided.draggableProps}[m
[32m+[m[32m                        {...provided.dragHandleProps}[m
[32m+[m[32m                        style={{[m
[32m+[m[32m                          ...provided.draggableProps.style,[m
[32m+[m[32m                          margin: "10px 0",[m
[32m+[m[32m                          padding: "10px",[m
[32m+[m[32m                          background: "white",[m
[32m+[m[32m                          border: "1px solid #ddd",[m
[32m+[m[32m                          borderRadius: "5px",[m
[32m+[m[32m                        }}[m
[32m+[m[32m                      >[m
[32m+[m[32m                        {order.content}[m
[32m+[m[32m                      </div>[m
[32m+[m[32m                    )}[m
[32m+[m[32m                  </Draggable>[m
[32m+[m[32m                ))}[m
[32m+[m[32m                {provided.placeholder}[m
[32m+[m[32m              </div>[m
[32m+[m[32m            )}[m
[32m+[m[32m          </Droppable>[m
[32m+[m[32m        ))}[m
[32m+[m[32m      </div>[m
[32m+[m[32m    </DragDropContext>[m
[32m+[m[32m  );[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport default DragAndDropApp;[m
-e 

=========================================================
-e ファイル: app/javascript/orderform_no_react.js
-e =========================================================

[1mdiff --git a/app/javascript/orderform_no_react.js b/app/javascript/orderform_no_react.js[m
[1mdeleted file mode 100644[m
[1mindex e92e9f2..0000000[m
[1m--- a/app/javascript/orderform_no_react.js[m
[1m+++ /dev/null[m
[36m@@ -1,171 +0,0 @@[m
[31m-// ロール数、数量の入力で５桁以上の数字が入力できない、メッセージを表示[m
[31m-// 空のフォームがあれば送信ボタンを押せない[m
[31m-[m
[31m-var isCompanyValid = false;[m
[31m-var isProductNumberValid = false;[m
[31m-var isColorNumberValid = false;[m
[31m-var isRollCountValid = false;[m
[31m-var isQuantityValid = false;[m
[31m-var isMachineTypeValid = false;[m
[31m-var isStartDateValid = false;[m
[31m-[m
[31m-// フォームタグの取得[m
[31m-var orderForm = document.querySelector("#orderForm");[m
[31m-// console.log(orderForm);[m
[31m-[m
[31m-// 各入力フィールドの取得[m
[31m-var companyField = document.querySelector("#order_company_id");[m
[31m-var productNumberField = document.querySelector("#order_product_number_id");[m
[31m-var colorNumberField = document.querySelector("#order_color_number_id");[m
[31m-var rollCountField = document.querySelector("#order_roll_count");[m
[31m-var quantityField = document.querySelector("#order_quantity");[m
[31m-var machineTypeField = document.querySelector("#machine_type_id");[m
[31m-var startDateField = document.querySelector("#start_date_field");[m
[31m-[m
[31m-// フォーム送信ボタンの取得[m
[31m-//var submitBtn = document.querySelector("input[type='submit']");[m
[31m-var userSubmitBtn = document.querySelector("input[type='submit']");[m
[31m-[m
[31m-// 各フィールドのエラーメッセージ表示用 p 要素を動的に生成[m
[31m-var companyError = document.createElement("p");[m
[31m-var productNumberError = document.createElement("p");[m
[31m-var colorNumberError = document.createElement("p");[m
[31m-var rollCountError = document.createElement("p");[m
[31m-var quantityError = document.createElement("p");[m
[31m-var machineTypeError = document.createElement("p");[m
[31m-var startDateError = document.createElement("p");[m
[31m-[m
[31m-// エラーメッセージ用のクラスを設定[m
[31m-companyError.classList.add("text-red-500");[m
[31m-productNumberError.classList.add("text-red-500");[m
[31m-colorNumberError.classList.add("text-red-500");[m
[31m-rollCountError.classList.add("text-red-500");[m
[31m-quantityError.classList.add("text-red-500");[m
[31m-machineTypeError.classList.add("text-red-500");[m
[31m-startDateError.classList.add("text-red-500");[m
[31m-[m
[31m-// バリデーション関数とイベントリスナーの設定[m
[31m-companyField.addEventListener("change", validateCompany);[m
[31m-productNumberField.addEventListener("change", validateProductNumber);[m
[31m-colorNumberField.addEventListener("change", validateColorNumber);[m
[31m-rollCountField.addEventListener("input", validateRollCount);[m
[31m-quantityField.addEventListener("input", validateQuantity);[m
[31m-machineTypeField.addEventListener("change", validateMachineType);[m
[31m-startDateField.addEventListener("change", validateStartDate);[m
[31m-[m
[31m-// フォーム送信ボタンの有効化/無効化制御[m
[31m-function toggleSubmitButton() {[m
[31m-  if ([m
[31m-    isCompanyValid &&[m
[31m-    isProductNumberValid &&[m
[31m-    isColorNumberValid &&[m
[31m-    isRollCountValid &&[m
[31m-    isQuantityValid &&[m
[31m-    isMachineTypeValid &&[m
[31m-    isStartDateValid[m
[31m-  ) {[m
[31m-    userSubmitBtn.disabled = false;[m
[31m-  } else {[m
[31m-    userSubmitBtn.disabled = true;[m
[31m-  }[m
[31m-}[m
[31m-[m
[31m-// 各バリデーション関数[m
[31m-function validateCompany() {[m
[31m-  console.log("validateCompany");[m
[31m-  if (!companyField.value) {[m
[31m-    companyError.textContent = "会社名を選択してください。";[m
[31m-    companyField.parentNode.appendChild(companyError);[m
[31m-    isCompanyValid = false;[m
[31m-  } else {[m
[31m-    companyError.textContent = "";[m
[31m-    isCompanyValid = true;[m
[31m-  }[m
[31m-  toggleSubmitButton();[m
[31m-}[m
[31m-[m
[31m-function validateProductNumber() {[m
[31m-  console.log("validateProductNumber");[m
[31m-  if (!productNumberField.value) {[m
[31m-    productNumberError.textContent = "品番を選択してください。";[m
[31m-    productNumberField.parentNode.appendChild(productNumberError);[m
[31m-    isProductNumberValid = false;[m
[31m-  } else {[m
[31m-    productNumberError.textContent = "";[m
[31m-    isProductNumberValid = true;[m
[31m-  }[m
[31m-  toggleSubmitButton();[m
[31m-}[m
[31m-[m
[31m-function validateColorNumber() {[m
[31m-  console.log("validateColorNumber");[m
[31m-  if (!colorNumberField.value) {[m
[31m-    colorNumberError.textContent = "色番を選択してください。";[m
[31m-    colorNumberField.parentNode.appendChild(colorNumberError);[m
[31m-    isColorNumberValid = false;[m
[31m-  } else {[m
[31m-    colorNumberError.textContent = "";[m
[31m-    isColorNumberValid = true;[m
[31m-  }[m
[31m-  toggleSubmitButton();[m
[31m-}[m
[31m-[m
[31m-function validateRollCount() {[m
[31m-  console.log("validateRollCount");[m
[31m-  if ([m
[31m-    !rollCountField.value ||[m
[31m-    rollCountField.value <= 0 ||[m
[31m-    rollCountField.value.length > 4[m
[31m-  ) {[m
[31m-    rollCountError.textContent = "反数は1以上4桁以下の値を入力してください。";[m
[31m-    rollCountField.parentNode.appendChild(rollCountError);[m
[31m-    isRollCountValid = false;[m
[31m-  } else {[m
[31m-    rollCountError.textContent = "";[m
[31m-    isRollCountValid = true;[m
[31m-  }[m
[31m-  toggleSubmitButton();[m
[31m-}[m
[31m-[m
[31m-function validateQuantity() {[m
[31m-  console.log("validateQuantity");[m
[31m-  if ([m
[31m-    !quantityField.value ||[m
[31m-    quantityField.value <= 0 ||[m
[31m-    quantityField.value.length > 4[m
[31m-  ) {[m
[31m-    quantityError.textContent = "数量は1以上4桁以下の値を入力してください。";[m
[31m-    quantityField.parentNode.appendChild(quantityError);[m
[31m-    isQuantityValid = false;[m
[31m-  } else {[m
[31m-    quantityError.textContent = "";[m
[31m-    isQuantityValid = true;[m
[31m-  }[m
[31m-  toggleSubmitButton();[m
[31m-}[m
[31m-[m
[31m-function validateMachineType() {[m
[31m-  console.log("validateMachineType");[m
[31m-  if (!machineTypeField.value) {[m
[31m-    machineTypeError.textContent = "機械のタイプを選択してください。";[m
[31m-    machineTypeField.parentNode.appendChild(machineTypeError);[m
[31m-    isMachineTypeValid = false;[m
[31m-  } else {[m
[31m-    machineTypeError.textContent = "";[m
[31m-    isMachineTypeValid = true;[m
[31m-  }[m
[31m-  toggleSubmitButton();[m
[31m-}[m
[31m-[m
[31m-function validateStartDate() {[m
[31m-  console.log("validateStartDate");[m
[31m-  if (!startDateField.value) {[m
[31m-    startDateError.textContent = "作業開始日を選択してください。";[m
[31m-    startDateField.parentNode.appendChild(startDateError);[m
[31m-    isStartDateValid = false;[m
[31m-  } else {[m
[31m-    startDateError.textContent = "";[m
[31m-    isStartDateValid = true;[m
[31m-  }[m
[31m-  toggleSubmitButton();[m
[31m-}[m
-e 

=========================================================
-e ファイル: app/javascript/packs/orderform.js
-e =========================================================

[1mdiff --git a/app/javascript/packs/orderform.js b/app/javascript/packs/orderform.js[m
[1mdeleted file mode 100644[m
[1mindex 28c467e..0000000[m
[1m--- a/app/javascript/packs/orderform.js[m
[1m+++ /dev/null[m
[36m@@ -1,111 +0,0 @@[m
[31m-import React, { useEffect, useState } from "react";[m
[31m-[m
[31m-// コンポーネント関数定義[m
[31m-const OrderForm = () => {[m
[31m-  // ステートを初期化する[m
[31m-[m
[31m-  // 各入力フィールドの値とバリデーション状態を管理するステートの定義[m
[31m-  const [rollCount, setRollCount] = useState(1);[m
[31m-  const [quantity, setQuantity] = useState(1);[m
[31m-[m
[31m-  //エラーメッセージを管理するステートの定義[m
[31m-  const [errors, setErrors] = useState({[m
[31m-    company: "",[m
[31m-  });[m
[31m-[m
[31m-  // フォーム全体が送信可能かどうかを管理するステート[m
[31m-  // validation管理ステートの定義[m
[31m-  const [isFormValid, setIsFormValid] = useState(false);[m
[31m-[m
[31m-  // HTML内に埋め込まれたデータを取得してステートにセット[m
[31m-  // useEffectフックの宣言[m
[31m-  useEffect(() => {[m
[31m-    const rootElement = document.getElementById("order-form-root");[m
[31m-    setRollCount(JSON.parse(rootElement.dataset.roll_count));[m
[31m-    setQuantity(JSON.parse(rootElement.dataset.quantity));[m
[31m-  }, []);[m
[31m-[m
[31m-  // validation実施関数の定義[m
[31m-  const validateFields = () => {[m
[31m-    const newErrors = {};[m
[31m-[m
[31m-    if (!rollCount || rollCount <= 0)[m
[31m-      newErrors.rollCount = "反数は1以上の値を入力してください。";[m
[31m-    if (!quantity || quantity <= 0)[m
[31m-      newErrors.quantity = "数量は1以上の値を入力してください。";[m
[31m-    if (!startDate) newErrors.startDate = "作業開始日を選択してください。";[m
[31m-[m
[31m-    // エラーメッセージ更新関数setErrorsの呼び出し[m
[31m-    setErrors(newErrors);[m
[31m-    // validation状況を更新する関数の呼び出し[m
[31m-    setIsFormValid(Object.keys(newErrors).length === 0);[m
[31m-  };[m
[31m-[m
[31m-  // 入力内容のチェックをするイベントハンドラ関数を定義して、その中で更新用関数を呼び出す[m
[31m-  const handleInputChange = (e, setStateFunction) => {[m
[31m-    setStateFunction(e.target.value);[m
[31m-    validateFields(); // 入力が変更されるたびにバリデーション実行[m
[31m-  };[m
[31m-  // 送信イベントハンドラを定義[m
[31m-  const handleSubmit = (e) => {[m
[31m-    e.preventDefault(); // デフォルトのフォーム送信を防止[m
[31m-    validateFields(); // 更新前に全フォームに対し再度バリデーションを実行[m
[31m-[m
[31m-    if (isFormValid) {[m
[31m-      alert("フォームが正常に送信されました！");[m
[31m-    }[m
[31m-  };[m
[31m-[m
[31m-  return ([m
[31m-    <div>[m
[31m-      <table className="w-full max-w-sm">[m
[31m-        {/* 反数 */}[m
[31m-        <tr className="md:flex md:items-center mb-6">[m
[31m-          <td className="md:w-1/3 py-2">[m
[31m-            <label className="w-1/3 px-4 py-2 text-gray-700 font-bold text-center">[m
[31m-              反数[m
[31m-            </label>[m
[31m-          </td>[m
[31m-          <td className="md:w-2/3">[m
[31m-            <input[m
[31m-              type="number"[m
[31m-              value={rollCount}[m
[31m-              onChange={(e) => handleInputChange(e, setRollCount)}[m
[31m-              min="1"[m
[31m-              placeholder="反数を入力してください"[m
[31m-              className="block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none"[m
[31m-            />[m
[31m-            {errors.rollCount && ([m
[31m-              <p className="text-red-500">{errors.rollCount}</p>[m
[31m-            )}[m
[31m-          </td>[m
[31m-        </tr>[m
[31m-[m
[31m-        {/* 数量 */}[m
[31m-        <tr className="md:flex md:items-center mb-6">[m
[31m-          <td className="md:w-1/3 py-2">[m
[31m-            <label className="w-1/3 px-4 py-2 text-gray-700 font-bold text-center">[m
[31m-              数量[m
[31m-            </label>[m
[31m-          </td>[m
[31m-          <td className="md:w-2/3">[m
[31m-            <input[m
[31m-              type="number"[m
[31m-              value={quantity}[m
[31m-              onChange={(e) => handleInputChange(e, setQuantity)}[m
[31m-              min="1"[m
[31m-              placeholder="数量を入力してください"[m
[31m-              className="block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none"[m
[31m-            />[m
[31m-            {errors.quantity && ([m
[31m-              <p className="text-red-500">{errors.quantity}</p>[m
[31m-            )}[m
[31m-          </td>[m
[31m-        </tr>[m
[31m-      </table>[m
[31m-    </div>[m
[31m-  );[m
[31m-};[m
[31m-[m
[31m-// コンポーネント関数[m
[31m-export default OrderForm;[m
-e 

=========================================================
-e ファイル: app/models/order.rb
-e =========================================================

[1mdiff --git a/app/models/order.rb b/app/models/order.rb[m
[1mindex fe1f846..3664671 100644[m
[1m--- a/app/models/order.rb[m
[1m+++ b/app/models/order.rb[m
[36m@@ -10,7 +10,7 @@[m [mclass Order < ApplicationRecord[m
   has_many :incomplete_work_processes, -> { where.not(work_process_status_id: 3) }, class_name: "WorkProcess"[m
 [m
   validates :company_id, :product_number_id, :color_number_id, :roll_count, :quantity, presence: true[m
[31m-  validates :roll_count, :quantity, numericality: { greater_than_or_equal_to: 1 }[m
[32m+[m[32m  validates :roll_count, :quantity, presence: true, numericality: { greater_than_or_equal_to: 1 }[m
   validate :validate_start_date_presence, on: :create[m
 [m
   # すべての作業工程が完了している注文を取得[m
-e 

=========================================================
-e ファイル: app/models/work_process.rb
-e =========================================================

[1mdiff --git a/app/models/work_process.rb b/app/models/work_process.rb[m
[1mindex 5c3b261..0881898 100644[m
[1m--- a/app/models/work_process.rb[m
[1m+++ b/app/models/work_process.rb[m
[36m@@ -79,8 +79,10 @@[m [mclass WorkProcess < ApplicationRecord[m
 [m
   # 織機の種類登録、変更でwork_processのprocess_estimate_idを更新[m
   def self.decide_machine_type(workprocesses, machine_type_id)[m
[32m+[m
     # params[:machine_type_id]と一致するDBの値を取得[m
     process_estimates = ProcessEstimate.where(machine_type_id: machine_type_id)[m
[32m+[m
     # 初期のWorkProcess配列のprocess_estimate_idを更新[m
     if process_estimates.blank?[m
       raise "No process_estimates found for machine_type_id=#{machine_type_id}"[m
[36m@@ -106,11 +108,11 @@[m [mclass WorkProcess < ApplicationRecord[m
 [m
   # 新規登録：全行程の日時の更新[m
   def self.update_deadline(estimate_workprocesses, start_date)[m
[31m-    update = true[m
[32m+[m[32m    update = false[m
     next_start_date = nil[m
     # 配列を一個ずつ取り出す[m
     estimate_workprocesses.each do |process|[m
[31m-      unless update == true[m
[32m+[m[32m      if update == true[m
         # 開始日の更新が必要[m
         process[:start_date] = next_start_date[m
         start_date = process[:start_date][m
[36m@@ -136,7 +138,7 @@[m [mclass WorkProcess < ApplicationRecord[m
       else[m
         next_start_date = process[:earliest_estimated_completion_date][m
       end[m
[31m-      update = false[m
[32m+[m[32m      update = true[m
       #[m
 [m
     end[m
[36m@@ -151,11 +153,15 @@[m [mclass WorkProcess < ApplicationRecord[m
     next_start_date = nil[m
 [m
     workprocesses_params.each_with_index do |workprocess_params, index|[m
[31m-      # target_work_prcess：current_work_processesの１工程[m
[31m-      target_work_prcess = current_work_processes.find(workprocess_params[:id])[m
[32m+[m[32m      # target_work_process：current_work_processesの１工程[m
[32m+[m[32m      target_work_process = current_work_processes.find(workprocess_params[:id])[m
 [m
       if index == 0[m
[31m-        start_date = target_work_prcess.start_date[m
[32m+[m[32m        # 入力された開始日で更新する[m
[32m+[m[32m        #start_date = target_work_process.start_date[m
[32m+[m[32m        input_start_date = workprocess_params[:start_date].to_date[m
[32m+[m[32m        start_date = input_start_date[m
[32m+[m[32m        target_work_process.start_date = input_start_date[m
       else[m
         input_start_date = workprocess_params[:start_date].to_date[m
         # 入力された開始日が新しい場合は置き換え[m
[36m@@ -170,62 +176,72 @@[m [mclass WorkProcess < ApplicationRecord[m
 [m
       # 織機の種類を変更した場合[m
       # 選択されたparams[:machine_type_id][m
[31m-      if target_work_prcess.process_estimate.machine_type != process_estimates.first.machine_type[m
[31m-        estimate = process_estimates.find_by(work_process_definition_id: target_work_prcess.work_process_definition_id)[m
[32m+[m[32m      if target_work_process.process_estimate.machine_type != process_estimates.first.machine_type[m
[32m+[m[32m        estimate = process_estimates.find_by(work_process_definition_id: target_work_process.work_process_definition_id)[m
         # ナレッジ置き換え[m
[31m-        target_work_prcess.process_estimate = estimate[m
[32m+[m[32m        target_work_process.process_estimate = estimate[m
       end[m
[31m-      target_work_prcess.work_process_status_id = workprocess_params[:work_process_status_id][m
[31m-      target_work_prcess.factory_estimated_completion_date = workprocess_params[:factory_estimated_completion_date][m
[31m-      target_work_prcess.save[m
[32m+[m[32m      target_work_process.work_process_status_id = workprocess_params[:work_process_status_id][m
[32m+[m[32m      target_work_process.factory_estimated_completion_date = workprocess_params[:factory_estimated_completion_date][m
[32m+[m[32m      target_work_process.save[m
       # 更新したナレッジで全行程の日時の更新処理の呼び出し[m
[31m-      new_target_work_prcess, next_start_date = WorkProcess.check_current_work_process(target_work_prcess, start_date, actual_completion_date)[m
[32m+[m[32m      new_target_work_process, next_start_date = WorkProcess.check_current_work_process(target_work_process, start_date, actual_completion_date)[m
       # 開始日の方が新しい場合は置き換え[m
       next_start_date = start_date > next_start_date ? start_date : next_start_date[m
 [m
[31m-      new_target_work_prcess.actual_completion_date = actual_completion_date[m
[31m-      new_target_work_prcess.save[m
[32m+[m[32m      new_target_work_process.actual_completion_date = actual_completion_date[m
[32m+[m[32m      new_target_work_process.save[m
     end[m
   end[m
 [m
[31m-[m
   # 更新：全行程の日時の更新[m
   def self.check_current_work_process(process, start_date, actual_completion_date)[m
[31m-[m
[31m-    # 工程idが2以上の場合[m
[32m+[m[32m    ############################################[m
[32m+[m[32m    # 最短・最長見積もり日とstart_date[m
[32m+[m[32m    ############################################[m
[32m+[m[32m    # 工程idが2以上の場合 糸のあと[m
     if process[:work_process_definition_id].to_i >= 2[m
[31m-      if actual_completion_date.present?[m
[31m-        process[:latest_estimated_completion_date] = actual_completion_date[m
[31m-        process[:earliest_estimated_completion_date] = actual_completion_date[m
[31m-        process[:start_date] = start_date[m
[31m-      else[m
[32m+[m[32m      if actual_completion_date.present? # 完了日が入力されている[m
[32m+[m[32m        process[:latest_estimated_completion_date] = actual_completion_date   #最短見積日は完了日に[m
[32m+[m[32m        process[:earliest_estimated_completion_date] = actual_completion_date #最長見積日は完了日に[m
[32m+[m[32m        process[:start_date] = start_date # 開始日は開始日に[m
[32m+[m[32m      else #完了日が入力されていない[m
       # 開始日の更新が必要[m
[31m-[m
         process[:start_date] = start_date[m
[31m-        # 更新された開始日からナレッジを再計算[m
[32m+[m[32m        # 更新された開始日から終了予想日を再計算[m
         self.calc_process_estimate(process, start_date)[m
       end[m
     end[m
 [m
[31m-    if process[:work_process_definition_id].to_i == 1[m
[31m-      if actual_completion_date.present?[m
[31m-        process[:latest_estimated_completion_date] = actual_completion_date[m
[31m-        process[:earliest_estimated_completion_date] = actual_completion_date[m
[32m+[m[32m    if process[:work_process_definition_id].to_i == 1 # 糸工程の場合[m
[32m+[m[32m      if actual_completion_date.present? # 完了日が入力されている[m
[32m+[m[32m        process[:latest_estimated_completion_date] = actual_completion_date   #最短見積日は完了日に[m
[32m+[m[32m        process[:earliest_estimated_completion_date] = actual_completion_date #最長見積日は完了日に[m
       else[m
[31m-        process = self.calc_process_estimate(process, start_date)[m
[32m+[m[32m        # 更新された開始日から終了予想日を再計算[m
[32m+[m[32m        # 開始日の更新はしない（？）[m
[32m+[m[32m        process = self.calc_process_estimate(process, start_date) #[m
       end[m
     end[m
 [m
     # 整理加工の開始日調整[m
[31m-    if process[:work_process_definition_id].to_i == 4[m
[32m+[m[32m    ############################################[m
[32m+[m[32m    # 次工程の開始日[m
[32m+[m[32m    # 製織の次だけ曜日を考慮[m
[32m+[m[32m    # それ以外は最短終了日が次工程の開始日（なぜこうしたのか？）[m
[32m+[m[32m    ############################################[m
[32m+[m[32m    if process[:work_process_definition_id].to_i == 4 # 製織工程[m
       # 日曜日なら翌々週の月曜が作業開始日[m
       if process[:earliest_estimated_completion_date].to_date.wday == 0[m
         next_start_date = process[:earliest_estimated_completion_date].to_date + 8[m
       else[m
         # 次の月曜日が開始日[m
         next_start_date = process[:earliest_estimated_completion_date].to_date.next_week[m
[32m+[m[32m        # なぜ製織工程だけ、曜日判別から次開始日を決めているのか[m
[32m+[m[32m        # 全体に、処理の意図が不明[m
       end[m
     else[m
[32m+[m[32m      #[m
       # ここに、工程が５なら次の開始日は不要の処理を作りたい[m
       next_start_date = process[:earliest_estimated_completion_date][m
     end[m
[36m@@ -275,6 +291,9 @@[m [mclass WorkProcess < ApplicationRecord[m
 [m
   # 現在作業中の作業工程を取得するスコープ[m
   def self.current_work_process[m
[32m+[m
[32m+[m[32m    # 全プロセスから検索しているが、注文番号で絞らなくてよいのか（？）[m
[32m+[m
     # 最新の「作業完了」ステータスの作業工程を取得[m
     latest_completed_wp = joins(:work_process_status)[m
                             .where(work_process_statuses: { name: '作業完了' })[m
-e 

=========================================================
-e ファイル: app/views/admin/home/index.html.erb
-e =========================================================

[1mdiff --git a/app/views/admin/home/index.html.erb b/app/views/admin/home/index.html.erb[m
[1mindex 4ab2363..6e0688e 100644[m
[1m--- a/app/views/admin/home/index.html.erb[m
[1m+++ b/app/views/admin/home/index.html.erb[m
[36m@@ -1,28 +1,5 @@[m
 <h1 class="px-4 py-2 text-3xl font-bold text-gray-700 mt-6 mb-6 text-center">ホーム画面</h1>[m
[31m-<div class="container mx-auto p-4 mb-8">[m
[31m-  <div class="bg-teal-500 text-white rounded-t-lg px-6 py-3 font-bold text-lg">[m
[31m-    ご利用の手引き[m
[31m-  </div>[m
[31m-  <div class="bg-gray-50 border-l border-r border-b border-gray-200 rounded-b-lg p-6 mb-2">[m
[31m-    <div class="mb-4">[m
[31m-      <p class="font-semibold text-gray-700 mb-2">LooMaは以下のメニューから構成され、織物生産プロセスを総合的に管理できます：</p>[m
[31m-      <ol class="list-decimal pl-6 space-y-2 text-gray-700">[m
[31m-        <li><span class="font-medium">織機一覧</span> - 全生産者の織機の稼働状況および割当状況を確認できます。</li>[m
[31m-        <li><span class="font-medium">発注一覧</span> - 過去の発注履歴と進捗状況を確認・管理できます</li>[m
[31m-        <li><span class="font-medium">発注する</span> - 新規発注の登録ができます（各工程の詳細情報を入力）</li>[m
[31m-        <li><span class="font-medium">納期の予想</span> - 工程ごとの標準納期を設定し、全体の納期予測を最適化できます</li>[m
[31m-        <li><span class="font-medium">ユーザー管理</span> - 発注企業（管理者）および製造企業（機屋）のアカウント設定と権限管理を行います</li>[m
[31m-      </ol>[m
[31m-    </div>[m
[31m-    <!-- 修正したTipsセクション -->[m
[31m-    <div class="flex items-start border-t border-gray-200 pt-4">[m
[31m-      <div class="flex-shrink-0 text-teal-500 mr-2 mt-1">[m
[31m-        <i class="fas fa-info-circle"></i>[m
[31m-      </div>[m
[31m-      <p class="text-gray-700">ホーム画面の各機屋パネルから詳細ページへ移動して、生産者毎の織機状況を確認・更新できます</p>[m
[31m-    </div>[m
[31m-  </div>[m
[31m-</div>[m
[32m+[m
 <section class="mb-12">[m
     <div class="container mx-auto p-4">[m
         <div class="grid grid-cols-1 md:grid-cols-2 gap-4">[m
-e 

=========================================================
-e ファイル: app/views/admin/orders/_gant_chart.html.erb
-e =========================================================

[1mdiff --git a/app/views/admin/orders/_gant_chart.html.erb b/app/views/admin/orders/_gant_chart.html.erb[m
[1mdeleted file mode 100644[m
[1mindex 7b59c33..0000000[m
[1m--- a/app/views/admin/orders/_gant_chart.html.erb[m
[1m+++ /dev/null[m
[36m@@ -1,10 +0,0 @@[m
[31m-<div class='gantt-wrap'>[m
[31m-  <svg id="gantt"></svg>[m
[31m-</div>[m
[31m-[m
[31m-<script>[m
[31m-  window.onload = function() {[m
[31m-    const work_processes = <%= raw work_processes %>[m
[31m-    const gantt = new Gantt("#gantt", work_processes);[m
[31m-  };[m
[31m-</script>[m
-e 

=========================================================
-e ファイル: app/views/admin/orders/edit.html_back.erb
-e =========================================================

[1mdiff --git a/app/views/admin/orders/edit.html_back.erb b/app/views/admin/orders/edit.html_back.erb[m
[1mnew file mode 100644[m
[1mindex 0000000..6371ff0[m
[1m--- /dev/null[m
[1m+++ b/app/views/admin/orders/edit.html_back.erb[m
[36m@@ -0,0 +1,160 @@[m
[32m+[m[32m<h1 class="px-4 py-2 text-3xl font-bold text-gray-700 mt-6 mb-6 text-center">発注編集</h1>[m
[32m+[m
[32m+[m[32m<%= form_with(model: @order, url: admin_order_path(@order), method: :patch, local: true, data: { turbo: false }) do |f| %>[m
[32m+[m[32m<section class="mb-12">[m
[32m+[m[32m  <h2 class="px-4 text-2xl font-semibold text-gray-800 mt-6 mb-6">商品情報</h2>[m
[32m+[m[32m  <div class="px-4 py-2 overflow-x-auto mb-6 whitespace-nowrap">[m
[32m+[m[32m    <table class="min-w-full border border-gray-300 bg-gray-100">[m
[32m+[m[32m      <tbody>[m
[32m+[m[32m        <tr class="bg-gray-100 border-b">[m
[32m+[m[32m          <th class="w-1/3 px-4 py-2 text-center text-gray-700">会社</th>[m
[32m+[m[32m          <td class="w-2/3 px-4 py-2 text-gray-900 bg-white">[m
[32m+[m[32m            <%= f.collection_select :company_id, Company.all, :id, :name, prompt: "新しい会社を選択" %>[m
[32m+[m[32m          </td>[m
[32m+[m[32m        </tr>[m
[32m+[m[32m        <tr class="bg-gray-100 border-b">[m
[32m+[m[32m          <th class="w-1/3 px-4 py-2 text-center text-gray-700">品番</th>[m
[32m+[m[32m          <td class="w-2/3 px-4 py-2 text-gray-900 bg-white">[m
[32m+[m[32m            <%= f.collection_select :product_number_id, ProductNumber.all, :id, :number, prompt: "新しい品番を選択" %>[m
[32m+[m[32m          </td>[m
[32m+[m[32m        </tr>[m
[32m+[m[32m        <tr class="bg-gray-100 border-b">[m
[32m+[m[32m          <th class="w-1/3 px-4 py-2 text-center text-gray-700">色番</th>[m
[32m+[m[32m          <td class="w-2/3 px-4 py-2 text-gray-900 bg-white">[m
[32m+[m[32m            <%= f.collection_select :color_number_id, ColorNumber.all, :id, :color_code, prompt: "新しい色番号を選択" %>[m
[32m+[m[32m          </td>[m
[32m+[m[32m        </tr>[m
[32m+[m
[32m+[m[32m        <tr class="bg-gray-100 border-b">[m
[32m+[m[32m          <th class="w-1/3 px-4 py-2 text-center text-gray-700">ロール数</th>[m
[32m+[m[32m          <td class="w-2/3 px-4 py-2 text-gray-900 bg-white">[m
[32m+[m[32m            <%= f.number_field :roll_count, placeholder: "新しいロール数を入力", class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>[m
[32m+[m[32m          </td>[m
[32m+[m[32m        </tr>[m
[32m+[m[32m        <tr class="bg-gray-100 border-b">[m
[32m+[m[32m          <th class="w-1/3 px-4 py-2 text-center text-gray-700">数量</th>[m
[32m+[m[32m          <td class="w-2/3 px-4 py-2 text-gray-900 bg-white">[m
[32m+[m[32m            <%= f.number_field :quantity, placeholder: "新しい数量を入力", class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>[m
[32m+[m[32m          </td>[m
[32m+[m[32m        </tr>[m
[32m+[m
[32m+[m[32m        <tr class="bg-gray-100 border-b">[m
[32m+[m[32m          <th class="w-1/3 px-4 py-2 text-center text-gray-700">織機の種類</th>[m
[32m+[m[32m          <td class="w-2/3 px-4 py-2 text-gray-900 bg-white">[m
[32m+[m[32m            <% machine_type_name = @order.work_processes.joins(process_estimate: :machine_type).pluck("machine_types.id").uniq %>[m
[32m+[m[32m            <%= select_tag :machine_type_id,[m
[32m+[m[32m                          options_from_collection_for_select(MachineType.all, :id, :name, machine_type_name) %>[m
[32m+[m[32m          </td>[m
[32m+[m[32m        </tr>[m
[32m+[m[32m      </tbody>[m
[32m+[m[32m    </table>[m
[32m+[m[32m  </div>[m
[32m+[m[32m</section>[m
[32m+[m
[32m+[m[32m<section class="mb-12">[m
[32m+[m[32m  <h2 class="px-4 text-2xl font-semibold text-gray-800 mt-6 mb-6">織機の稼働状況</h2>[m
[32m+[m[32m  <div class="px-4 py-2 overflow-x-auto mb-6 whitespace-nowrap">[m
[32m+[m[32m      <table class="min-w-full border border-gray-300 bg-gray-100">[m
[32m+[m[32m        <% machine_all = @order.company&.machines %>[m
[32m+[m[32m        <% machine_ids = @order.work_processes.joins(:machine_assignments).pluck('machine_assignments.machine_id').uniq %>[m
[32m+[m[32m        <% if machine_ids.any? %>[m
[32m+[m[32m        <% machines = Machine.where(id: machine_ids) %>[m
[32m+[m[32m          <thead>[m
[32m+[m[32m            <% machines.each do |machine| %>[m
[32m+[m[32m            <% current_status = machine.machine_assignments.joins(:work_process).where(work_processes: { order_id: @order.id }).order(updated_at: :desc).first&.machine_status_id %>[m
[32m+[m[32m            <% machine_assignment = machine.machine_assignments.order(:created_at).last %>[m
[32m+[m[32m            <%= hidden_field_tag "order[machine_assignments_attributes][][id]", machine_assignment&.id %>[m
[32m+[m[32m              <tr class="bg-gray-100 border-b">[m
[32m+[m[32m                <th class="w-1/3 px-4 py-2 text-center text-gray-700">織機名</th>[m
[32m+[m[32m                <td class="w-2/3 px-4 py-2 text-gray-900 bg-white">[m
[32m+[m[32m                  <%= select_tag "order[machine_assignments_attributes][][machine_id]",[m
[32m+[m[32m                    options_for_select(machine_all.map { |m| ["#{m.name}（#{m.machine_type.name}）", m.id] }, machine&.id),[m
[32m+[m[32m                    { prompt: "織機名を選択してください", class: "form-control" } %>[m
[32m+[m[32m                </td>[m
[32m+[m[32m              </tr>[m
[32m+[m[32m          </thead>[m
[32m+[m[32m          <tbody>[m
[32m+[m[32m              <tr class="bg-gray-100 border-b">[m
[32m+[m[32m                <th class="w-1/3 px-4 py-2 text-center text-gray-700">稼働状況</th>[m
[32m+[m[32m                <td class="w-2/3 px-4 py-2 text-gray-900 bg-white">[m
[32m+[m[32m                  <%= select_tag "order[machine_assignments_attributes][][machine_status_id]", options_from_collection_for_select(@machine_statuses_for_form, :id, :name, current_status), { prompt: "稼働状況を選択してください", class: "form-control" } %>[m
[32m+[m[32m                </td>[m
[32m+[m[32m              </tr>[m
[32m+[m[32m            <% end %>[m
[32m+[m[32m          </tbody>[m
[32m+[m[32m      </table>[m
[32m+[m[32m      <% else %>[m
[32m+[m[32m      <p class="py-2 text-rose-500">この受注にはまだ織機が割り当てられていません。織機と稼働状況を割り当ててください。</p>[m
[32m+[m[32m      <table class="min-w-full border border-gray-300">[m
[32m+[m[32m          <thead>[m
[32m+[m[32m            <tr class="bg-gray-100 border-b">[m
[32m+[m[32m              <th class="w-1/3 px-4 py-2 text-center text-gray-700">織機名</th>[m
[32m+[m[32m              <td class="w-2/3 px-4 py-2 text-gray-900 bg-white">[m
[32m+[m[32m                <% machines = Machine.where(id: machine_ids) %>[m
[32m+[m[32m                <%= select_tag "order[machine_assignments_attributes][][machine_id]",[m
[32m+[m[32m                  options_for_select(machine_all.map { |m| ["#{m.name}（#{m.machine_type&.name || '不明なタイプ'}）", m.id] }, nil),[m
[32m+[m[32m                  { prompt: "織機名を選択してください", class: "form-control" } %>[m
[32m+[m[32m              </td>[m
[32m+[m[32m            </tr>[m
[32m+[m[32m          </thead>[m
[32m+[m[32m        <% end %>[m
[32m+[m[32m      </table>[m
[32m+[m[32m  </div>[m
[32m+[m[32m</section>[m
[32m+[m
[32m+[m[32m<section class="mb-12">[m
[32m+[m[32m  <h2 class="px-4 text-2xl font-semibold text-gray-800 mt-6 mb-6">作業工程</h2>[m
[32m+[m[32m  <div class="px-4 py-2 overflow-x-auto mb-6 whitespace-nowrap">[m
[32m+[m[32m    <table class="min-w-full border text-left border-gray-300">[m
[32m+[m[32m      <thead class="bg-gray-200">[m
[32m+[m[32m        <tr class="bg-gray-100">[m
[32m+[m[32m          <th class="w-1/4 px-4 py-2 text-gray-700 border-b">作業工程名</th>[m
[32m+[m[32m          <th class="w-1/4 px-4 py-2 text-gray-700 border-b">現在の進捗</th>[m
[32m+[m[32m          <th class="w-1/4 px-4 py-2 text-gray-700 border-b">開始日</th>[m
[32m+[m[32m          <th class="w-1/4 px-4 py-2 text-gray-700 border-b">完了見込み(最短)</th>[m
[32m+[m[32m          <th class="w-1/4 px-4 py-2 text-gray-700 border-b">完了見込み(最長)</th>[m
[32m+[m[32m          <th class="w-1/4 px-4 py-2 text-gray-700 border-b">機屋の完了予定日</th>[m
[32m+[m[32m          <th class="w-1/4 px-4 py-2 text-gray-700 border-b">機屋の完了日</th>[m
[32m+[m[32m        </tr>[m
[32m+[m[32m      </thead>[m
[32m+[m[32m      <tbody>[m
[32m+[m[32m        <%= f.fields_for :work_processes do |wp_form| %>[m
[32m+[m[32m          <tr class="hover:bg-gray-100">[m
[32m+[m[32m            <td class="px-4 py-2 border-b text-gray-900"><%= wp_form.object&.work_process_definition&.name %></td>[m
[32m+[m[32m            <td class="px-4 py-2 border-b text-gray-900"><%= wp_form.collection_select :work_process_status_id,[m
[32m+[m[32m              WorkProcessStatus.all, :id, :name,[m
[32m+[m[32m              selected: wp_form.object&.work_process_status_id,[m
[32m+[m[32m              include_blank: "選択してください" %></td>[m
[32m+[m[32m            <td class="px-4 py-2 border-b text-gray-900">[m
[32m+[m[32m              <%= wp_form.date_field :start_date, value: wp_form.object&.start_date, class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>[m
[32m+[m[32m            </td>[m
[32m+[m[32m            <td class="px-4 py-2 border-b text-gray-900"><%= wp_form.object&.earliest_estimated_completion_date %></td>[m
[32m+[m[32m            <td class="px-4 py-2 border-b text-gray-900"><%= wp_form.object&.latest_estimated_completion_date %></td>[m
[32m+[m[32m            <%# wp_form.hidden_field :earliest_estimated_completion_date, value: wp_form.object&.earliest_estimated_completion_date %>[m
[32m+[m[32m            <%# wp_form.hidden_field :latest_estimated_completion_date, value: wp_form.object&.latest_estimated_completion_date %>[m
[32m+[m[32m            <%# wp_form.hidden_field :work_process_definition_id, value: wp_form.object&.work_process_definition_id %>[m
[32m+[m[32m            <%# wp_form.hidden_field :start_date, value: wp_form.object&.start_date %>[m
[32m+[m[32m            <td class="px-4 py-2 border-b text-gray-900">[m
[32m+[m[32m              <%= wp_form.date_field :factory_estimated_completion_date, placeholder: "機屋の完了予定日を選択してください", class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>[m
[32m+[m[32m            </td>[m
[32m+[m[32m            <td class="px-4 py-2 border-b text-gray-900">[m
[32m+[m[32m              <%= wp_form.date_field :actual_completion_date, placeholder: "機屋の完了日を選択してください", class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>[m
[32m+[m[32m            </td>[m
[32m+[m[32m          </tr>[m
[32m+[m[32m        <% end %>[m
[32m+[m[32m      </tbody>[m
[32m+[m[32m    </table>[m
[32m+[m[32m  </div>[m
[32m+[m[32m</section>[m
[32m+[m
[32m+[m[32m<section class="mb-12">[m
[32m+[m[32m  <div class="flex justify-center space-x-2">[m
[32m+[m[32m    <div class="px-2 py-2">[m
[32m+[m[32m      <%= f.submit '更新', class: "inline-block px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-700" %>[m
[32m+[m[32m    </div>[m
[32m+[m[32m    <div class="px-2 py-2">[m
[32m+[m[32m      <%= link_to "戻る", admin_order_path(@order), class: "inline-block px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-700" %>[m
[32m+[m[32m    </div>[m
[32m+[m[32m  </div>[m
[32m+[m[32m</section>[m
[32m+[m[32m<% end %>[m
-e 

=========================================================
-e ファイル: app/views/admin/orders/gant_index.html.erb
-e =========================================================

[1mdiff --git a/app/views/admin/orders/gant_index.html.erb b/app/views/admin/orders/gant_index.html.erb[m
[1mdeleted file mode 100644[m
[1mindex a9bd504..0000000[m
[1m--- a/app/views/admin/orders/gant_index.html.erb[m
[1m+++ /dev/null[m
[36m@@ -1,147 +0,0 @@[m
[31m-  <h1 class="px-4 py-2 text-3xl font-bold text-gray-700 mt-6 mb-6 text-center">工程ごとの機屋一覧</h1>[m
[31m-[m
[31m-    <style>[m
[31m-      /* テーブル全体の背景色を白に設定 */[m
[31m-      .gantt-wrap {[m
[31m-        display: flex;[m
[31m-        align-items: flex-start;[m
[31m-        background-color: #ffffff; /* 背景色を白に設定 */[m
[31m-      }[m
[31m-[m
[31m-      /* 内部のテーブルの背景を白に設定 */[m
[31m-      .gantt-wrap table {[m
[31m-        background-color: #ffffff; /* テーブル全体の背景色 */[m
[31m-        border-collapse: collapse; /* 境界線の余白を削除 */[m
[31m-      }[m
[31m-[m
[31m-        /* クラスに応じたスタイルを設定 */[m
[31m-      g.bar-wrapper.class-a rect.bar-progress {[m
[31m-        fill: #3498db !important; /* 青 */[m
[31m-      }[m
[31m-[m
[31m-      g.bar-wrapper.class-b rect.bar-progress {[m
[31m-        fill: #2ecc71 !important; /* 緑 */[m
[31m-      }[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-    </style>[m
[31m-[m
[31m-  <div class='gantt-wrap flex min-w-[800px]'>[m
[31m-    <table class="flex-none w-1/3 border border-gray-300" style='border-spacing:0px !important;'>[m
[31m-      <thead class="pb-20">[m
[31m-        <tr class='border border-gray-300'>[m
[31m-          <th class="p-5" style="height:55px;">会社</th>[m
[31m-          <th class="p-5" style="height:55px;">織機</th>[m
[31m-          <th class="p-5" style="height:55px;">品番</th>[m
[31m-          <th class="p-5" style="height:55px;">ステータス</th>[m
[31m-        </tr>[m
[31m-      </thead>[m
[31m-      <tbody>[m
[31m-        <% grouped_orders = JSON.parse(@orders).group_by { |order| [order["company"], order["machine"], order["product_number"]] } %>[m
[31m-        <%# <% binding.irb %>[m
[31m-        <% grouped_orders.each do |(company, machine, product_number), orders| %>[m
[31m-          <% orders.each_with_index do |order, index| %>[m
[31m-            <tr class='border border-gray-300' style="height:35px; box-sizing: content-box;">[m
[31m-              <% if index == 0 %>[m
[31m-                <td class='text-xs border border-gray-300' style="height:35px; box-sizing: content-box;" rowspan="<%= orders.size %>"><%= company %></td>[m
[31m-                <td class='text-xs border border-gray-300' style="height:35px; box-sizing: content-box;" rowspan="<%= orders.size %>"><%= machine %></td>[m
[31m-                <td class='text-xs border border-gray-300' style="height:35px; box-sizing: content-box;" rowspan="<%= orders.size %>"><%= product_number %></td>[m
[31m-              <% end %>[m
[31m-              <td class='text-xs border border-gray-300' style="height:35px; box-sizing: content-box;"><%= order["work_process_status"] %></td>[m
[31m-            </tr>[m
[31m-          <% end %>[m
[31m-        <% end %>[m
[31m-[m
[31m-      </tbody>[m
[31m-    </table>[m
[31m-[m
[31m-    <svg id="gantt" class="flex-grow"></svg>[m
[31m-  </div>[m
[31m-[m
[31m-  <script>[m
[31m-    window.addEventListener("turbo:load", function () {[m
[31m-      const orders = <%= raw @orders %>[m
[31m-        console.log(orders)[m
[31m-[m
[31m-      const gantt = new Gantt("#gantt", orders, {[m
[31m-        view_mode: 'Month',[m
[31m-        header_height: 45,[m
[31m-        bar_height: 20,[m
[31m-        // column_width: 30,[m
[31m-        // padding: 60[m
[31m-      });[m
[31m-[m
[31m-      //[m
[31m-      // 横軸の月ラベルを日本語に変更[m
[31m-      setTimeout(function () {[m
[31m-        console.log('timeout proc');[m
[31m-        const labels = document.querySelectorAll(".lower-text");[m
[31m-        const monthMapping = {[m
[31m-          "January": "1月",[m
[31m-          "February": "2月",[m
[31m-          "March": "3月",[m
[31m-          "April": "4月",[m
[31m-          "May": "5月",[m
[31m-          "June": "6月",[m
[31m-          "July": "7月",[m
[31m-          "August": "8月",[m
[31m-          "September": "9月",[m
[31m-          "October": "10月",[m
[31m-          "November": "11月",[m
[31m-          "December": "12月",[m
[31m-        };[m
[31m-[m
[31m-        labels.forEach((label) => {[m
[31m-          const text = label.textContent.trim();[m
[31m-          if (monthMapping[text]) {[m
[31m-            label.textContent = monthMapping[text];[m
[31m-          }[m
[31m-        });[m
[31m-      }, 500); // 描画が完了するまで待機[m
[31m-[m
[31m-      const popups = document.querySelectorAll(".bar-wrapper");[m
[31m-      // popups.addEventListener("click", setPopup);[m
[31m-[m
[31m-      // popup内の月ラベルを日本語に変更[m
[31m-      popups.forEach((popup) => {[m
[31m-        popup.addEventListener("click", function () {[m
[31m-          setTimeout(replacePopupDate, 100);[m
[31m-        });[m
[31m-      });[m
[31m-[m
[31m-      function replacePopupDate() {[m
[31m-        console.log('timeout proc2');[m
[31m-        const popupSubtitles = document.querySelectorAll(".subtitle");[m
[31m-        console.log(popupSubtitles);[m
[31m-        const monthMapping = {[m
[31m-          "January": "1 /",[m
[31m-          "February": "2 /",[m
[31m-          "March": "3 /",[m
[31m-          "April": "4/",[m
[31m-          "May": "5/",[m
[31m-          "June": "6/",[m
[31m-          "July": "7/",[m
[31m-          "August": "8/",[m
[31m-          "September": "9/",[m
[31m-          "October": "10 /",[m
[31m-          "November": "11 /",[m
[31m-          "December": "12 /",[m
[31m-        };[m
[31m-[m
[31m-        popupSubtitles.forEach((subtitle) => {[m
[31m-          let text = subtitle.textContent.trim(); // テキスト内容を取得[m
[31m-          console.log("Before Translation:", text);[m
[31m-[m
[31m-          // 月名を日本語に置き換える[m
[31m-          for (const [english, japanese] of Object.entries(monthMapping)) {[m
[31m-            text = text.replace(new RegExp(english, "g"), japanese); // すべての一致箇所を置換[m
[31m-          }[m
[31m-[m
[31m-          subtitle.textContent = text; // 翻訳後のテキストを設定[m
[31m-          console.log("After Translation:", subtitle.textContent);[m
[31m-        });[m
[31m-      }[m
[31m-    })[m
[31m-  </script>[m
-e 

=========================================================
-e ファイル: app/views/admin/orders/ma_index.html.bk.erb
-e =========================================================

[1mdiff --git a/app/views/admin/orders/ma_index.html.bk.erb b/app/views/admin/orders/ma_index.html.bk.erb[m
[1mdeleted file mode 100644[m
[1mindex 8aadae0..0000000[m
[1m--- a/app/views/admin/orders/ma_index.html.bk.erb[m
[1m+++ /dev/null[m
[36m@@ -1,143 +0,0 @@[m
[31m-<!DOCTYPE html>[m
[31m-<html>[m
[31m-<head>[m
[31m-  <!-- React and ReactDOM from CDN -->[m
[31m-  <script src="https://unpkg.com/react@18/umd/react.development.js"></script>[m
[31m-  <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>[m
[31m-  <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/7.23.9/babel.min.js"></script>[m
[31m-  <style>[m
[31m-    .drag-target { cursor: move; background-color: #f3f3f3; }[m
[31m-    .droppable-zone { border: 2px dashed #4CAF50; padding: 10px; min-height: 50px; }[m
[31m-    .dragging { opacity: 0.5; }[m
[31m-  </style>[m
[31m-</head>[m
[31m-<body>[m
[31m-[m
[31m-<h1 class="px-4 py-2 text-3xl font-bold text-gray-800 mt-6 mb-6 text-center">織機未割り当ての商品</h1>[m
[31m-[m
[31m-<script>[m
[31m-  var test = <%= @test %>;[m
[31m-  var initialOrders = <%= @unassigned_orders.to_json([m
[31m-    only: [:id, :start_date, :factory_estimated_completion_date],[m
[31m-    include: {[m
[31m-      company: { only: [:name] },[m
[31m-      product_number: { only: [:number] },[m
[31m-      color_number: { only: [:color_code] },[m
[31m-      latest_machine_assignment: {[m
[31m-        include: { machine: { only: [:name] } }[m
[31m-      }[m
[31m-    }[m
[31m-  ).html_safe %>;[m
[31m-</script>[m
[31m-[m
[31m-<div id="drag-drop-root"></div>[m
[31m-[m
[31m-<script type="text/babel">[m
[31m-  const { useState } = React;[m
[31m-  function DragDropApp() {[m
[31m-    // const initialOrders = [[m
[31m-    //   { id: 1, company: "A社", product: "ABC-123", color: "Red" },[m
[31m-    //   { id: 2, company: "B社", product: "XYZ-456", color: "Blue" }[m
[31m-    // ];[m
[31m-[m
[31m-    const [unassignedOrders, setUnassignedOrders] = useState(initialOrders);[m
[31m-    const [assignedOrders, setAssignedOrders] = useState([]);[m
[31m-[m
[31m-    // ドラッグの開始時の処理を定義[m
[31m-    const onDragStart = (e, order) => {[m
[31m-      // dataTransferにドラッグされた要素（order オブジェクト）がJSONとして保存される[m
[31m-      e.dataTransfer.setData("order", JSON.stringify(order));[m
[31m-    };[m
[31m-[m
[31m-    // ドロップ[m
[31m-    const onDrop = (e, machineName) => {[m
[31m-      // デフォルトの動作を防ぐ処理 ←必要？[m
[31m-      e.preventDefault();[m
[31m-      // orderデータの取得、JSONからorder オブジェクトに変換[m
[31m-      const order = JSON.parse(e.dataTransfer.getData("order"));[m
[31m-      // 定義した関数setAssignedOrdersを実行して割り当てられたassignedOrdersを更新[m
[31m-      setAssignedOrders([...assignedOrders, { ...order, machine: machineName }]);[m
[31m-      setUnassignedOrders(unassignedOrders.filter(o => o.id !== order.id));[m
[31m-    };[m
[31m-[m
[31m-    return ([m
[31m-      <div>[m
[31m-        <h2>未割り当ての商品</h2>[m
[31m-        <table className="table-auto border-collapse border border-gray-300">[m
[31m-          <thead>[m
[31m-            <tr className="bg-gray-100">[m
[31m-              <th className="py-2 px-4 border">ID</th>[m
[31m-              <th className="py-2 px-4 border">会社名</th>[m
[31m-              <th className="py-2 px-4 border">品番</th>[m
[31m-              <th className="py-2 px-4 border">色番</th>[m
[31m-              <th className="py-2 px-4 text-gray-700 border-b">現在の工程</th>[m
[31m-              <th className="py-2 px-4 text-gray-700 border-b">開始日</th>[m
[31m-              <th className="py-2 px-4 text-gray-700 border-b">機屋の完了予定日</th>[m
[31m-              <th className="py-2 px-4 text-gray-700 border-b">稼働状況</th>[m
[31m-            </tr>[m
[31m-          </thead>[m
[31m-          <tbody>[m
[31m-            <!-- state配列unassignedOrdersをtrタグで展開 -->[m
[31m-            {unassignedOrders.map(order => ([m
[31m-              // 配列の要素にkeyをつけて識別[m
[31m-              <tr key={order.id}[m
[31m-                  className="drag-target"[m
[31m-                  draggable // draggable = true[m
[31m-                  // onDragStartイベントをtrタグに登録[m
[31m-                  onDragStart={(e) => onDragStart(e, order)}>[m
[31m-                <td className="py-2 px-4 border">{order.id}</td>[m
[31m-                <td className="py-2 px-4 border">{order.company.name}</td>[m
[31m-                <td className="py-2 px-4 border">{order.product_number.number}</td>[m
[31m-                <td className="py-2 px-4 border">{order.color_number.color_code}</td>[m
[31m-                <td className="py-2 px-4 border">{order.work_process_definition?.name || "未設定"}</td>[m
[31m-                <td className="py-2 px-4 border">{order.start_date}</td>[m
[31m-                <td className="py-2 px-4 border">{order.factory_estimated_completion_date || "未設定"}</td>[m
[31m-                <td className="py-2 px-4 border">{order.latest_machine_assignment?.machine?.name || "ー"}</td>[m
[31m-              </tr>[m
[31m-            ))}[m
[31m-          </tbody>[m
[31m-        </table>[m
[31m-[m
[31m-        <h2 className="mt-6">織機割り当て済の商品</h2>[m
[31m-[m
[31m-        <div className="droppable-zone"[m
[31m-             onDragOver={(e) => e.preventDefault()}[m
[31m-             onDrop={(e) => onDrop(e, "機械A")}>[m
[31m-          <table className="table-auto border-collapse border border-gray-300">[m
[31m-            <thead>[m
[31m-              <tr className="bg-gray-100">[m
[31m-                <th className="py-2 px-4 border">ID</th>[m
[31m-                <th className="py-2 px-4 border">会社名</th>[m
[31m-                <th className="py-2 px-4 border">品番</th>[m
[31m-                <th className="py-2 px-4 border">色番</th>[m
[31m-                <th className="py-2 px-4 text-gray-700 border-b">現在の工程</th>[m
[31m-                <th className="py-2 px-4 text-gray-700 border-b">開始日</th>[m
[31m-                <th className="py-2 px-4 text-gray-700 border-b">機屋の完了予定日</th>[m
[31m-                <th className="py-2 px-4 text-gray-700 border-b">稼働状況</th>[m
[31m-              </tr>[m
[31m-            </thead>[m
[31m-            <tbody>[m
[31m-              {assignedOrders.map((order, index) => ([m
[31m-                <tr key={index}>[m
[31m-                <td className="py-2 px-4 border">{order.id}</td>[m
[31m-                <td className="py-2 px-4 border">{order.company.name}</td>[m
[31m-                <td className="py-2 px-4 border">{order.product_number.number}</td>[m
[31m-                <td className="py-2 px-4 border">{order.color_number.color_code}</td>[m
[31m-                <td className="py-2 px-4 border">{order.work_process_definition?.name || "未設定"}</td>[m
[31m-                <td className="py-2 px-4 border">{order.start_date}</td>[m
[31m-                <td className="py-2 px-4 border">{order.factory_estimated_completion_date || "未設定"}</td>[m
[31m-                <td className="py-2 px-4 border">{order.latest_machine_assignment?.machine?.name || "ー"}</td>[m
[31m-                </tr>[m
[31m-              ))}[m
[31m-            </tbody>[m
[31m-          </table>[m
[31m-        </div>[m
[31m-      </div>[m
[31m-    );[m
[31m-  }[m
[31m-[m
[31m-  ReactDOM.createRoot(document.getElementById("drag-drop-root")).render(<DragDropApp />);[m
[31m-</script>[m
[31m-[m
[31m-</body>[m
[31m-</html>[m
-e 

=========================================================
-e ファイル: app/views/admin/orders/ma_index.html.erb
-e =========================================================

[1mdiff --git a/app/views/admin/orders/ma_index.html.erb b/app/views/admin/orders/ma_index.html.erb[m
[1mindex 7f92b0e..d4388c9 100644[m
[1m--- a/app/views/admin/orders/ma_index.html.erb[m
[1m+++ b/app/views/admin/orders/ma_index.html.erb[m
[36m@@ -1,105 +1,146 @@[m
 <!DOCTYPE html>[m
[32m+[m[32m<html>[m
 <head>[m
   <!-- React and ReactDOM from CDN -->[m
   <script src="https://unpkg.com/react@18/umd/react.development.js"></script>[m
   <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>[m
   <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/7.23.9/babel.min.js"></script>[m
[32m+[m[32m  <style>[m
[32m+[m[32m    .drag-target { cursor: move; background-color: #f3f3f3; }[m
[32m+[m[32m    .droppable-zone { border: 2px dashed #4CAF50; padding: 10px; min-height: 50px; }[m
[32m+[m[32m    .dragging { opacity: 0.5; }[m
[32m+[m[32m  </style>[m
 </head>[m
 <body>[m
[31m-  <h1 class="px-4 py-2 text-3xl font-bold text-gray-800 mt-6 mb-6 text-center">織機未割り当ての商品</h1>[m
[31m-  <%# 割り当て元 %>[m
[31m-  <div id="root">[m
[31m-    <section class="mb-12">[m
[31m-      <div class="px-4 pb-2 relative overflow-x-auto whitespace-nowrap sm:rounded-lg">[m
[31m-        <% if @unassigned_orders.any? %>[m
[31m-          <table class="flex-none w-full text-md border text-left rtl:text-right border-gray-300">[m
[31m-            <thead class="uppercase">[m
[31m-              <tr class="bg-gray-100">[m
[31m-                <th scope="col" class="py-2 px-4 text-gray-700 border-b">ID</th>[m
[31m-                <th scope="col" class="py-2 px-4 text-gray-700 border-b">会社名</th>[m
[31m-                <th scope="col" class="py-2 px-4 text-gray-700 border-b">品番</th>[m
[31m-                <th scope="col" class="py-2 px-4 text-gray-700 border-b">色番</th>[m
[31m-                <th scope="col" class="py-2 px-4 text-gray-700 border-b">現在の工程</th>[m
[31m-                <th scope="col" class="py-2 px-4 text-gray-700 border-b">開始日</th>[m
[31m-                <th scope="col" class="py-2 px-4 text-gray-700 border-b">機屋の完了予定日</th>[m
[31m-                <th scope="col" class="py-2 px-4 text-gray-700 border-b">稼働状況</th>[m
[31m-                <th scope="col" class="py-2 px-4 text-gray-700 border-b"></th>[m
[31m-                <th scope="col" class="py-2 px-4 text-gray-700 border-b"></th>[m
[31m-                <th scope="col" class="py-2 px-4 text-gray-700 border-b"></th>[m
[32m+[m
[32m+[m[32m<h1 class="px-4 py-2 text-3xl font-bold text-gray-800 mt-6 mb-6 text-center">織機未割り当ての商品</h1>[m
[32m+[m
[32m+[m[32m<script>[m
[32m+[m[32m  var test = <%= @test %>;[m
[32m+[m[32m  var unassigned_orders = <%= @unassigned_orders.to_json([m
[32m+[m[32m    only: [:id, :start_date, :factory_estimated_completion_date],[m
[32m+[m[32m    include: {[m
[32m+[m[32m      company: { only: [:name] },[m
[32m+[m[32m      product_number: { only: [:number] },[m
[32m+[m[32m      color_number: { only: [:color_code] },[m
[32m+[m[32m      latest_machine_assignment: {[m
[32m+[m[32m        include: { machine: { only: [:name] } }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  ).html_safe %>;[m
[32m+[m[32m  var assigned_orders = <%= @assigned_orders.to_json([m
[32m+[m[32m    only: [:id, :start_date, :factory_estimated_completion_date],[m
[32m+[m[32m    include: {[m
[32m+[m[32m      company: { only: [:name] },[m
[32m+[m[32m      product_number: { only: [:number] },[m
[32m+[m[32m      color_number: { only: [:color_code] },[m
[32m+[m[32m      latest_machine_assignment: {[m
[32m+[m[32m        include: { machine: { only: [:name] } }[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  ).html_safe %>;[m
[32m+[m[32m</script>[m
[32m+[m
[32m+[m[32m<div id="drag-drop-root"></div>[m
[32m+[m
[32m+[m[32m<script type="text/babel">[m
[32m+[m[32m  const { useState } = React;[m
[32m+[m[32m  function DragDropApp() {[m
[32m+[m[32m    // const initialOrders = [[m
[32m+[m[32m    //   { id: 1, company: "A社", product: "ABC-123", color: "Red" },[m
[32m+[m[32m    //   { id: 2, company: "B社", product: "XYZ-456", color: "Blue" }[m
[32m+[m[32m    // ];[m
[32m+[m
[32m+[m[32m    const [unassignedOrders, setUnassignedOrders] = useState(unassigned_orders);[m
[32m+[m[32m    const [assignedOrders, setAssignedOrders] = useState(assigned_orders);[m
[32m+[m
[32m+[m[32m    const onDragStart = (e, order) => {[m
[32m+[m[32m      e.dataTransfer.setData("order", JSON.stringify(order));[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    const onDrop = (e, machineName) => {[m
[32m+[m[32m      e.preventDefault();[m
[32m+[m[32m      const order = JSON.parse(e.dataTransfer.getData("order"));[m
[32m+[m
[32m+[m[32m      setAssignedOrders([...assignedOrders, { ...order, machine: machineName }]);[m
[32m+[m[32m      setUnassignedOrders(unassignedOrders.filter(o => o.id !== order.id));[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    return ([m
[32m+[m[32m      <div>[m
[32m+[m[32m        <h2>未割り当ての発注</h2>[m
[32m+[m[32m        <table className="table-auto border-collapse border border-gray-300">[m
[32m+[m[32m          <thead>[m
[32m+[m[32m            <tr className="bg-gray-100">[m
[32m+[m[32m              <th className="py-2 px-4 border">ID</th>[m
[32m+[m[32m              <th className="py-2 px-4 border">会社名</th>[m
[32m+[m[32m              <th className="py-2 px-4 border">品番</th>[m
[32m+[m[32m              <th className="py-2 px-4 border">色番</th>[m
[32m+[m[32m              <th className="py-2 px-4 text-gray-700 border-b">現在の工程</th>[m
[32m+[m[32m              <th className="py-2 px-4 text-gray-700 border-b">開始日</th>[m
[32m+[m[32m              <th className="py-2 px-4 text-gray-700 border-b">機屋の完了予定日</th>[m
[32m+[m[32m              <th className="py-2 px-4 text-gray-700 border-b">稼働状況</th>[m
             </tr>[m
           </thead>[m
           <tbody>[m
[31m-              <% @unassigned_orders.each do |order| %>[m
[31m-                <% current_process = @current_work_processes[order.id] %>[m
[31m-                <% if current_process %>[m
[31m-                <tr id="selected_color" class="hover:bg-gray-50">[m
[31m-                  <td class="py-2 px-4 text-gray-700 border-b"><%= order.id %></td>[m
[31m-                  <td class="py-2 px-4 text-gray-700 border-b"><%= order.company.name %></td>[m
[31m-                  <td class="py-2 px-4 text-gray-700 border-b"><%= order.product_number.number %></td>[m
[31m-                  <td class="py-2 px-4 text-gray-700 border-b"><%= order.color_number.color_code %></td>[m
[31m-                  <td class="py-2 px-4 text-gray-700 border-b">[m
[31m-                    <%= current_process.work_process_definition&.name.presence || "未設定" %>[m
[31m-                  </td>[m
[31m-                  <td class="py-2 px-4 text-gray-700 border-b"><%= current_process.start_date %></td>[m
[31m-                  <td class="py-2 px-4 text-gray-700 border-b"><%= current_process.factory_estimated_completion_date || "未設定" %></td>[m
[31m-                  <td class="py-2 px-4 border-b text-gray-700"><%= order&.latest_machine_assignment&.machine&.name || 'ー' %></td>[m
[32m+[m[32m            {unassignedOrders.map(order => ([m
[32m+[m[32m              <tr key={order.id}[m
[32m+[m[32m                  className="drag-target"[m
[32m+[m[32m                  draggable[m
[32m+[m[32m                  onDragStart={(e) => onDragStart(e, order)}>[m
[32m+[m[32m                <td className="py-2 px-4 border">{order.id}</td>[m
[32m+[m[32m                <td className="py-2 px-4 border">{order.company.name}</td>[m
[32m+[m[32m                <td className="py-2 px-4 border">{order.product_number.number}</td>[m
[32m+[m[32m                <td className="py-2 px-4 border">{order.color_number.color_code}</td>[m
[32m+[m[32m                <td className="py-2 px-4 border">{order.work_process_definition?.name || "未設定"}</td>[m
[32m+[m[32m                <td className="py-2 px-4 border">{order.start_date}</td>[m
[32m+[m[32m                <td className="py-2 px-4 border">{order.factory_estimated_completion_date || "未設定"}</td>[m
[32m+[m[32m                <td className="py-2 px-4 border">{order.latest_machine_assignment?.machine?.name || "ー"}</td>[m
               </tr>[m
[31m-                <% end %>[m
[31m-              <% end %>[m
[32m+[m[32m            ))}[m
           </tbody>[m
         </table>[m
[31m-        <% else %>[m
[31m-          <p class="text-center text-rose-500"><%= @no_orders_message %></p>[m
[31m-        <% end %>[m
[31m-      </div>[m
[31m-    </section>[m
 [m
[31m-    <h1 class="px-4 py-2 text-3xl font-bold text-gray-800 mt-6 mb-6 text-center">織機割り当て済の商品</h1>[m
[31m-    <%# 割り当て先の織機 %>[m
[31m-    <%# 会社の所有する織機を表示 %>[m
[31m-    <% @machine_names.each do |machine_name| %>[m
[31m-      <section class="mb-12">[m
[31m-          <div class="px-4 pb-2 relative overflow-x-auto whitespace-nowrap sm:rounded-lg">[m
[31m-            <h2 class="text-2xl font-bold text-gray-600">織機名: <%= machine_name %></h2>[m
[31m-              <% if @assigned_orders[machine_name].present? %>[m
[31m-                  <table class="flex-none w-full text-md border text-left rtl:text-right border-gray-300">[m
[31m-                    <thead class="uppercase">[m
[31m-                      <tr class="bg-gray-100">[m
[31m-                        <th scope="col" class="py-2 px-4 text-gray-700 border-b">ID</th>[m
[31m-                        <th scope="col" class="py-2 px-4 text-gray-700 border-b">会社名</th>[m
[31m-                        <th scope="col" class="py-2 px-4 text-gray-700 border-b">品番</th>[m
[31m-                        <th scope="col" class="py-2 px-4 text-gray-700 border-b">色番</th>[m
[31m-                        <th scope="col" class="py-2 px-4 text-gray-700 border-b">現在の工程</th>[m
[31m-                        <th scope="col" class="py-2 px-4 text-gray-700 border-b">開始日</th>[m
[31m-                        <th scope="col" class="py-2 px-4 text-gray-700 border-b">機屋の完了予定日</th>[m
[31m-                        <th scope="col" class="py-2 px-4 text-gray-700 border-b">割り当て済み機械</th>[m
[32m+[m[32m        <h2 className="mt-6">織機割り当て済の商品</h2>[m
[32m+[m
[32m+[m[32m        <div className="droppable-zone"[m
[32m+[m[32m             onDragOver={(e) => e.preventDefault()}[m
[32m+[m[32m             onDrop={(e) => onDrop(e, "機械A")}>[m
[32m+[m[32m          <table className="table-auto border-collapse border border-gray-300">[m
[32m+[m[32m            <thead>[m
[32m+[m[32m              <tr className="bg-gray-100">[m
[32m+[m[32m                <th className="py-2 px-4 border">ID</th>[m
[32m+[m[32m                <th className="py-2 px-4 border">会社名</th>[m
[32m+[m[32m                <th className="py-2 px-4 border">品番</th>[m
[32m+[m[32m                <th className="py-2 px-4 border">色番</th>[m
[32m+[m[32m                <th className="py-2 px-4 text-gray-700 border-b">現在の工程</th>[m
[32m+[m[32m                <th className="py-2 px-4 text-gray-700 border-b">開始日</th>[m
[32m+[m[32m                <th className="py-2 px-4 text-gray-700 border-b">機屋の完了予定日</th>[m
[32m+[m[32m                <th className="py-2 px-4 text-gray-700 border-b">稼働状況</th>[m
               </tr>[m
             </thead>[m
             <tbody>[m
[31m-                      <% @assigned_orders[machine_name].each do |order| %>[m
[31m-                        <% work_process = @current_work_processes[order.id] %>[m
[31m-                          <tr class="hover:bg-gray-50">[m
[31m-                            <td class="py-2 px-4 text-gray-700 border-b"><%= order.id %></td>[m
[31m-                            <td class="py-2 px-4 text-gray-700 border-b"><%= order.company.name %></td>[m
[31m-                            <td class="py-2 px-4 text-gray-700 border-b"><%= order.product_number.number %></td>[m
[31m-                            <td class="py-2 px-4 text-gray-700 border-b"><%= order.color_number.color_code %></td>[m
[31m-                            <td class="py-2 px-4 text-gray-700 border-b">[m
[31m-                              <%= work_process&.work_process_definition&.name.presence || "未設定" %>[m
[31m-                            </td>[m
[31m-                            <td class="py-2 px-4 text-gray-700 border-b"><%= work_process&.start_date %></td>[m
[31m-                            <td class="py-2 px-4 text-gray-700 border-b"><%= work_process&.factory_estimated_completion_date || "未設定" %></td>[m
[31m-                            <td class="py-2 px-4 border-b text-gray-700"><%= order.latest_machine_assignment.machine.name %></td>[m
[32m+[m[32m              {assignedOrders.map((order, index) => ([m
[32m+[m[32m                <tr key={index}>[m
[32m+[m[32m                <td className="py-2 px-4 border">{order.id}</td>[m
[32m+[m[32m                <td className="py-2 px-4 border">{order.company.name}</td>[m
[32m+[m[32m                <td className="py-2 px-4 border">{order.product_number.number}</td>[m
[32m+[m[32m                <td className="py-2 px-4 border">{order.color_number.color_code}</td>[m
[32m+[m[32m                <td className="py-2 px-4 border">{order.work_process_definition?.name || "未設定"}</td>[m
[32m+[m[32m                <td className="py-2 px-4 border">{order.start_date}</td>[m
[32m+[m[32m                <td className="py-2 px-4 border">{order.factory_estimated_completion_date || "未設定"}</td>[m
[32m+[m[32m                <td className="py-2 px-4 border">{order.latest_machine_assignment?.machine?.name || "ー"}</td>[m
                 </tr>[m
[31m-                      <% end %>[m
[32m+[m[32m              ))}[m
             </tbody>[m
           </table>[m
[31m-              <% else %>[m
[31m-                <p class="text-center text-rose-500">割り当て済みの商品はありません。</p>[m
[31m-              <% end %>[m
         </div>[m
[31m-    <% end %>[m
[31m-    </section>[m
       </div>[m
[31m-  <!-- JavaScript ファイルを読み込む -->[m
[31m-  <script src="machine_assignment.js"></script>[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  ReactDOM.createRoot(document.getElementById("drag-drop-root")).render(<DragDropApp />);[m
[32m+[m[32m</script>[m
[32m+[m
 </body>[m
[32m+[m[32m</html>[m
-e 

=========================================================
-e ファイル: app/views/admin/orders/ma_index_org.html.erb
-e =========================================================

[1mdiff --git a/app/views/admin/orders/ma_index_org.html.erb b/app/views/admin/orders/ma_index_org.html.erb[m
[1mnew file mode 100644[m
[1mindex 0000000..ee597a3[m
[1m--- /dev/null[m
[1m+++ b/app/views/admin/orders/ma_index_org.html.erb[m
[36m@@ -0,0 +1,98 @@[m
[32m+[m[32m<h1 class="px-4 py-2 text-3xl font-bold text-gray-800 mt-6 mb-6 text-center">織機未割り当ての商品</h1>[m
[32m+[m[32m<%# 割り当て元 %>[m
[32m+[m[32m<section class="mb-12">[m
[32m+[m[32m  <div class="px-4 pb-2 relative overflow-x-auto whitespace-nowrap sm:rounded-lg">[m
[32m+[m[32m    <% if @unassigned_orders.any? %>[m
[32m+[m[32m      <table class="flex-none w-full text-md border text-left rtl:text-right border-gray-300">[m
[32m+[m[32m        <thead class="uppercase">[m
[32m+[m[32m          <tr class="bg-gray-100">[m
[32m+[m[32m            <th scope="col" class="py-2 px-4 text-gray-700 border-b">ID</th>[m
[32m+[m[32m            <th scope="col" class="py-2 px-4 text-gray-700 border-b">会社名</th>[m
[32m+[m[32m            <th scope="col" class="py-2 px-4 text-gray-700 border-b">品番</th>[m
[32m+[m[32m            <th scope="col" class="py-2 px-4 text-gray-700 border-b">色番</th>[m
[32m+[m[32m            <th scope="col" class="py-2 px-4 text-gray-700 border-b">現在の工程</th>[m
[32m+[m[32m            <th scope="col" class="py-2 px-4 text-gray-700 border-b">開始日</th>[m
[32m+[m[32m            <th scope="col" class="py-2 px-4 text-gray-700 border-b">機屋の完了予定日</th>[m
[32m+[m[32m            <th scope="col" class="py-2 px-4 text-gray-700 border-b">稼働状況</th>[m
[32m+[m[32m          </tr>[m
[32m+[m[32m        </thead>[m
[32m+[m[32m        <tbody>[m
[32m+[m[32m          <% @unassigned_orders.each do |order| %>[m
[32m+[m[32m            <% current_process = @current_work_processes[order.id] %>[m
[32m+[m[32m            <% if current_process %>[m
[32m+[m[32m            <tr class="hover:bg-gray-50">[m
[32m+[m[32m              <td class="py-2 px-4 text-gray-700 border-b"><%= order.id %></td>[m
[32m+[m[32m              <td class="py-2 px-4 text-gray-700 border-b"><%= order.company.name %></td>[m
[32m+[m[32m              <td class="py-2 px-4 text-gray-700 border-b"><%= order.product_number.number %></td>[m
[32m+[m[32m              <td class="py-2 px-4 text-gray-700 border-b"><%= order.color_number.color_code %></td>[m
[32m+[m[32m              <td class="py-2 px-4 text-gray-700 border-b">[m
[32m+[m[32m                <%= current_process.work_process_definition&.name.presence || "未設定" %>[m
[32m+[m[32m              </td>[m
[32m+[m[32m              <td class="py-2 px-4 text-gray-700 border-b"><%= current_process.start_date %></td>[m
[32m+[m[32m              <td class="py-2 px-4 text-gray-700 border-b"><%= current_process.factory_estimated_completion_date || "未設定" %></td>[m
[32m+[m[32m              <td class="py-2 px-4 border-b text-gray-700"><%= order&.latest_machine_assignment&.machine&.name || 'ー' %></td>[m
[32m+[m
[32m+[m[32m            </tr>[m
[32m+[m[32m            <% end %>[m
[32m+[m[32m          <% end %>[m
[32m+[m[32m        </tbody>[m
[32m+[m[32m      </table>[m
[32m+[m[32m    <% else %>[m
[32m+[m[32m      <p class="text-center text-rose-500"><%= @no_orders_message %></p>[m
[32m+[m[32m    <% end %>[m
[32m+[m[32m  </div>[m
[32m+[m[32m</section>[m
[32m+[m
[32m+[m[32m<h1 class="px-4 py-2 text-3xl font-bold text-gray-800 mt-6 mb-6 text-center">織機割り当て済の商品</h1>[m
[32m+[m[32m<%# 割り当て先の織機 %>[m
[32m+[m[32m<%# 会社の所有する織機を表示 %>[m
[32m+[m[32m<% @machine_names.each do |machine_name| %>[m
[32m+[m
[32m+[m[32m  <section class="mb-12">[m
[32m+[m
[32m+[m[32m      <div class="px-4 pb-2 relative overflow-x-auto whitespace-nowrap sm:rounded-lg">[m
[32m+[m[32m        <h2 class="text-2xl font-bold text-gray-600">織機名: <%= machine_name %></h2>[m
[32m+[m[32m          <% if @assigned_orders[machine_name].present? %>[m
[32m+[m
[32m+[m[32m              <table class="flex-none w-full text-md border text-left rtl:text-right border-gray-300">[m
[32m+[m[32m                <thead class="uppercase">[m
[32m+[m[32m                  <tr class="bg-gray-100">[m
[32m+[m[32m                    <th scope="col" class="py-2 px-4 text-gray-700 border-b">ID</th>[m
[32m+[m[32m                    <th scope="col" class="py-2 px-4 text-gray-700 border-b">会社名</th>[m
[32m+[m[32m                    <th scope="col" class="py-2 px-4 text-gray-700 border-b">品番</th>[m
[32m+[m[32m                    <th scope="col" class="py-2 px-4 text-gray-700 border-b">色番</th>[m
[32m+[m[32m                    <th scope="col" class="py-2 px-4 text-gray-700 border-b">現在の工程</th>[m
[32m+[m[32m                    <th scope="col" class="py-2 px-4 text-gray-700 border-b">開始日</th>[m
[32m+[m[32m                    <th scope="col" class="py-2 px-4 text-gray-700 border-b">機屋の完了予定日</th>[m
[32m+[m[32m                    <th scope="col" class="py-2 px-4 text-gray-700 border-b">割り当て済み機械</th>[m
[32m+[m[32m                  </tr>[m
[32m+[m[32m                </thead>[m
[32m+[m
[32m+[m[32m                <tbody>[m
[32m+[m[32m                  <% @assigned_orders[machine_name].each do |order| %>[m
[32m+[m[32m                    <% work_process = @current_work_processes[order.id] %>[m
[32m+[m[32m                      <tr class="hover:bg-gray-50">[m
[32m+[m[32m                        <td class="py-2 px-4 text-gray-700 border-b"><%= order[1][:id] %></td>[m
[32m+[m[32m                        <td class="py-2 px-4 text-gray-700 border-b"><%= order[1].company.name %></td>[m
[32m+[m[32m                        <td class="py-2 px-4 text-gray-700 border-b"><%= order[1].product_number.number %></td>[m
[32m+[m[32m                        <td class="py-2 px-4 text-gray-700 border-b"><%= order[1].color_number.color_code %></td>[m
[32m+[m
[32m+[m[32m                        <% @current_work_processes.each do |order_id, work_process| %>[m
[32m+[m[32m                        <td class="py-2 px-4 text-gray-700 border-b">[m
[32m+[m[32m                          <%= work_process&.work_process_definition&.name.presence || "未設定" %>[m
[32m+[m[32m                        </td>[m
[32m+[m[32m                        <td class="py-2 px-4 text-gray-700 border-b"><%= work_process&.start_date %></td>[m
[32m+[m[32m                        <td class="py-2 px-4 text-gray-700 border-b"><%= work_process&.factory_estimated_completion_date || "未設定" %></td>[m
[32m+[m[32m                        <td class="py-2 px-4 border-b text-gray-700"><%= order[1].latest_machine_assignment.machine.name %></td>[m
[32m+[m[32m                        <% end %>[m
[32m+[m[32m                      </tr>[m
[32m+[m[32m                  <% end %>[m
[32m+[m[32m                </tbody>[m
[32m+[m
[32m+[m[32m          <% else %>[m
[32m+[m[32m            <p class="text-center text-rose-500">割り当て済みの商品はありません。</p>[m
[32m+[m[32m          <% end %>[m
[32m+[m[32m      </div>[m
[32m+[m
[32m+[m[32m  </section>[m
[32m+[m[32m<% end %>[m
-e 

=========================================================
-e ファイル: app/views/admin/orders/ma_select_company.html.erb
-e =========================================================

[1mdiff --git a/app/views/admin/orders/ma_select_company.html.erb b/app/views/admin/orders/ma_select_company.html.erb[m
[1mindex 4f85885..25f7759 100644[m
[1m--- a/app/views/admin/orders/ma_select_company.html.erb[m
[1m+++ b/app/views/admin/orders/ma_select_company.html.erb[m
[36m@@ -1,5 +1,4 @@[m
 <h1 class="px-4 py-2 text-3xl font-bold text-gray-800 mt-6 mb-6 text-center">会社を選んでください</h1>[m
[31m-<%# 以下に会社選択ボタンを作成 %>[m
 <% @companies.each do |company| %>[m
     <%= link_to company.name, ma_index_admin_orders_path(company_id: company.id),  class: "inline-block px-4 py-2 text-white bg-indigo-500 rounded hover:bg-indigo-600" %>[m
 <% end %>[m
-e 

=========================================================
-e ファイル: app/views/admin/orders/new.html.erb
-e =========================================================

[1mdiff --git a/app/views/admin/orders/new.html.erb b/app/views/admin/orders/new.html.erb[m
[1mindex ac4ea38..bc452c4 100644[m
[1m--- a/app/views/admin/orders/new.html.erb[m
[1m+++ b/app/views/admin/orders/new.html.erb[m
[36m@@ -1,76 +1,83 @@[m
 <% content_for :head do %>[m
   <meta name="turbo-visit-control" content="reload">[m
 <% end %>[m
[31m-[m
 <h1 class="px-4 py-2 text-3xl font-bold text-gray-800 mt-6 mb-6 text-center">発注フォーム</h1>[m
[31m-[m
 <%# フォームが表示される前にエラーメッセージを表示するためform_withの前に書く %>[m
 <% if @order.errors.any? %>[m
[31m-<%# Railsがデフォルトで用意しているエラー用のスタイル（CSS）を適用 %>[m
[31m-<div id="error_explanation">[m
[32m+[m[32m  <%# Railsがデフォルトで用意しているエラー用のスタイル（CSS）を適用 %>[m
[32m+[m[32m  <div id="error_explanation">[m
     <h2><%= "#{@order.errors.count} 件のエラーが発生しました" %></h2>[m
     <ul>[m
       <% @order.errors.full_messages.each do |message| %>[m
         <li><%= message %></li>[m
       <% end %>[m
     </ul>[m
[31m-</div>[m
[32m+[m[32m  </div>[m
 <% end %>[m
[31m-[m
 <%= form_with model: @order, url: admin_orders_path, local: true do |f| %>[m
[31m-<section class="px-24">[m
[31m-  <p class="pb-4 text-rose-500 font-semibold">発注フォームはすべて必須項目になります。</p>[m
[32m+[m[32m  <section class="px-24">[m
[32m+[m[32m    <p class="pb-4 text-rose-500 font-semibold">#発注フォームはすべて必須項目になります。</p>[m
     <div class="px-4 py-2 overflow-x-auto mb-6 whitespace-nowrap">[m
       <table class="w-full max-w-sm">[m
         <div class="md:flex md:items-center mb-6">[m
           <div class="md:w-1/3 py-2">[m
[31m-          <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center">[m
[32m+[m[32m            <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center flex item-center mr-2">[m
               <%= f.label :name, "会社名" %>[m
[32m+[m[32m              <div id="tooltip1" data-turbo="false" style="margin-left: 5px;"></div>[m
             </label>[m
           </div>[m
           <div class="md:w-2/3">[m
[31m-          <%= f.collection_select :company_id, @companies, :id, :name, { prompt: "会社を選択してください" }, { class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none", required: true }  %>[m
[32m+[m[32m            <% if @companies.present? %>[m
[32m+[m[32m              <%= f.collection_select :company_id, @companies, :id, :name, { prompt: "会社を選択してください" }, { class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none" } %>[m
[32m+[m[32m            <% else %>[m
[32m+[m[32m              <p class="text-red-500">会社データが存在しません。管理者にお問い合わせください。</p>[m
[32m+[m[32m            <% end %>[m
[32m+[m[32m            <i class="bi bi-question-circle" data-bs-toggle="tooltip" title="これはツールチップです"></i>[m
           </div>[m
         </div>[m
         <div class="md:flex md:items-center mb-6">[m
           <div class="md:w-1/3 py-2">[m
[31m-          <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center">[m
[32m+[m[32m            <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center flex item-center mr-2">[m
               <%= f.label :product_number_id, "品番" %>[m
[32m+[m[32m              <div id="tooltip2" data-turbo="false" style="margin-left: 5px;"></div>[m
             </label>[m
           </div>[m
           <div class="md:w-2/3">[m
[31m-          <%= f.collection_select :product_number_id, ProductNumber.all, :id, :number, { prompt: "品番を選択してください" }, { class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none", required: true } %>[m
[32m+[m[32m            <%= f.collection_select :product_number_id, ProductNumber.all, :id, :number, { prompt: "品番を選択してください" }, { class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none" } %>[m
[32m+[m[32m            <i class="bi bi-question-circle" data-bs-toggle="tooltip" title="これはツールチップです"></i>[m
           </div>[m
         </div>[m
         <div class="md:flex md:items-center mb-6">[m
           <div class="md:w-1/3 py-2">[m
[31m-          <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center">[m
[32m+[m[32m            <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center flex item-center mr-2">[m
               <%= f.label :color_number_id, "色番" %>[m
[32m+[m[32m              <div id="tooltip3" data-turbo="false" style="margin-left: 5px;"></div>[m
             </label>[m
           </div>[m
           <div class="md:w-2/3">[m
[31m-          <%= f.collection_select :color_number_id, ColorNumber.all, :id, :color_code, { prompt: "色番を選択してください" }, { class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none", required: true }  %>[m
[32m+[m[32m            <%= f.collection_select :color_number_id, ColorNumber.all, :id, :color_code, { prompt: "色番を選択してください" }, { class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none" } %>[m
[32m+[m[32m            <i class="bi bi-question-circle" data-bs-toggle="tooltip" title="これはツールチップです"></i>[m
           </div>[m
         </div>[m
[31m-[m
[31m-      <!-- RailsからReactに渡すための初期データだけを埋め込む -->[m
[31m-      <div id="react-root" data-turbo="false"></div>[m
[31m-[m
[32m+[m[32m        <div id="react-root" data-roll-count="<%= @order.roll_count %>" data-quantity="<%= @order.quantity %>" data-turbo="false"></div>[m
         <div class="md:flex md:items-center mb-6">[m
           <div class="md:w-1/3 py-2">[m
[31m-          <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center">[m
[32m+[m[32m            <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center flex item-center mr-2">[m
               <%= f.label :machine_type, "機械のタイプ" %>[m
[32m+[m[32m              <span id="tooltip4" data-turbo="false" style="margin-left: 5px;"></span>[m
             </label>[m
           </div>[m
           <div class="md:w-2/3">[m
             <%= select_tag "order[work_processes][process_estimate][machine_type_id]",[m
[31m-                          options_from_collection_for_select(MachineType.all, :id, :name), { prompt: "織機のタイプを選択してください", required: true } %>[m
[32m+[m[32m                          options_from_collection_for_select(MachineType.all, :id, :name), { prompt: "織機のタイプを選択してください" } %>[m
[32m+[m[32m            <i class="bi bi-question-circle" data-bs-toggle="tooltip" title="これはツールチップです"></i>[m
           </div>[m
         </div>[m
         <div class="md:flex md:items-center mb-6">[m
           <div class="md:w-1/3 py-2">[m
[31m-          <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center">[m
[32m+[m[32m            <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center flex item-center mr-2">[m
               <%= f.label :start_date, "作業開始日" %>[m
[32m+[m[32m              <span id="tooltip5" data-turbo="false" style="margin-left: 5px;"></span>[m
             </label>[m
           </div>[m
           <div class="md:w-2/3">[m
[36m@@ -84,10 +91,9 @@[m
         </div>[m
       </table>[m
     </div>[m
[31m-</section>[m
[31m-[m
[31m-<!-- 提出ボタン -->[m
[31m-<section class="mb-12">[m
[32m+[m[32m  </section>[m
[32m+[m[32m  <!-- 提出ボタン -->[m
[32m+[m[32m  <section class="mb-12">[m
     <div class="flex justify-center space-x-2">[m
       <div class="px-2 py-2">[m
         <%= f.submit "発注", class: "inline-block px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-700" %>[m
[36m@@ -96,104 +102,53 @@[m
         <%= link_to "戻る", admin_orders_path, class: "inline-block px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-700" %>[m
       </div>[m
     </div>[m
[31m-</section>[m
[32m+[m[32m  </section>[m
 <% end %>[m
[31m-[m
 <script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>[m
 <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>[m
 <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>[m
[31m-[m
 <script type="text/babel">[m
   const { useState, useEffect } = React;[m
 [m
[31m-  // 各入力フィールドの値とバリデーション状態を管理するステートの定義[m
   function OrderForm() {[m
[31m-    const [rollCount, setRollCount] = useState('');[m
[31m-    const [quantity, setQuantity] = useState('');[m
[31m-[m
[31m-    //エラーメッセージを管理するステートの定義[m
[31m-    const [errors, setErrors] = useState({[m
[31m-        // キーと初期値の指定[m
[31m-        rollCount: "",[m
[31m-        quantity: "",[m
[31m-    });[m
 [m
[31m-    // フォーム全体が送信可能かどうかを管理するステート[m
[31m-    // validation管理ステートの定義[m
[31m-    const [isFormValid, setIsFormValid] = useState(false);[m
[32m+[m[32m    const root = document.getElementById('react-root');[m
[32m+[m[32m    const initialRollCount = root.getAttribute('data-roll-count') || '';[m
[32m+[m[32m    const initialQuantity = root.getAttribute('data-quantity') || '';[m
 [m
[31m-    // HTML内に埋め込まれたデータを取得してステートにセット[m
[31m-    // useEffectフックの宣言[m
[31m-    // useEffect(() => {[m
[31m-    //     document.querySelector('input[name="order[roll_count]"]').value = rollCount;[m
[31m-    //     document.querySelector('input[name="order[quantity]"]').value = quantity;[m
[31m-    // }, [rollCount, quantity]);[m
[32m+[m[32m    const [rollCount, setRollCount] = useState(initialRollCount);[m
[32m+[m[32m    const [quantity, setQuantity] = useState(initialQuantity);[m
 [m
[32m+[m[32m    useEffect(() => {[m
[32m+[m[32m      document.querySelector('input[name="order[roll_count]"]').value = rollCount;[m
[32m+[m[32m      document.querySelector('input[name="order[quantity]"]').value = quantity;[m
[32m+[m[32m    }, [rollCount, quantity]);[m
 [m
[31m-  // 入力内容のチェックをするイベントハンドラ関数を定義して、その中で更新用関数を呼び出す[m
[31m-    // 反数用のイベントハンドラ[m
[31m-    const handleRollCountChange = (e) => {[m
[32m+[m[32m    const handleInputChange = (setter) => (e) => {[m
       const value = e.target.value;[m
[31m-[m
[31m-        // 入力値が数字かつ4桁以内の場合のみステートを更新[m
       if (/^\d{0,4}$/.test(value)) {[m
[31m-            setRollCount(value); // ステート更新[m
[31m-            setErrors((prevErrors) => ({ ...prevErrors, rollCount: "" })); // エラーをクリア[m
[31m-        } else {[m
[31m-            // 5桁目が入力されたらエラーメッセージをセット[m
[31m-            setErrors((prevErrors) => ({[m
[31m-            ...prevErrors,[m
[31m-            rollCount: "最大4桁までしか入力できません。",[m
[31m-            }));[m
[32m+[m[32m        setter(value);[m
       }[m
     };[m
 [m
[31m-    // 数量用のイベントハンドラ[m
[31m-    const handleQuantityChange = (e) => {[m
[31m-        const value = e.target.value;[m
[31m-[m
[31m-        // 入力値が数字かつ4桁以内の場合のみステートを更新[m
[31m-        if (/^\d{0,4}$/.test(value)) {[m
[31m-            setQuantity(value); // ステート更新[m
[31m-            setErrors((prevErrors) => ({ ...prevErrors, quantity: "" })); // エラーをクリア[m
[31m-        } else {[m
[31m-            // 5桁目が入力されたらエラーメッセージをセット[m
[31m-            setErrors((prevErrors) => ({[m
[31m-            ...prevErrors,[m
[31m-            quantity: "最大4桁までしか入力できません。",[m
[31m-            }));[m
[31m-        }[m
[31m-        };[m
[31m-[m
[31m-[m
[31m-        // エラーメッセージ更新関数setErrorsの呼び出し[m
[31m-        // setErrors(newErrors);[m
[31m-        // validation状況を更新する関数の呼び出し[m
[31m-        // isOK = Object.keys(newErrors).length === 0;[m
[31m-        // setIsFormValid(isOK);[m
[31m-[m
[31m-[m
     return ([m
       <div>[m
         <div className="md:flex md:items-center mb-6">[m
           <div className="md:w-1/3 py-2">[m
             <label className="w-1/3 px-4 py-2 text-gray-700 font-bold text-center">[m
               反数[m
[32m+[m[32m              <TooltipIcon message="注文する商品の反数を入力します（商品1点あたりの反数、数量欄が2の場合は合計の反数は倍になります）。" top="2px"/>[m
             </label>[m
           </div>[m
           <div className="md:w-2/3">[m
             <input[m
               type="text"[m
[32m+[m[32m              name="order[roll_count]"[m
               value={rollCount}[m
[31m-                // setstateで定義したキーrollCountを errorKey に渡す[m
[31m-                onChange={(e) => handleRollCountChange(e)}[m
[32m+[m[32m              onChange={handleInputChange(setRollCount)}[m
               placeholder="反数を入力してください"[m
[31m-                required[m
               className="block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none"[m
             />[m
[31m-            {errors.rollCount && ([m
[31m-              <p className="text-red-500">{errors.rollCount}</p>[m
[31m-            )}[m
           </div>[m
         </div>[m
 [m
[36m@@ -201,24 +156,76 @@[m
           <div className="md:w-1/3 py-2">[m
             <label className="w-1/3 px-4 py-2 text-gray-700 font-bold text-center">[m
               数量[m
[32m+[m[32m              <TooltipIcon message="注文する商品の数量を入力します。" top="2px"/>[m
             </label>[m
           </div>[m
           <div className="md:w-2/3">[m
             <input[m
               type="text"[m
[32m+[m[32m              name="order[quantity]"[m
               value={quantity}[m
[31m-              onChange={(e) => handleQuantityChange(e)}[m
[32m+[m[32m              onChange={handleInputChange(setQuantity)}[m
               placeholder="数量を入力してください"[m
[31m-              required[m
               className="block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none"[m
             />[m
[31m-            {errors.quantity && ([m
[31m-                <p className="text-red-500">{errors.quantity}</p>[m
[31m-            )}[m
           </div>[m
         </div>[m
[31m-        <input type="hidden" name="order[roll_count]" value={rollCount} />[m
[31m-        <input type="hidden" name="order[quantity]" value={quantity} />[m
[32m+[m
[32m+[m[32m      </div>[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m
[32m+[m[32m  const TooltipIcon = ({ message = "No Message", top = "-6px"  }) => {[m
[32m+[m[32m    const [visible, setVisible] = useState(false);[m
[32m+[m
[32m+[m[32m    const handleClick = () => {[m
[32m+[m[32m      setVisible(!visible); // クリックするたびに表示・非表示を切り替える[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    const handleMouseEnter = () => {[m
[32m+[m[32m      setVisible(true);[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    const handleMouseLeave = () => {[m
[32m+[m[32m      setVisible(false);[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    return ([m
[32m+[m[32m      <div[m
[32m+[m[32m        className="custom-icon-wrapper"[m
[32m+[m[32m        onClick={handleClick}[m
[32m+[m[32m        onMouseEnter={handleMouseEnter}[m
[32m+[m[32m        onMouseLeave={handleMouseLeave}[m
[32m+[m[32m        style={{[m
[32m+[m[32m          fontSize: "24px",[m
[32m+[m[32m          cursor: "pointer",[m
[32m+[m[32m          position: "relative",[m
[32m+[m[32m          display: "inline-block",[m
[32m+[m[32m          top: top,[m
[32m+[m[32m          marginLeft: "5px",[m
[32m+[m[32m        }}[m
[32m+[m[32m      >[m
[32m+[m[32m        <i className="fas fa-question-circle" style={{ color: "lightgray" }}></i>[m
[32m+[m[32m        {visible && ([m
[32m+[m[32m          <div[m
[32m+[m[32m            style={{[m
[32m+[m[32m              position: "absolute",[m
[32m+[m[32m              top: "-10px",[m
[32m+[m[32m              left: "0",[m
[32m+[m[32m              backgroundColor: "gray",[m
[32m+[m[32m              color: "white",[m
[32m+[m[32m              padding: "5px",[m
[32m+[m[32m              borderRadius: "5px",[m
[32m+[m[32m              whiteSpace: "nowrap",[m
[32m+[m[32m              fontSize: "14px",[m
[32m+[m[32m              zIndex: 1000,[m
[32m+[m[32m              boxShadow: "0 2px 5px rgba(0, 0, 0, 0.2)",[m
[32m+[m[32m            }}[m
[32m+[m[32m          >[m
[32m+[m[32m            {message}[m
[32m+[m[32m          </div>[m
[32m+[m[32m        )}[m
       </div>[m
     );[m
   };[m
[36m@@ -228,6 +235,26 @@[m
     if (root) {[m
       ReactDOM.render(<OrderForm />, root);[m
     }[m
[32m+[m[32m    const tooltip1 = document.getElementById("tooltip1");[m
[32m+[m[32m    if (tooltip1) {[m
[32m+[m[32m      ReactDOM.render(<TooltipIcon message='発注先の会社名を選択します。' />, tooltip1);[m
[32m+[m[32m    }[m
[32m+[m[32m    const tooltip2 = document.getElementById("tooltip2");[m
[32m+[m[32m    if (tooltip2) {[m
[32m+[m[32m      ReactDOM.render(<TooltipIcon message='発注する商品の型をコードで選択します。' />, tooltip2);[m
[32m+[m[32m    }[m
[32m+[m[32m    const tooltip3 = document.getElementById("tooltip3");[m
[32m+[m[32m    if (tooltip3) {[m
[32m+[m[32m      ReactDOM.render(<TooltipIcon message='発注する商品の色をコードで選択します。' />, tooltip3);[m
[32m+[m[32m    }[m
[32m+[m[32m    const tooltip4 = document.getElementById("tooltip4");[m
[32m+[m[32m    if (tooltip4) {[m
[32m+[m[32m      ReactDOM.render(<TooltipIcon message='発注する商品を作成する織機のタイプを選択します。' />, tooltip4);[m
[32m+[m[32m    }[m
[32m+[m[32m    const tooltip5 = document.getElementById("tooltip5");[m
[32m+[m[32m    if (tooltip5) {[m
[32m+[m[32m      ReactDOM.render(<TooltipIcon message='作業開始日は、現時点での機屋が製織工程を開始する予定日を入力してください' />, tooltip5);[m
[32m+[m[32m    }[m
[32m+[m
   });[m
 </script>[m
[31m-[m
-e 

=========================================================
-e ファイル: app/views/admin/orders/new.html_bk.erb
-e =========================================================

[1mdiff --git a/app/views/admin/orders/new.html_bk.erb b/app/views/admin/orders/new.html_bk.erb[m
[1mdeleted file mode 100644[m
[1mindex 456b512..0000000[m
[1m--- a/app/views/admin/orders/new.html_bk.erb[m
[1m+++ /dev/null[m
[36m@@ -1,102 +0,0 @@[m
[31m-<h1 class="px-4 py-2 text-3xl font-bold text-gray-800 mt-6 mb-6 text-center">発注フォーム</h1>[m
[31m-[m
[31m-<%# フォームが表示される前にエラーメッセージを表示するためform_withの前に書く %>[m
[31m-<% if @order.errors.any? %>[m
[31m-<%# Railsがデフォルトで用意しているエラー用のスタイル（CSS）を適用 %>[m
[31m-<div id="error_explanation">[m
[31m-  <h2><%= "#{@order.errors.count} 件のエラーが発生しました" %></h2>[m
[31m-  <ul>[m
[31m-    <% @order.errors.full_messages.each do |message| %>[m
[31m-    <li><%= message %></li>[m
[31m-    <% end %>[m
[31m-  </ul>[m
[31m-</div>[m
[31m-<% end %>[m
[31m-[m
[31m-<%= form_with model: @order, url: admin_orders_path, local: true, html: { id: "orderForm" } do |f| %>[m
[31m-<section class="px-24">[m
[31m-  <p class="pb-4 text-rose-500 font-semibold">発注フォームはすべて必須項目になります。</p>[m
[31m-  <div class="px-4 py-2 overflow-x-auto mb-6 whitespace-nowrap">[m
[31m-    <table class="w-full max-w-sm">[m
[31m-      <div class="md:flex md:items-center mb-6">[m
[31m-        <div class="md:w-1/3 py-2">[m
[31m-          <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center">[m
[31m-            <%= f.label :name, "会社名" %>[m
[31m-          </label>[m
[31m-        </div>[m
[31m-        <div class="md:w-2/3">[m
[31m-          <%= f.collection_select :company_id, @companies, :id, :name, { prompt: "会社を選択してください" }, { id: "order_company_id", class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none" } %>[m
[31m-        </div>[m
[31m-      </div>[m
[31m-      <div class="md:flex md:items-center mb-6">[m
[31m-        <div class="md:w-1/3 py-2">[m
[31m-          <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center">[m
[31m-            <%= f.label :product_number_id, "品番" %>[m
[31m-          </label>[m
[31m-        </div>[m
[31m-        <div class="md:w-2/3">[m
[31m-          <%= f.collection_select :product_number_id, ProductNumber.all, :id, :number, { id: "order_product_number_id", prompt: "品番を選択してください" }, { class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none" } %>[m
[31m-        </div>[m
[31m-      </div>[m
[31m-      <div class="md:flex md:items-center mb-6">[m
[31m-        <div class="md:w-1/3 py-2">[m
[31m-          <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center">[m
[31m-            <%= f.label :color_number_id, "色番" %>[m
[31m-          </label>[m
[31m-        </div>[m
[31m-        <div class="md:w-2/3">[m
[31m-          <%= f.collection_select :color_number_id, ColorNumber.all, :id, :color_code, { id: "order_color_number_id", prompt: "色番を選択してください" }, { class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none" } %>[m
[31m-        </div>[m
[31m-      </div>[m
[31m-[m
[31m-      <!-- RailsからReactに渡すための初期データだけを埋め込む -->[m
[31m-      <div id="order-form-root" class="md:flex md:items-center mb-6"[m
[31m-        data-roll_count="<%= @order.roll_count.to_json %>"[m
[31m-        data-quantity="<%= @order.quantity.to_json %>">[m
[31m-      </div>[m
[31m-[m
[31m-      <div class="md:flex md:items-center mb-6">[m
[31m-        <div class="md:w-1/3 py-2">[m
[31m-          <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center">[m
[31m-            <%= f.label :machine_type, "機械のタイプ" %>[m
[31m-          </label>[m
[31m-        </div>[m
[31m-        <div class="md:w-2/3">[m
[31m-          <%= f.collection_select :machine_type_id, MachineType.all, :id, :name, { id: "machine_type_id", prompt: "織機のタイプを選択してください" }, { class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none" } %>[m
[31m-        </div>[m
[31m-      </div>[m
[31m-      <div class="md:flex md:items-center mb-6">[m
[31m-        <div class="md:w-1/3 py-2">[m
[31m-          <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center">[m
[31m-            <%= f.label :start_date, "作業開始日" %>[m
[31m-          </label>[m
[31m-        </div>[m
[31m-        <div class="md:w-2/3">[m
[31m-          <%= text_field_tag 'order[work_processes][start_date]',[m
[31m-                          nil,[m
[31m-                          placeholder: "作業開始日を選択してください",[m
[31m-                          type: :date,[m
[31m-                          required: true,[m
[31m-                          id: "start_date_field", class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none" %>[m
[31m-        </div>[m
[31m-      </div>[m
[31m-    </table>[m
[31m-  </div>[m
[31m-</section>[m
[31m-[m
[31m-<!-- 提出ボタン -->[m
[31m-<section class="mb-12">[m
[31m-  <div class="flex justify-center space-x-2">[m
[31m-    <div class="px-2 py-2">[m
[31m-      <%= f.submit "発注", class: "inline-block px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-700" %>[m
[31m-    </div>[m
[31m-    <div class="px-2 py-2">[m
[31m-      <%= link_to "戻る", admin_orders_path, class: "inline-block px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-700" %>[m
[31m-    </div>[m
[31m-  </div>[m
[31m-</section>[m
[31m-<% end %>[m
[31m-[m
[31m-<%= javascript_include_tag "orderform", type: "module", defer: true %>[m
[31m-[m
[31m-[m
-e 

=========================================================
-e ファイル: app/views/home/index.html copy.erb
-e =========================================================

[1mdiff --git a/app/views/home/index.html copy.erb b/app/views/home/index.html copy.erb[m
[1mdeleted file mode 100644[m
[1mindex 929d50d..0000000[m
[1m--- a/app/views/home/index.html copy.erb[m	
[1m+++ /dev/null[m
[36m@@ -1,102 +0,0 @@[m
[31m-<h1 class="px-4 py-2 text-3xl font-bold text-gray-700 mt-6 mb-6 text-center">ホーム画面</h1>[m
[31m-[m
[31m-<section class="w-full px-4 py-6">[m
[31m-    <% if @machines.any? %>[m
[31m-        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">[m
[31m-            <% @machines.each do |machine| %>[m
[31m-                <% company_name = machine&.company&.name %>[m
[31m-                <% machine_name = machine&.name %>[m
[31m-                <% work_process = machine&.latest_work_process %>[m
[31m-                <% work_process_name = work_process&.work_process_definition&.name || "作業工程なし" %>[m
[31m-                <% machine_status_name = machine&.latest_machine_status&.name || "不明" %>[m
[31m-[m
[31m-                <!-- WorkProcessをdefinition_id毎に取得（同一Order想定） -->[m
[31m-                <% if work_process.present? %>[m
[31m-                    <% order_id = work_process&.order_id %>[m
[31m-                    <% wps = machine&.work_processes.where(order_id: order_id) %>[m
[31m-                <% else %>[m
[31m-                    <% wps = [] %>[m
[31m-                <% end %>[m
[31m-[m
[31m-                <% wp1 = wps.find { |wp| wp&.work_process_definition_id == 1 } %>[m
[31m-                <% wp2 = wps.find { |wp| wp&.work_process_definition_id == 2 } %>[m
[31m-                <% wp3 = wps.find { |wp| wp&.work_process_definition_id == 3 } %>[m
[31m-                <% wp4 = wps.find { |wp| wp&.work_process_definition_id == 4 } %>[m
[31m-[m
[31m-                <% wp1_complete = (wp1&.work_process_status_id == 3) %>[m
[31m-                <% wp2_complete = (wp2&.work_process_status_id == 3) %>[m
[31m-                <% wp3_complete = (wp3&.work_process_status_id == 3) %>[m
[31m-                <% wp4_status = wp4&.work_process_status_id %>[m
[31m-[m
[31m-                <!-- ボタン表示ロジック -->[m
[31m-                <% if work_process.nil? %>[m
[31m-                    <!-- Work_processが割り当てられていない場合 -->[m
[31m-                    <% button_label = "更新不可" %>[m
[31m-                    <% button_disabled = true %>[m
[31m-                <% else %>[m
[31m-                    <!-- "作業終了"条件: -->[m
[31m-                    <!-- [1,2,3]が完了(3) AND 4がステータス1または2 -->[m
[31m-                    <% if wp1_complete && wp2_complete && wp3_complete && (wp4_status == 1 || wp4_status == 2) %>[m
[31m-                        <% button_label = "作業終了" %>[m
[31m-                        <% button_disabled = false %>[m
[31m-                    <!-- "更新不可"条件: -->[m
[31m-                    <!-- 1) [1,2,3,4]全てが3の場合 -->[m
[31m-                    <!-- （wp4が存在しない場合は全工程揃ってないが、本要件では4がないならここに該当しないはず） -->[m
[31m-                    <!-- 2) [1,2,3]が3でwp4が4 -->[m
[31m-                    <!-- 3) 上部条件でwork_process.nil?は既に別ケースで対応済 -->[m
[31m-                    <% elsif (wp1_complete && wp2_complete && wp3_complete && wp4_status == 3) ||[m
[31m-                        (wp1_complete && wp2_complete && wp3_complete && wp4_status == 4) %>[m
[31m-                        <% button_label = "更新不可" %>[m
[31m-                        <% button_disabled = true %>[m
[31m-                    <!-- 上記以外は"作業開始" -->[m
[31m-                    <% else %>[m
[31m-                        <% button_label = "作業開始" %>[m
[31m-                        <% button_disabled = false %>[m
[31m-                    <% end %>[m
[31m-                <% end %>[m
[31m-[m
[31m-                <div class="w-full px-2 py-2">[m
[31m-                    <table class="w-full bg-white shadow rounded-lg overflow-hidden border-collapse border border-gray-200">[m
[31m-                        <thead>[m
[31m-                            <tr>[m
[31m-                                <th class="w-1/4 px-4 py-4 text-gray-700 font-bold text-left border-b">会社名</th>[m
[31m-                                <td class="w-1/4 px-4 py-4 text-gray-700 text-center border-b"><%= machine&.company&.name %></td>[m
[31m-                            </tr>[m
[31m-                        </thead>[m
[31m-                        <tbody>[m
[31m-                            <tr>[m
[31m-                                <th class="w-1/4 px-4 py-4 text-gray-700 font-bold text-left border-b">織機名</th>[m
[31m-                                <td class="w-1/4 px-4 py-4 text-gray-700 text-center border-b"><%= machine&.name %></td>[m
[31m-                            </tr>[m
[31m-                            <tr>[m
[31m-                                <th class="w-1/4 px-4 py-4 text-gray-700 font-bold text-left border-b">現在の作業状況</th>[m
[31m-                                <td class="w-1/4 px-4 py-4 text-gray-700 text-center border-b"><%= work_process_name(machine) %></td>[m
[31m-                            </tr>[m
[31m-                            <tr>[m
[31m-                                <th class="w-1/4 px-4 py-4 text-gray-700 font-bold text-left border-b">織機の稼働状況</th>[m
[31m-                                <td class="w-1/4 px-4 py-4 text-gray-700 text-center border-b"><%= machine&.latest_machine_status&.name %></td>[m
[31m-                            </tr>[m
[31m-                            <tr>[m
[31m-                                <td colspan="2" class="px-4 py-2">[m
[31m-                                    <div class="flex justify-center space-x-2">[m
[31m-                                    <%= form_with url: update_home_path, method: :patch, local: true do %>[m
[31m-                                        <%= hidden_field_tag :machine_id, machine.id %>[m
[31m-                                        <% if work_process.present? %>[m
[31m-                                            <%= hidden_field_tag :order_id, work_process.order_id %>[m
[31m-                                        <% end %>[m
[31m-                                        <%= submit_tag button_label, name: 'commit',[m
[31m-                                                        class: "rounded-full w-32 h-32 text-white text-xl font-semibold #{button_disabled ? 'bg-gray-300 cursor-not-allowed' : 'bg-blue-500 hover:bg-blue-700'}",[m
[31m-                                                        disabled: button_disabled %>[m
[31m-                                    <% end %>[m
[31m-                                    </div>[m
[31m-                                </td>[m
[31m-                            </tr>[m
[31m-                        </tbody>[m
[31m-                    </table>[m
[31m-                </div>[m
[31m-            <% end %>[m
[31m-        </div>[m
[31m-    <% else %>[m
[31m-        <p class="text-center text-rose-500">表示するデータがありません。</p>[m
[31m-    <% end %>[m
[31m-</section>[m
-e 

=========================================================
-e ファイル: app/views/home/index.html_react.erb
-e =========================================================

[1mdiff --git a/app/views/home/index.html_react.erb b/app/views/home/index.html_react.erb[m
[1mdeleted file mode 100644[m
[1mindex e6d552f..0000000[m
[1m--- a/app/views/home/index.html_react.erb[m
[1m+++ /dev/null[m
[36m@@ -1,182 +0,0 @@[m
[31m-<!DOCTYPE html>[m
[31m-<html lang="ja">[m
[31m-<head>[m
[31m-    <meta charset="UTF-8">[m
[31m-    <meta name="viewport" content="width=device-width, initial-scale=1.0">[m
[31m-    <title>React版ホーム画面</title>[m
[31m-    <style>[m
[31m-        body {[m
[31m-            font-family: Arial, sans-serif;[m
[31m-            padding: 20px;[m
[31m-        }[m
[31m-        .machine-card {[m
[31m-            border: 1px solid #ccc;[m
[31m-            border-radius: 8px;[m
[31m-            padding: 20px;[m
[31m-            margin-bottom: 20px;[m
[31m-            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);[m
[31m-        }[m
[31m-        .button {[m
[31m-            padding: 10px 20px;[m
[31m-            border: none;[m
[31m-            border-radius: 4px;[m
[31m-            cursor: pointer;[m
[31m-            color: white;[m
[31m-            font-size: 16px;[m
[31m-        }[m
[31m-        .start {[m
[31m-            background-color: #4CAF50;[m
[31m-        }[m
[31m-        .end {[m
[31m-            background-color: #FF5733;[m
[31m-        }[m
[31m-        .disabled {[m
[31m-            background-color: #ccc;[m
[31m-            cursor: not-allowed;[m
[31m-        }[m
[31m-    </style>[m
[31m-</head>[m
[31m-<body>[m
[31m-    <h1 class="px-4 py-2 text-3xl font-bold text-gray-700 mt-6 mb-6 text-center">ホーム画面</h1>[m
[31m-    <div id="app"></div>[m
[31m-[m
[31m-    <!-- React and ReactDOM from CDN -->[m
[31m-    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>[m
[31m-    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>[m
[31m-    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/7.23.9/babel.min.js"></script>[m
[31m-[m
[31m-    <script type="text/babel">[m
[31m-        // 仮の機械データ（RailsからAPI経由で取得することを想定）[m
[31m-        const initialMachines = [[m
[31m-            {[m
[31m-                id: 1,[m
[31m-                companyName: "会社A",[m
[31m-                machineName: "織機1",[m
[31m-                workProcessName: "作業工程1",[m
[31m-                machineStatus: "稼働中",[m
[31m-                buttonLabel: "作業開始",[m
[31m-                disabled: false[m
[31m-            },[m
[31m-            {[m
[31m-                id: 2,[m
[31m-                companyName: "会社B",[m
[31m-                machineName: "織機2",[m
[31m-                workProcessName: "作業工程2",[m
[31m-                machineStatus: "準備中",[m
[31m-                buttonLabel: "作業終了",[m
[31m-                disabled: false[m
[31m-            },[m
[31m-            {[m
[31m-                id: 3,[m
[31m-                companyName: "会社C",[m
[31m-                machineName: "織機3",[m
[31m-                workProcessName: "作業工程なし",[m
[31m-                machineStatus: "不明",[m
[31m-                buttonLabel: "更新不可",[m
[31m-                disabled: true[m
[31m-            }[m
[31m-        ];[m
[31m-[m
[31m-        function MachineCard({ machine, handleUpdate }) {[m
[31m-            return ([m
[31m-                <div className="machine-card">[m
[31m-                    <table className="w-full bg-white shadow rounded-lg overflow-hidden border-collapse border border-gray-200">[m
[31m-                        <thead>[m
[31m-                            <tr>[m
[31m-                                <th className="w-1/4 px-4 py-4 text-gray-700 font-bold text-left border-b">会社名</th>[m
[31m-                                <td className="w-1/4 px-4 py-4 text-gray-700 text-center border-b">{machine.companyName}</td>[m
[31m-                            </tr>[m
[31m-                        </thead>[m
[31m-                        <tbody>[m
[31m-                            <tr>[m
[31m-                                <th className="w-1/4 px-4 py-4 text-gray-700 font-bold text-left border-b">織機名</th>[m
[31m-                                <td className="w-1/4 px-4 py-4 text-gray-700 text-center border-b">{machine.machineName}</td>[m
[31m-                            </tr>[m
[31m-                            <tr>[m
[31m-                                <th className="w-1/4 px-4 py-4 text-gray-700 font-bold text-left border-b">現在の作業状況</th>[m
[31m-                                <td className="w-1/4 px-4 py-4 text-gray-700 text-center border-b">{machine.workProcessName}</td>[m
[31m-                            </tr>[m
[31m-                            <tr>[m
[31m-                                <th className="w-1/4 px-4 py-4 text-gray-700 font-bold text-left border-b">織機の稼働状況</th>[m
[31m-                                <td className="w-1/4 px-4 py-4 text-gray-700 text-center border-b">{machine.machineStatus}</td>[m
[31m-                            </tr>[m
[31m-                            <tr>[m
[31m-                                <td colSpan="2" className="px-4 py-2">[m
[31m-                                    <div className="flex justify-center space-x-2">[m
[31m-                                        <button[m
[31m-                                            className={`button ${machine.buttonLabel === '作業開始' ? 'start' : 'end'} ${machine.disabled ? 'disabled' : ''}`}[m
[31m-                                            disabled={machine.disabled}[m
[31m-                                            onClick={() => handleUpdate(machine.id, machine.buttonLabel)}[m
[31m-                                        >[m
[31m-                                            {machine.buttonLabel}[m
[31m-                                        </button>[m
[31m-                                    </div>[m
[31m-                                </td>[m
[31m-                            </tr>[m
[31m-                        </tbody>[m
[31m-                    </table>[m
[31m-                </div>[m
[31m-            );[m
[31m-        }[m
[31m-[m
[31m-        export default function App() {[m
[31m-            const [machines, setMachines] = React.useState(initialMachines);[m
[31m-[m
[31m-            const handleUpdate = (machineId, action) => {[m
[31m-                console.log(`機械ID: ${machineId}, アクション: ${action}`);[m
[31m-[m
[31m-                // Railsバックエンドにリクエストを送信[m
[31m-                fetch('/update_home', {[m
[31m-                    method: 'PATCH',[m
[31m-                    headers: {[m
[31m-                        'Content-Type': 'application/json',[m
[31m-                        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content[m
[31m-                    },[m
[31m-                    body: JSON.stringify({[m
[31m-                        machine_id: machineId,[m
[31m-                        commit: action[m
[31m-                    })[m
[31m-                })[m
[31m-                .then(response => {[m
[31m-                    if (!response.ok) {[m
[31m-                        throw new Error('サーバーエラーが発生しました');[m
[31m-                    }[m
[31m-                    return response.json();[m
[31m-                })[m
[31m-                .then(data => {[m
[31m-                    alert(`サーバーメッセージ: ${data.message}`);[m
[31m-[m
[31m-                    // UIを更新する（例: 作業が終了したらボタン無効化）[m
[31m-                    const updatedMachines = machines.map(machine => {[m
[31m-                        if (machine.id === machineId) {[m
[31m-                            return {[m
[31m-                                ...machine,[m
[31m-                                buttonLabel: "更新不可",[m
[31m-                                disabled: true,[m
[31m-                                machineStatus: action === "作業開始" ? "進行中" : "完了"[m
[31m-                            };[m
[31m-                        }[m
[31m-                        return machine;[m
[31m-                    });[m
[31m-                    setMachines(updatedMachines);[m
[31m-                })[m
[31m-                .catch(error => {[m
[31m-                    console.error('エラー:', error);[m
[31m-                    alert('更新に失敗しました。');[m
[31m-                });[m
[31m-            };[m
[31m-[m
[31m-            return ([m
[31m-                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">[m
[31m-                    {machines.map(machine => ([m
[31m-                        <MachineCard key={machine.id} machine={machine} handleUpdate={handleUpdate} />[m
[31m-                    ))}[m
[31m-                </div>[m
[31m-            );[m
[31m-        }[m
[31m-[m
[31m-        const root = ReactDOM.createRoot(document.getElementById('app'));[m
[31m-        root.render(<App />);[m
[31m-    </script>[m
[31m-</body>[m
[31m-</html>[m
-e 

=========================================================
-e ファイル: app/views/layouts/application.html.erb
-e =========================================================

[1mdiff --git a/app/views/layouts/application.html.erb b/app/views/layouts/application.html.erb[m
[1mindex d6d56d4..92daa0f 100644[m
[1m--- a/app/views/layouts/application.html.erb[m
[1m+++ b/app/views/layouts/application.html.erb[m
[36m@@ -12,14 +12,13 @@[m
     <link rel="icon" href="/icon.svg" type="image/svg+xml">[m
     <link rel="apple-touch-icon" href="/icon.png">[m
     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/frappe-gantt/0.5.0/frappe-gantt.css">[m
[31m-    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">[m
[32m+[m[32m    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">[m
[32m+[m[32m    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">[m
     <script src="https://cdnjs.cloudflare.com/ajax/libs/frappe-gantt/0.5.0/frappe-gantt.min.js"></script>[m
[31m-    <%= stylesheet_link_tag "tailwind", "inter-font", "data-turbo-track": "reload" %>[m
[32m+[m[32m    <%= stylesheet_link_tag "tailwind.css", "inter-font", "data-turbo-track": "reload" %>[m
     <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>[m
     <%= javascript_importmap_tags %>[m
[31m-    <%# javascript_include_tag "turbo", type: "module" %>[m
[31m-    <%= javascript_import_module_tag "orderform_no_react", defer: true %>[m
[31m-[m
[32m+[m[32m    <%= javascript_include_tag "turbo", type: "module" %>[m
   </head>[m
 [m
   <body class="flex flex-col items-center bg-gray-100 min-h-screen">[m
[36m@@ -28,18 +27,15 @@[m
       <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">[m
         <div class="flex justify-between h-16">[m
           <!-- ロゴまたはアプリケーション名 -->[m
[31m-<!-- ロゴまたはアプリケーション名 -->[m
[31m-<div class="flex items-center">[m
[32m+[m[32m          <div class="flex items-center">[m
             <% if logged_in? %>[m
               <% if current_user.admin? %>[m
[31m-      <%= link_to 'LooMa | 発注企業', admin_root_path, class: "text-xl font-bold text-gray-700" %>[m
[32m+[m[32m                <%= link_to 'LooMa', admin_root_path, class: "text-xl font-bold text-gray-700" %>[m
               <% else %>[m
[31m-      <%= link_to 'LooMa | 生産企業', root_path, class: "text-xl font-bold text-gray-700" %>[m
[32m+[m[32m                <%= link_to 'LooMa', root_path, class: "text-xl font-bold text-gray-700" %>[m
               <% end %>[m
[31m-  <% else %>[m
[31m-    <div class='text-xl font-bold text-gray-700'>LooMa | 織物生産管理システム</div>[m
             <% end %>[m
[31m-</div>[m
[32m+[m[32m          </div>[m
           <!-- デスクトップメニュー -->[m
           <div class="hidden md:flex items-center space-x-4" id="navbarMenu">[m
             <% if logged_in? %>[m
[36m@@ -55,10 +51,9 @@[m
                 <p><%= link_to "織機一覧", machines_path, class: "block px-2 py-2 rounded-md font-semibold text-gray-700 hover:bg-gray-200" %></p>[m
                 <p><%= link_to "織機の登録", new_machine_path, class: "block px-2 py-2 rounded-md font-semibold text-gray-700 hover:bg-gray-200" %></p>[m
                 <p><%= link_to "受注一覧", orders_path, class: "block px-2 py-2 rounded-md font-semibold text-gray-700 hover:bg-gray-200" %></p>[m
[32m+[m[32m                <p><%= link_to "ユーザー情報", user_path(current_user), class: "block px-2 py-2 rounded-md font-semibold text-gray-700 hover:bg-gray-200" %></p>[m
               <% end %>[m
[31m-            <p><%= button_to "ログアウト", logout_path, method: :delete,[m
[31m-                form: { data: { turbo_confirm: "ログアウトしますか？" }, class: "inline" },[m
[31m-                class: "text-rose-500 hover:bg-gray-200 px-2 py-2 rounded-md font-semibold" %></p>[m
[32m+[m[32m            <p><%= link_to "ログアウト", logout_path, data: { turbo_method: :delete }, class: "block px-2 py-2 rounded-md font-semibold text-rose-500 hover:bg-gray-200" %></p>[m
             <% else %>[m
               <%# 未ログイン時のナビゲーション %>[m
               <p><%= link_to "ログイン", login_path, class: "block px-2 py-2 rounded-md font-semibold text-gray-700 hover:bg-gray-200" %></p>[m
[36m@@ -98,10 +93,9 @@[m
               <li><%= link_to "織機一覧", machines_path, class: "block px-2 py-2 rounded-md font-semibold text-gray-700 hover:bg-gray-200" %></li>[m
               <li><%= link_to "機械の登録", new_machine_path, class: "block px-2 py-2 rounded-md font-semibold text-gray-700 hover:bg-gray-200" %></li>[m
               <li><%= link_to "受注一覧", orders_path, class: "block px-2 py-2 rounded-md font-semibold text-gray-700 hover:bg-gray-200" %></li>[m
[32m+[m[32m              <li><%= link_to "ユーザー情報", user_path(current_user), class: "block px-2 py-2 rounded-md font-semibold text-gray-700 hover:bg-gray-200" %></li>[m
             <% end %>[m
[31m-          <li><%= button_to "ログアウト", logout_path, method: :delete,[m
[31m-              form: { data: { turbo_confirm: "ログアウトしますか？" }, class: "inline" },[m
[31m-              class: "text-rose-500 hover:bg-gray-200 px-2 py-2 rounded-md font-semibold" %></li>[m
[32m+[m[32m          <li><%= link_to "ログアウト", logout_path, data: { turbo_method: :delete }, class: "block px-2 py-2 rounded-md font-semibold text-rose-500 hover:bg-gray-200" %></li>[m
           <% else %>[m
             <%# 未ログイン時のナビゲーション %>[m
             <li><%= link_to "ログイン", login_path, class: "block px-2 py-2 rounded-md font-semibold text-gray-700 hover:bg-gray-200" %></li>[m
-e 

=========================================================
-e ファイル: app/views/machines/edit.html.erb
-e =========================================================

[1mdiff --git a/app/views/machines/edit.html.erb b/app/views/machines/edit.html.erb[m
[1mindex ca5c73c..ff2b491 100644[m
[1m--- a/app/views/machines/edit.html.erb[m
[1m+++ b/app/views/machines/edit.html.erb[m
[36m@@ -31,8 +31,8 @@[m
                     </label>[m
                 </div>[m
                 <div class="md:w-2/3">[m
[31m-                    <%= form.collection_select :machine_type_id, MachineType.all, :id, :name,[m
[31m-                        { prompt: "織機のタイプを選択してください" },[m
[32m+[m[32m                    <%= form.collection_select :machine_type_id, MachineType.all.order(:id), :id, :name,[m
[32m+[m[32m                        { prompt: "織機のタイプを選択してください"},[m
                         { class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none" } %>[m
                 </div>[m
             </div>[m
[36m@@ -44,7 +44,7 @@[m
                 </div>[m
                 <div class="md:w-2/3">[m
                     <%= form.collection_select :machine_status_id, MachineStatus.all, :id, :name,[m
[31m-                        { prompt: "稼働状況を選択してください" },[m
[32m+[m[32m                        { prompt: "稼働状況を選択してください", selected: @machine.machine_assignments.first&.machine_status_id },[m
                         { class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none" } %>[m
                 </div>[m
             </div>[m
-e 

=========================================================
-e ファイル: app/views/machines/new.html.erb
-e =========================================================

[1mdiff --git a/app/views/machines/new.html.erb b/app/views/machines/new.html.erb[m
[1mindex ca28546..6375f5b 100644[m
[1m--- a/app/views/machines/new.html.erb[m
[1m+++ b/app/views/machines/new.html.erb[m
[36m@@ -23,7 +23,7 @@[m
                 <div class="md:w-2/3">[m
                     <%= f.collection_select :machine_type_id, MachineType.all, :id, :name,[m
                         { prompt: "織機のタイプを選択してください" },[m
[31m-                        { class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none" } %>[m
[32m+[m[32m                        { required: true, class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none" } %>[m
                 </div>[m
             </div>[m
         </table>[m
-e 

=========================================================
-e ファイル: app/views/sessions/new.html.erb
-e =========================================================

[1mdiff --git a/app/views/sessions/new.html.erb b/app/views/sessions/new.html.erb[m
[1mindex a673c18..59ffa9a 100644[m
[1m--- a/app/views/sessions/new.html.erb[m
[1m+++ b/app/views/sessions/new.html.erb[m
[36m@@ -5,79 +5,26 @@[m
             <h1 class="text-center text-2xl font-bold text-gray-800 sm:text-3xl mt-6 mb-6">ログイン</h1>[m
             <div class="space-y-6">[m
                 <div>[m
[31m-                    <%= form.label :email, class: "block text-md font-semibold text-gray-900" %>[m
[32m+[m[32m                    <label for="email" class="block text-md font-semibold text-gray-900">[m
[32m+[m[32m                        <%= form.label :email %>[m
[32m+[m[32m                    </label>[m
                     <div class="mt-2">[m
                         <%= form.email_field :email, required: true, class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>[m
                     </div>[m
                 </div>[m
                 <div>[m
[31m-                    <%= form.label :password, class: "block text-md font-semibold text-gray-900" %>[m
[32m+[m[32m                    <label for="password" class="block text-md font-semibold text-gray-900">[m
[32m+[m[32m                        <%= form.label :password %>[m
[32m+[m[32m                    </label>[m
                     <div class="mt-2">[m
                         <%= form.password_field :password, required: true, class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>[m
                     </div>[m
                 </div>[m
             </div>[m
[31m-            <div class="mt-6 mb-6">[m
[32m+[m[32m            <div class="mt-6">[m
                 <%= form.submit "ログイン", class: "w-full px-4 py-2 bg-indigo-600 text-white font-semibold rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2" %>[m
             </div>[m
[31m-[m
[31m-            <!-- デモアカウント情報セクション (ログインフォームと同じコンテナ内) -->[m
[31m-            <div class="border border-gray-200 rounded-lg overflow-hidden">[m
[31m-                <!-- デモアカウントヘッダー -->[m
[31m-                <div class="bg-indigo-50 px-4 py-3 border-b border-gray-200">[m
[31m-                    <h3 class="font-bold text-indigo-800">採用担当者様向けデモアカウント</h3>[m
[31m-                </div>[m
[31m-[m
[31m-                <!-- 発注企業セクション -->[m
[31m-                <div class="border-b border-gray-200">[m
[31m-                    <div class="bg-gray-100 px-4 py-2 font-bold">[m
[31m-                        【発注企業】[m
[31m-                    </div>[m
[31m-                    <div class="p-4">[m
[31m-                        <div class="flex items-center justify-between">[m
[31m-                            <div>[m
[31m-                                <p class="mb-1">メール: <span class="font-mono">aaa@example.com</span></p>[m
[31m-                                <p>パスワード: <span class="font-mono">password</span></p>[m
[31m-                            </div>[m
[31m-                            <button id="autofill1" class="bg-indigo-600 hover:bg-indigo-700 text-white text-sm font-medium py-2 px-2 rounded">[m
[31m-                                自動入力[m
[31m-                            </button>[m
[31m-                        </div>[m
[31m-                    </div>[m
[31m-                </div>[m
[31m-[m
[31m-                <!-- 受注企業セクション -->[m
[31m-                <div>[m
[31m-                    <div class="bg-gray-100 px-4 py-2 font-bold">[m
[31m-                        【受注企業】[m
[31m-                    </div>[m
[31m-                    <div class="p-4">[m
[31m-                        <div class="flex items-center justify-between">[m
[31m-                            <div>[m
[31m-                                <p class="mb-1">メール: <span class="font-mono">bbb@example.com</span></p>[m
[31m-                                <p>パスワード: <span class="font-mono">password</span></p>[m
[31m-                            </div>[m
[31m-                            <button id="autofill2" class="bg-indigo-600 hover:bg-indigo-700 text-white text-sm font-medium py-2 px-2 rounded">[m
[31m-                                自動入力[m
[31m-                            </button>[m
[31m-                        </div>[m
[31m-                    </div>[m
[31m-                </div>[m
[31m-            </div>[m
         </div>[m
     </div>[m
 </section>[m
 <% end %>[m
[31m-[m
[31m-<!-- 自動入力のためのJavaScript -->[m
[31m-<script>[m
[31m-  document.getElementById('autofill1').addEventListener('click', function() {[m
[31m-    document.querySelector('input[name="session[email]"]').value = 'aaa@example.com';[m
[31m-    document.querySelector('input[name="session[password]"]').value = 'password';[m
[31m-  });[m
[31m-[m
[31m-  document.getElementById('autofill2').addEventListener('click', function() {[m
[31m-    document.querySelector('input[name="session[email]"]').value = 'bbb@example.com';[m
[31m-    document.querySelector('input[name="session[password]"]').value = 'password';[m
[31m-  });[m
[31m-</script>[m
-e 

=========================================================
-e ファイル: config/environments/production.rb
-e =========================================================

[1mdiff --git a/config/environments/production.rb b/config/environments/production.rb[m
[1mindex 9cdfab7..de6c1b8 100644[m
[1m--- a/config/environments/production.rb[m
[1m+++ b/config/environments/production.rb[m
[36m@@ -102,9 +102,4 @@[m [mRails.application.configure do[m
   # ][m
   # Skip DNS rebinding protection for the default health check endpoint.[m
   # config.host_authorization = { exclude: ->(request) { request.path == "/up" } }[m
[31m-[m
[31m-    # 許可するホスト名を追加[m
[31m-  config.hosts << "looma.jp"[m
[31m-  config.hosts << "www.looma.jp"[m
[31m-[m
 end[m
-e 

=========================================================
-e ファイル: config/importmap.rb
-e =========================================================

[1mdiff --git a/config/importmap.rb b/config/importmap.rb[m
[1mindex a962eba..dbdd658 100644[m
[1m--- a/config/importmap.rb[m
[1m+++ b/config/importmap.rb[m
[36m@@ -6,4 +6,9 @@[m [mpin "@hotwired/stimulus", to: "stimulus.min.js"[m
 pin "@hotwired/stimulus-loading", to: "stimulus-loading.js"[m
 pin "gantt-fix", to: "frappe-gantt.es.js"[m
 pin_all_from "app/javascript/controllers", under: "controllers"[m
[31m-pin "orderform_no_react"[m
[32m+[m
[32m+[m[32m# Bootstrap 4のJavaScript（bundle版）[m
[32m+[m[32mpin "bootstrap", to: "https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"[m
[32m+[m
[32m+[m[32m# jQuery[m
[32m+[m[32mpin "jquery", to: "https://code.jquery.com/jquery-3.6.4.min.js"[m
-e 

=========================================================
-e ファイル: config/routes.rb
-e =========================================================

[1mdiff --git a/config/routes.rb b/config/routes.rb[m
[1mindex de8334d..bda1676 100644[m
[1m--- a/config/routes.rb[m
[1m+++ b/config/routes.rb[m
[36m@@ -45,6 +45,7 @@[m [mRails.application.routes.draw do[m
       get 'past_orders'[m
     end[m
   end[m
[32m+[m[32m  resources :users[m
   root to: 'home#index'[m
   # HomeControllerのupdateアクションを定義[m
   patch 'home/update', to: 'home#update', as: 'update_home'[m
