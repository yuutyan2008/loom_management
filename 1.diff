--- ./app/views/admin/machines/gant_index.html.erb	2024-12-14 22:22:27.000000000 +0900
+++ ./app/views/admin/machines/gant_index.html_copy.erb	2024-12-14 22:23:46.000000000 +0900
@@ -4,8 +4,6 @@
     /* テーブル全体の背景色を白に設定 */
     .gantt-wrap {
         background-color: #ffffff; /* 背景色を白に設定 */
-        display: flex;
-        align-items: flex-start; /* 子要素の垂直方向の整列を上に揃える */
     }
 
     /* 内部のテーブルの背景を白に設定 */
@@ -22,38 +20,27 @@
     g.bar-wrapper.class-b rect.bar-progress {
         fill: #2ecc71 !important; /* 緑 */
     }
-
-    #gantt {
-        flex-grow: 1; /* ガント・チャートが横方向に広がる */
-        height: auto; /* 自作表と高さを同期するため動的に調整 */
-    }
-
-    #gant-header-table {
-        flex-grow: 0; /* 自作表の横幅を固定 */
-        height: auto; /* 自作表とガントの高さを同期するため動的に調整 */
-        overflow: hidden; /* コンテンツがはみ出る場合を隠す */
-    }
 </style>
 
 <div class="gantt-wrap flex min-w-[800px]">
     <table id="gant-header-table" class="flex-none w-1/3 border border-gray-300" style="border-spacing: 0px !important;">
-        <thead class="">
+        <thead class="pb-20">
             <tr class="border border-gray-300">
-                <th class="" style="height: 55px;">品番</th>
-                <th class="">会社</th>
-                <th class="">織機</th>
-                <th class="">ステータス</th>
+                <th class="p-5" style="height: 55px;">品番</th>
+                <th class="pt-5">会社</th>
+                <th class="pt-5">織機</th>
+                <th class="pt-5">ステータス</th>
             </tr>
         </thead>
         <tbody>
             <% JSON.parse(@orders).group_by { |order| order["custom_index"] }.each do |order_id, grouped_orders| %>
-            <tr class="border border-gray-300" style="">
-                <td class="text-xs border border-gray-300" style=""><%= grouped_orders.first["product_number"] %></td>
-                <td class="text-xs border border-gray-300" style=""><%= grouped_orders.first["company"] %></td>
-                <td class="text-xs border border-gray-300" style="">
+            <tr class="border border-gray-300" style="height: 186.76px; box-sizing: content-box;">
+                <td class="text-xs border border-gray-300" style="height: 186.76px; box-sizing: content-box;"><%= grouped_orders.first["product_number"] %></td>
+                <td class="text-xs border border-gray-300" style="height: 186.76px; box-sizing: content-box;"><%= grouped_orders.first["company"] %></td>
+                <td class="text-xs border border-gray-300" style="height: 186.76px; box-sizing: content-box;">
                     <%= grouped_orders.map { |order| order["machine"] }.uniq.join(", ") %>
                 </td>
-                <td class="" style="">
+                <td class="text-xs border border-gray-300" style="height: 186.76px; box-sizing: content-box;">
                     <% work_process = WorkProcess.current_work_process %> <%= work_process&.work_process_status&.name || "未設定" %>
                 </td>
             </tr>
@@ -81,37 +68,26 @@
         // ガント・チャート描画後に行の高さを取得して表に反映
         setTimeout(() => {
             syncRowHeights();
-        }, 200); // ガント・チャート描画が完了するまで待機
+      }, 500); // ガント・チャート描画が完了するまで待機
 
     function syncRowHeights() {
-
         // ガント・チャート内の各バーの行を取得
-        const ganttRows = document.querySelectorAll("#gantt rect.grid-row");
-        const tableRows = document.querySelectorAll("#gant-header-table tbody tr td");
+          const ganttRows = document.querySelectorAll("#gantt .bar-wrapper");
+          const tableRows = document.querySelectorAll("#gant-header-table tbody tr");
 
         ganttRows.forEach((ganttRow, index) => {
             // 対応する表の行が存在する場合のみ
             if (tableRows[index]) {
-                let ganttRowHeight = ganttRow.getBoundingClientRect().height;
+                  const ganttRowHeight = ganttRow.getBoundingClientRect().height;
 
                 console.log("ganttRowHeight=" + ganttRowHeight);
-                ganttRowHeight = (ganttRowHeight * 5) - 3;
-
-                // 表の行のスタイルを設定
-                tableRows[index].style.setProperty("height", `${ganttRowHeight}px`, "important");
-                tableRows[index].style.setProperty("max-height", `${ganttRowHeight}px`, "important");
-                tableRows[index].style.setProperty("min-height", `${ganttRowHeight}px`, "important");
-                tableRows[index].style.setProperty("line-height", `${ganttRowHeight}px`, "important"); // 行内のテキストを中央揃え
-
+                  // 表の行の高さをガント・チャートの行の高さに揃える
+                  tableRows[index].style.height = `${ganttRowHeight}px`;
                 console.log("tableRows[index].style.height =" + tableRows[index].style.height);
             }
         });
     }
 
-    window.addEventListener("resize", () => {
-        syncRowHeights();
-    });
-
         //
           // 横軸の月ラベルを日本語に変更
           setTimeout(function () {
