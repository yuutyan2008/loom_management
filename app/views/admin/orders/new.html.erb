<% content_for :head do %>
  <meta name="turbo-visit-control" content="reload">
<% end %>
<h1 class="px-4 py-2 text-3xl font-bold text-gray-800 mt-6 mb-6 text-center">発注フォーム</h1>
<%# フォームが表示される前にエラーメッセージを表示するためform_withの前に書く %>
<% if @order.errors.any? %>
  <%# Railsがデフォルトで用意しているエラー用のスタイル（CSS）を適用 %>
  <div id="error_explanation">
    <h2><%= "#{@order.errors.count} 件のエラーが発生しました" %></h2>
    <ul>
      <% @order.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
    </ul>
  </div>
<% end %>
<%= form_with model: @order, url: admin_orders_path, local: true do |f| %>
  <section class="px-24">
    <p class="pb-4 text-rose-500 font-semibold">#発注フォームはすべて必須項目になります。</p>
    <div class="px-4 py-2 overflow-x-auto mb-6 whitespace-nowrap">
      <table class="w-full max-w-sm">
        <div class="md:flex md:items-center mb-6">
          <div class="md:w-1/3 py-2">
            <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center flex item-center mr-2">
              <%= f.label :name, "会社名" %>
              <div id="tooltip1" data-turbo="false" style="margin-left: 5px;"></div>
            </label>
          </div>
          <div class="md:w-2/3">
            <% if @companies.present? %>
              <%= f.collection_select :company_id, @companies, :id, :name, { prompt: "会社を選択してください" }, { class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none" } %>
            <% else %>
              <p class="text-red-500">会社データが存在しません。管理者にお問い合わせください。</p>
            <% end %>
            <i class="bi bi-question-circle" data-bs-toggle="tooltip" title="これはツールチップです"></i>
          </div>
        </div>
        <div class="md:flex md:items-center mb-6">
          <div class="md:w-1/3 py-2">
            <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center flex item-center mr-2">
              <%= f.label :product_number_id, "品番" %>
              <div id="tooltip2" data-turbo="false" style="margin-left: 5px;"></div>
            </label>
          </div>
          <div class="md:w-2/3">
            <%= f.collection_select :product_number_id, ProductNumber.all, :id, :number, { prompt: "品番を選択してください" }, { class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none" } %>
            <i class="bi bi-question-circle" data-bs-toggle="tooltip" title="これはツールチップです"></i>
          </div>
        </div>
        <div class="md:flex md:items-center mb-6">
          <div class="md:w-1/3 py-2">
            <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center flex item-center mr-2">
              <%= f.label :color_number_id, "色番" %>
              <div id="tooltip3" data-turbo="false" style="margin-left: 5px;"></div>
            </label>
          </div>
          <div class="md:w-2/3">
            <%= f.collection_select :color_number_id, ColorNumber.all, :id, :color_code, { prompt: "色番を選択してください" }, { class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none" } %>
            <i class="bi bi-question-circle" data-bs-toggle="tooltip" title="これはツールチップです"></i>
          </div>
        </div>
        <div id="react-root" data-roll-count="<%= @order.roll_count %>" data-quantity="<%= @order.quantity %>" data-turbo="false"></div>
        <div class="md:flex md:items-center mb-6">
          <div class="md:w-1/3 py-2">
            <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center flex item-center mr-2">
              <%= f.label :machine_type, "機械のタイプ" %>
              <span id="tooltip4" data-turbo="false" style="margin-left: 5px;"></span>
            </label>
          </div>
          <div class="md:w-2/3">
            <%= select_tag "order[work_processes][process_estimate][machine_type_id]",
                          options_from_collection_for_select(MachineType.all, :id, :name), { prompt: "織機のタイプを選択してください" } %>
            <i class="bi bi-question-circle" data-bs-toggle="tooltip" title="これはツールチップです"></i>
          </div>
        </div>
        <div class="md:flex md:items-center mb-6">
          <div class="md:w-1/3 py-2">
            <label class="w-1/3 px-4 py-2 text-gray-700 font-bold text-center flex item-center mr-2">
              <%= f.label :start_date, "作業開始日" %>
              <span id="tooltip5" data-turbo="false" style="margin-left: 5px;"></span>
            </label>
          </div>
          <div class="md:w-2/3">
            <%= text_field_tag 'order[work_processes][start_date]',
                          nil,
                          placeholder: "作業開始日を選択してください",
                          type: :date,
                          required: true,
                          class: "block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none" %>
          </div>
        </div>
      </table>
    </div>
  </section>
  <!-- 提出ボタン -->
  <section class="mb-12">
    <div class="flex justify-center space-x-2">
      <div class="px-2 py-2">
        <%= f.submit "発注", class: "inline-block px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-700" %>
      </div>
      <div class="px-2 py-2">
        <%= link_to "戻る", admin_orders_path, class: "inline-block px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-700" %>
      </div>
    </div>
  </section>
<% end %>
<script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
<script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>
<script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
<script type="text/babel">
  const { useState, useEffect } = React;

  function OrderForm() {

    const root = document.getElementById('react-root');
    const initialRollCount = root.getAttribute('data-roll-count') || '';
    const initialQuantity = root.getAttribute('data-quantity') || '';

    const [rollCount, setRollCount] = useState(initialRollCount);
    const [quantity, setQuantity] = useState(initialQuantity);

    useEffect(() => {
      document.querySelector('input[name="order[roll_count]"]').value = rollCount;
      document.querySelector('input[name="order[quantity]"]').value = quantity;
    }, [rollCount, quantity]);

    const handleInputChange = (setter) => (e) => {
      const value = e.target.value;
      if (/^\d{0,4}$/.test(value)) {
        setter(value);
      }
    };

    return (
      <div>
        <div className="md:flex md:items-center mb-6">
          <div className="md:w-1/3 py-2">
            <label className="w-1/3 px-4 py-2 text-gray-700 font-bold text-center">
              反数
              <TooltipIcon message="注文する商品の反数を入力します（商品1点あたりの反数、数量欄が2の場合は合計の反数は倍になります）。" top="2px"/>
            </label>
          </div>
          <div className="md:w-2/3">
            <input
              type="text"
              name="order[roll_count]"
              value={rollCount}
              onChange={handleInputChange(setRollCount)}
              placeholder="反数を入力してください"
              className="block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none"
            />
          </div>
        </div>

        <div className="md:flex md:items-center mb-6">
          <div className="md:w-1/3 py-2">
            <label className="w-1/3 px-4 py-2 text-gray-700 font-bold text-center">
              数量
              <TooltipIcon message="注文する商品の数量を入力します。" top="2px"/>
            </label>
          </div>
          <div className="md:w-2/3">
            <input
              type="text"
              name="order[quantity]"
              value={quantity}
              onChange={handleInputChange(setQuantity)}
              placeholder="数量を入力してください"
              className="block w-full rounded-md bg-white px-4 py-2 text-base text-gray-900 border border-gray-300 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm appearance-none"
            />
          </div>
        </div>

      </div>
    );
  }


  const TooltipIcon = ({ message = "No Message", top = "-6px"  }) => {
    const [visible, setVisible] = useState(false);

    const handleClick = () => {
      setVisible(!visible); // クリックするたびに表示・非表示を切り替える
    };

    const handleMouseEnter = () => {
      setVisible(true);
    };

    const handleMouseLeave = () => {
      setVisible(false);
    };

    return (
      <div
        className="custom-icon-wrapper"
        onClick={handleClick}
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        style={{
          fontSize: "24px",
          cursor: "pointer",
          position: "relative",
          display: "inline-block",
          top: top,
          marginLeft: "5px",
        }}
      >
        <i className="fas fa-question-circle" style={{ color: "lightgray" }}></i>
        {visible && (
          <div
            style={{
              position: "absolute",
              top: "-10px",
              left: "0",
              backgroundColor: "gray",
              color: "white",
              padding: "5px",
              borderRadius: "5px",
              whiteSpace: "nowrap",
              fontSize: "14px",
              zIndex: 1000,
              boxShadow: "0 2px 5px rgba(0, 0, 0, 0.2)",
            }}
          >
            {message}
          </div>
        )}
      </div>
    );
  };

  document.addEventListener("turbo:load", () => {
    const root = document.getElementById("react-root");
    if (root) {
      ReactDOM.render(<OrderForm />, root);
    }
    const tooltip1 = document.getElementById("tooltip1");
    if (tooltip1) {
      ReactDOM.render(<TooltipIcon message='発注先の会社名を選択します。' />, tooltip1);
    }
    const tooltip2 = document.getElementById("tooltip2");
    if (tooltip2) {
      ReactDOM.render(<TooltipIcon message='発注する商品の型をコードで選択します。' />, tooltip2);
    }
    const tooltip3 = document.getElementById("tooltip3");
    if (tooltip3) {
      ReactDOM.render(<TooltipIcon message='発注する商品の色をコードで選択します。' />, tooltip3);
    }
    const tooltip4 = document.getElementById("tooltip4");
    if (tooltip4) {
      ReactDOM.render(<TooltipIcon message='発注する商品を作成する織機のタイプを選択します。' />, tooltip4);
    }
    const tooltip5 = document.getElementById("tooltip5");
    if (tooltip5) {
      ReactDOM.render(<TooltipIcon message='作業開始日は、現時点での機屋が製織工程を開始する予定日を入力してください' />, tooltip5);
    }

  });
</script>
